{"info":{"_postman_id":"51ceee20-bc41-441d-a641-754c9e7b34d9","name":"Postman API","description":"The Postman API enables you to programmatically access data stored in your Postman account.\n\n## Important\n\n- You must pass an `Accept` header with the `application/vnd.api.v10+json` value to use v10 and higher endpoints. While some of these endpoints may appear the same as the deprecated Postman v9 endpoints, they will use the v10 behavior when you send this `Accept` header. For more information, see [About v9 and v10 APIs](https://learning.postman.com/docs/developer/postman-api/intro-api/#about-v9-and-v10-apis).\n- To use the **API** endpoints, you must first [update your APIs to the v10 format](https://learning.postman.com/docs/designing-and-developing-your-api/creating-an-api/#upgrading-an-api).\n    \n\n## Getting started\n\nYou can get started with the Postman API by [forking the Postman API collection](https://learning.postman.com/docs/collaborating-in-postman/version-control/#creating-a-fork) to your workspace. You can then use Postman to send requests.\n\n## About the Postman API\n\n- You must use a valid API Key to send requests to the API endpoints.\n- The API has [rate and usage limits](https://learning.postman.com/docs/developer/postman-api/postman-api-rate-limits/).\n- The API only responds to HTTPS-secured communications. Any requests sent via HTTP return an HTTP `301` redirect to the corresponding HTTPS resources.\n- The API returns requests responses in [JSON format](https://en.wikipedia.org/wiki/JSON). When an API request returns an error, it is sent in the JSON response as an error key.\n- The request method (verb) determines the nature of action you intend to perform. A request made using the `GET` method implies that you want to fetch something from Postman. The `POST` method implies you want to save something new to Postman.\n- For all requests, API calls respond with their corresponding [HTTP status codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes). In the Postman client, the status code also provides help text that details the possible meaning of the response code.\n- The API only responds to HTTPS-secured communications. Any requests sent via HTTP return an HTTP `301` redirect to the corresponding HTTPS resources.\n- The API returns requests responses in [JSON format](https://en.wikipedia.org/wiki/JSON). When an API request returns an error, it is sent in the JSON response as an error key.\n- The request method (verb) determines the nature of action you intend to perform. A request made using the `GET` method implies that you want to fetch something from Postman. The `POST` method implies you want to save something new to Postman.\n- For all requests, API calls respond with their corresponding [HTTP status codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes). In the Postman client, the status code also provides help text that details the possible meaning of the response code.\n    \n\n### IDs and UIDs\n\nAll items in Postman, such as collections, workspaces, and APIs, have IDs and UIDs:\n\n- An ID is the unique ID assigned to a Postman item. For example, `ec29121c-5203-409f-9e84-e83ffc10f226`.\n- The UID is the **full** ID of a Postman item. This value is the item's unique ID concatenated with the user ID. For example, in the `12345678-ec29121c-5203-409f-9e84-e83ffc10f226` UID:\n    - `12345678` is the user's ID.\n    - `ec29121c-5203-409f-9e84-e83ffc10f226` is the item's ID.\n\n### 503 response\n\nAn HTTP `503 Service Unavailable` response from our servers indicates there is an unexpected spike in API access traffic. The server is usually operational within the next five minutes. If the outage persists or you receive any other form of an HTTP `5XX` error, [contact support](https://support.postman.com/hc/en-us/requests/new/).\n\n## Authentication\n\nPostman uses API keys for authentication. The API key tells the API server that the request came from you. Everything that you have access to in Postman is accessible with your API key. You can [generate](https://learning.postman.com/docs/developer/postman-api/authentication/#generate-a-postman-api-key) a Postman API key in the [<b>API keys</b>](https://postman.postman.co/settings/me/api-keys) section of your Postman account settings.\n\nYou must include an API key in each request to the Postman API with the `X-Api-Key` request header. In Postman, you can store your API key as an [environment variable](https://www.getpostman.com/docs/environments). The Postman API [collection](https://www.getpostman.com/docs/collections) will use it to make API calls.\n\n### Authentication error response\n\nIf an API key is missing, malformed, or invalid, you will receive an HTTP `401 Unauthorized` response code.\n\n### Using the API key as a query parameter\n\nRequests that accept the `X-Api-Key` request header also accept the API key when you send it as the `apikey` query parameter. An API key sent as part of the header has a higher priority when you send the key as both a request header and a query parameter.\n\n## Rate and usage limits\n\nAPI access [rate limits](https://learning.postman.com/docs/developer/postman-api/postman-api-rate-limits/) apply at a per-user basis in unit time. The limit is **300 requests per minute**. Also, depending on your [plan](https://www.postman.com/pricing/), you may have usage limits. If you exceed either limit, your request will return an HTTP `429 Too Many Requests` status code.\n\nEach API response returns the following set of headers to help you identify your use status:\n\n| Header | Description |\n| --- | --- |\n| `X-RateLimit-Limit` | The maximum number of requests that the consumer is permitted to make per minute. |\n| `X-RateLimit-Remaining` | The number of requests remaining in the current rate limit window. |\n| `X-RateLimit-Reset` | The time at which the current rate limit window resets in UTC epoch seconds. |\n\n## Support\n\nFor help regarding accessing the Postman API, you can:\n\n- Visit [Postman Support](https://support.postman.com/hc/en-us) or our [Community and Support](https://www.postman.com/community/) sites.\n- Reach out to the [Postman community](https://community.postman.com/).\n- Submit a help request to [Postman support](https://support.postman.com/hc/en-us/requests/new/).\n    \n\n## Policies\n\n- [Postman Terms of Service](http://www.postman.com/legal/terms/)\n- [Postman Privacy Policy](https://www.postman.com/legal/privacy-policy/)","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"API","item":[{"name":"v10","item":[{"name":"Schema","item":[{"name":"Create a schema","id":"98806d09-6a2d-4d47-b77a-7d6d9ecd0366","protocolProfileBehavior":{"disableBodyPruning":true,"disabledSystemHeaders":{}},"request":{"method":"POST","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"type\": \"{{schemaType}}\",\n    \"files\": [\n        {\n            \"path\": \"{{filePath1}}\",\n            \"content\": \"{{content1}}\"\n        },\n         {\n            \"path\": \"{{filePath2}}\",\n            \"content\": \"{{content2}}\"\n        },\n         {\n            \"path\": \"{{filePath3}}\",\n            \"content\": \"{{content3}}\"\n        },\n         {\n            \"path\": \"{{filePath4}}\",\n            \"content\": \"{{content4}}\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas"]},"description":"Creates a schema for an API. The request body must contain the following:\n\n- `type` — A **string** value that contains the API schema's type. One of:\n    - `openapi:3_1`\n    - `openapi:3`\n    - `openapi:2`\n    - `openapi:1`\n    - `raml:0_8`\n    - `raml:1`\n    - `wsdl:1`\n    - `wsdl:2`\n    - `graphql`\n    - `proto:2`\n    - `proto:3`\n    - `asyncapi:2`\n- `files` — An **array** of schema files that contains the following:\n    - `path` — A **string** value that contains the schema file's path.\n    - `content` — A **string** value that contains the schema file's stringified contents."},"response":[{"id":"5b09e5e0-4095-4112-83bd-a63ae2a99fdd","name":"Create Schema","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"type\": \"openapi:3\",\n    \"files\": [\n        {\n            \"path\": \"swagger.json\",\n            \"content\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Sample API\\\",\\n    \\\"description\\\": \\\"Buy or rent spacecrafts\\\"\\n  },\\n  \\\"paths\\\": {\\n    \\\"/spacecrafts/{spacecraftId}\\\": {\\n      \\\"parameters\\\": [\\n        {\\n          \\\"name\\\": \\\"spacecraftId\\\",\\n          \\\"description\\\": \\\"The unique identifier of the spacecraft\\\",\\n          \\\"in\\\": \\\"path\\\",\\n          \\\"required\\\": true,\\n          \\\"schema\\\": {\\n            \\\"$ref\\\": \\\"#/components/schemas/SpacecraftId\\\"\\n          }\\n        }\\n      ],\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"Read a spacecraft\\\",\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"The spacecraft corresponding to the provided `spacecraftId`\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/Spacecraft\\\"\\n                }\\n              }\\n            }\\n          },\\n          \\\"404\\\": {\\n            \\\"description\\\": \\\"No spacecraft found for the provided `spacecraftId`\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/Error\\\"\\n                }\\n              }\\n            }\\n          },\\n          \\\"500\\\": {\\n            \\\"description\\\": \\\"Unexpected error\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/Error\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"SpacecraftId\\\": {\\n        \\\"description\\\": \\\"The unique identifier of a spacecraft\\\",\\n        \\\"type\\\": \\\"string\\\"\\n      },\\n      \\\"Spacecraft\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\",\\n          \\\"type\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"$ref\\\": \\\"#/components/schemas/SpacecraftId\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"type\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"enum\\\": [\\n              \\\"capsule\\\",\\n              \\\"probe\\\",\\n              \\\"satellite\\\",\\n              \\\"spaceplane\\\",\\n              \\\"station\\\"\\n            ]\\n          },\\n          \\\"description\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"message\\\": {\\n            \\\"description\\\": \\\"A human readable error message\\\",\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    },\\n    \\\"securitySchemes\\\": {\\n      \\\"ApiKey\\\": {\\n        \\\"type\\\": \\\"apiKey\\\",\\n        \\\"in\\\": \\\"header\\\",\\n        \\\"name\\\": \\\"X-Api-Key\\\"\\n      }\\n    }\\n  },\\n  \\\"security\\\": [\\n    {\\n      \\\"ApiKey\\\": []\\n    }\\n  ]\\n}\"\n        },\n        {\n            \"path\": \"Pet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"NewPet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"allOf\\\": [\\n    {\\n      \\\"$ref\\\": \\\"Pet.json\\\"\\n    },\\n    {\\n      \\\"required\\\": [\\n        \\\"name\\\"\\n      ],\\n      \\\"properties\\\": {\\n        \\\"description\\\": {\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"format\\\": \\\"int64\\\"\\n        }\\n      }\\n    }\\n  ]\\n}\"\n        },\n        {\n            \"path\": \"parameters.json\",\n            \"content\": \"{\\n  \\\"tagsParam\\\": {\\n    \\\"name\\\": \\\"tags\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"tags to filter by\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"array\\\",\\n    \\\"collectionFormat\\\": \\\"csv\\\",\\n    \\\"items\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  },\\n  \\\"limitsParam\\\": {\\n    \\\"name\\\": \\\"limit\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"maximum number of results to return\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"integer\\\",\\n    \\\"format\\\": \\\"int32\\\"\\n  }\\n}\"\n        },\n        {\n            \"path\": \"common/Error.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"code\\\",\\n    \\\"message\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"code\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int32\\\"\\n    },\\n    \\\"message\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas"]}},"status":"Created","code":201,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"openapi:3\",\n    \"files\": [\n        {\n            \"path\": \"NewPet.json\",\n            \"createdBy\": \"557089\",\n            \"id\": \"41a3d7fd-bf9a-4053-b20e-37453962b4d6\",\n            \"createdAt\": \"2023-03-21T10:10:54.000Z\",\n            \"name\": \"NewPet.json\",\n            \"updatedBy\": \"557089\",\n            \"updatedAt\": \"2023-03-21T10:10:54.000Z\"\n        },\n        {\n            \"path\": \"Pet.json\",\n            \"createdBy\": \"557089\",\n            \"id\": \"93502b81-9f47-45e1-94f7-64882c92519b\",\n            \"createdAt\": \"2023-03-21T10:10:54.000Z\",\n            \"name\": \"Pet.json\",\n            \"updatedBy\": \"557089\",\n            \"updatedAt\": \"2023-03-21T10:10:54.000Z\"\n        },\n        {\n            \"path\": \"common/Error.json\",\n            \"createdBy\": \"557089\",\n            \"id\": \"72f4e1c2-5bf8-4247-ab3c-42bcdcc9ae9c\",\n            \"createdAt\": \"2023-03-21T10:10:54.000Z\",\n            \"name\": \"Error.json\",\n            \"updatedBy\": \"557089\",\n            \"updatedAt\": \"2023-03-21T10:10:54.000Z\"\n        },\n        {\n            \"path\": \"parameters.json\",\n            \"createdBy\": \"557089\",\n            \"id\": \"2fdc8ea1-d02e-4e50-989e-6fa28f42b995\",\n            \"createdAt\": \"2023-03-21T10:10:54.000Z\",\n            \"name\": \"parameters.json\",\n            \"updatedBy\": \"557089\",\n            \"updatedAt\": \"2023-03-21T10:10:54.000Z\"\n        },\n        {\n            \"root\": {\n                \"enabled\": true\n            },\n            \"path\": \"swagger.json\",\n            \"createdBy\": \"557089\",\n            \"id\": \"b4fc1bdc-6587-4f9b-95c9-f768146089b4\",\n            \"createdAt\": \"2023-03-21T10:10:54.000Z\",\n            \"name\": \"swagger.json\",\n            \"updatedBy\": \"557089\",\n            \"updatedAt\": \"2023-03-21T10:10:54.000Z\"\n        }\n    ],\n    \"createdBy\": \"557089\",\n    \"createdAt\": \"2023-03-21T10:10:54.000Z\",\n    \"id\": \"b4fc1bdc-6587-4f9b-95c9-f768146089b4\",\n    \"updatedBy\": \"557089\",\n    \"updatedAt\": \"2023-03-21T10:10:54.000Z\"\n}"},{"id":"fdc436bf-9243-4998-9c64-f12a88ac88e8","name":"Forbidden","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"type\": \"openapi:3\",\n    \"files\": [\n        {\n            \"path\": \"swagger.json\",\n            \"content\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Sample API\\\",\\n    \\\"description\\\": \\\"Buy or rent spacecrafts\\\"\\n  },\\n  \\\"paths\\\": {\\n    \\\"/spacecrafts/{spacecraftId}\\\": {\\n      \\\"parameters\\\": [\\n        {\\n          \\\"name\\\": \\\"spacecraftId\\\",\\n          \\\"description\\\": \\\"The unique identifier of the spacecraft\\\",\\n          \\\"in\\\": \\\"path\\\",\\n          \\\"required\\\": true,\\n          \\\"schema\\\": {\\n            \\\"$ref\\\": \\\"#/components/schemas/SpacecraftId\\\"\\n          }\\n        }\\n      ],\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"Read a spacecraft\\\",\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"The spacecraft corresponding to the provided `spacecraftId`\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/Spacecraft\\\"\\n                }\\n              }\\n            }\\n          },\\n          \\\"404\\\": {\\n            \\\"description\\\": \\\"No spacecraft found for the provided `spacecraftId`\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/Error\\\"\\n                }\\n              }\\n            }\\n          },\\n          \\\"500\\\": {\\n            \\\"description\\\": \\\"Unexpected error\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/Error\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"SpacecraftId\\\": {\\n        \\\"description\\\": \\\"The unique identifier of a spacecraft\\\",\\n        \\\"type\\\": \\\"string\\\"\\n      },\\n      \\\"Spacecraft\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\",\\n          \\\"type\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"$ref\\\": \\\"#/components/schemas/SpacecraftId\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"type\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"enum\\\": [\\n              \\\"capsule\\\",\\n              \\\"probe\\\",\\n              \\\"satellite\\\",\\n              \\\"spaceplane\\\",\\n              \\\"station\\\"\\n            ]\\n          },\\n          \\\"description\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"message\\\": {\\n            \\\"description\\\": \\\"A human readable error message\\\",\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    },\\n    \\\"securitySchemes\\\": {\\n      \\\"ApiKey\\\": {\\n        \\\"type\\\": \\\"apiKey\\\",\\n        \\\"in\\\": \\\"header\\\",\\n        \\\"name\\\": \\\"X-Api-Key\\\"\\n      }\\n    }\\n  },\\n  \\\"security\\\": [\\n    {\\n      \\\"ApiKey\\\": []\\n    }\\n  ]\\n}\"\n        },\n        {\n            \"path\": \"Pet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"NewPet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"allOf\\\": [\\n    {\\n      \\\"$ref\\\": \\\"Pet.json\\\"\\n    },\\n    {\\n      \\\"required\\\": [\\n        \\\"name\\\"\\n      ],\\n      \\\"properties\\\": {\\n        \\\"description\\\": {\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"format\\\": \\\"int64\\\"\\n        }\\n      }\\n    }\\n  ]\\n}\"\n        },\n        {\n            \"path\": \"parameters.json\",\n            \"content\": \"{\\n  \\\"tagsParam\\\": {\\n    \\\"name\\\": \\\"tags\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"tags to filter by\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"array\\\",\\n    \\\"collectionFormat\\\": \\\"csv\\\",\\n    \\\"items\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  },\\n  \\\"limitsParam\\\": {\\n    \\\"name\\\": \\\"limit\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"maximum number of results to return\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"integer\\\",\\n    \\\"format\\\": \\\"int32\\\"\\n  }\\n}\"\n        },\n        {\n            \"path\": \"common/Error.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"code\\\",\\n    \\\"message\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"code\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int32\\\"\\n    },\\n    \\\"message\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"detail\": \"You do not have access to perform this operation.\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"type\": \"forbiddenError\"\n}"},{"id":"346852b4-9d96-467b-a03d-50c3a22834c2","name":"Create Schema with Proto","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"type\": \"proto:2\",\n    \"files\": [\n        {\n            \"path\": \"index.proto\",\n            \"content\": \"<file contents>\",\n            \"root\": {\n                \"enabled\": true\n            }\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas"]}},"status":"Created","code":201,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"proto:2\",\n    \"files\": [\n        {\n            \"path\": \"index.proto\",\n            \"createdBy\": \"557089\",\n            \"id\": \"41a3d7fd-bf9a-4053-b20e-37453962b4d6\",\n            \"createdAt\": \"2023-03-21T10:10:54.000Z\",\n            \"name\": \"index.proto\",\n            \"updatedBy\": \"557089\",\n            \"updatedAt\": \"2023-03-21T10:10:54.000Z\",\n            \"root\": {\n                \"enabled\": true\n            }\n        }\n    ],\n    \"createdBy\": \"557089\",\n    \"createdAt\": \"2023-03-21T10:10:54.000Z\",\n    \"id\": \"b4fc1bdc-6587-4f9b-95c9-f768146089b4\",\n    \"updatedBy\": \"557089\",\n    \"updatedAt\": \"2023-03-21T10:10:54.000Z\"\n}"},{"id":"2a19fbda-c984-4e76-996e-ecb35ed2c87f","name":"API Not Found","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"type\" : \"openapi:3\",\n    \"files\": [\n        {\n            \"path\": \"swagger.json\",\n            \"content\": \"{\\n  \\\"swagger\\\": \\\"2.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Swagger Petstore\\\",\\n    \\\"description\\\": \\\"A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification\\\",\\n    \\\"termsOfService\\\": \\\"http://swagger.io/terms/\\\",\\n    \\\"contact\\\": {\\n      \\\"name\\\": \\\"Swagger API Team\\\",\\n      \\\"email\\\": \\\"apiteam@swagger.io\\\",\\n      \\\"url\\\": \\\"http://swagger.io\\\"\\n    },\\n    \\\"license\\\": {\\n      \\\"name\\\": \\\"Apache 2.0\\\",\\n      \\\"url\\\": \\\"https://www.apache.org/licenses/LICENSE-2.0.html\\\"\\n    }\\n  },\\n  \\\"host\\\": \\\"petstore.swagger.io\\\",\\n  \\\"basePath\\\": \\\"/api\\\",\\n  \\\"schemes\\\": [\\n    \\\"http\\\"\\n  ],\\n  \\\"consumes\\\": [\\n    \\\"application/json\\\"\\n  ],\\n  \\\"produces\\\": [\\n    \\\"application/json\\\"\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/pets\\\": {\\n      \\\"get\\\": {\\n        \\\"description\\\": \\\"Returns all pets from the system that the user has access to\\\\nNam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.\\\\n\\\\nSed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.\\\\n\\\",\\n        \\\"operationId\\\": \\\"findPets\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"$ref\\\": \\\"parameters.json#/tagsParam\\\"\\n          },\\n          {\\n            \\\"$ref\\\": \\\"parameters.json#/limitsParam\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"array\\\",\\n              \\\"items\\\": {\\n                \\\"$ref\\\": \\\"Pet.json\\\"\\n              }\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      },\\n      \\\"post\\\": {\\n        \\\"description\\\": \\\"Creates a new pet in the store.  Duplicates are allowed\\\",\\n        \\\"operationId\\\": \\\"addPet\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"pet\\\",\\n            \\\"in\\\": \\\"body\\\",\\n            \\\"description\\\": \\\"Pet to add to the store\\\",\\n            \\\"required\\\": true,\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"NewPet.json\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"Pet.json\\\"\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      }\\n    },\\n    \\\"/pets/{id}\\\": {\\n      \\\"get\\\": {\\n        \\\"description\\\": \\\"Returns a user based on a single ID, if the user does not have access to the pet\\\",\\n        \\\"operationId\\\": \\\"find pet by id\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"path\\\",\\n            \\\"description\\\": \\\"ID of pet to fetch\\\",\\n            \\\"required\\\": true,\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"Pet.json\\\"\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      },\\n      \\\"delete\\\": {\\n        \\\"description\\\": \\\"deletes a single pet based on the ID supplied\\\",\\n        \\\"operationId\\\": \\\"deletePet\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"path\\\",\\n            \\\"description\\\": \\\"ID of pet to delete\\\",\\n            \\\"required\\\": true,\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"204\\\": {\\n            \\\"description\\\": \\\"pet deleted\\\"\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"Pet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"NewPet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"allOf\\\": [\\n    {\\n      \\\"$ref\\\": \\\"Pet.json\\\"\\n    },\\n    {\\n      \\\"required\\\": [\\n        \\\"name\\\"\\n      ],\\n      \\\"properties\\\": {\\n        \\\"description\\\": {\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"format\\\": \\\"int64\\\"\\n        }\\n      }\\n    }\\n  ]\\n}\"\n        },\n        {\n            \"path\": \"parameters.json\",\n            \"content\": \"{\\n  \\\"tagsParam\\\": {\\n    \\\"name\\\": \\\"tags\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"tags to filter by\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"array\\\",\\n    \\\"collectionFormat\\\": \\\"csv\\\",\\n    \\\"items\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  },\\n  \\\"limitsParam\\\": {\\n    \\\"name\\\": \\\"limit\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"maximum number of results to return\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"integer\\\",\\n    \\\"format\\\": \\\"int32\\\"\\n  }\\n}\"\n        },\n        {\n            \"path\": \"common/Error.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"code\\\",\\n    \\\"message\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"code\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int32\\\"\\n    },\\n    \\\"message\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"Resource not found\",\n    \"detail\": \"We could not find the API you are looking for\"\n}"},{"id":"aabed38f-a103-475d-9566-6a912edc2020","name":"Schema Already Exists","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"type\" : \"openapi:3\",\n    \"files\": [\n        {\n            \"path\": \"swagger.json\",\n            \"content\": \"{\\n  \\\"swagger\\\": \\\"2.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Swagger Petstore\\\",\\n    \\\"description\\\": \\\"A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification\\\",\\n    \\\"termsOfService\\\": \\\"http://swagger.io/terms/\\\",\\n    \\\"contact\\\": {\\n      \\\"name\\\": \\\"Swagger API Team\\\",\\n      \\\"email\\\": \\\"apiteam@swagger.io\\\",\\n      \\\"url\\\": \\\"http://swagger.io\\\"\\n    },\\n    \\\"license\\\": {\\n      \\\"name\\\": \\\"Apache 2.0\\\",\\n      \\\"url\\\": \\\"https://www.apache.org/licenses/LICENSE-2.0.html\\\"\\n    }\\n  },\\n  \\\"host\\\": \\\"petstore.swagger.io\\\",\\n  \\\"basePath\\\": \\\"/api\\\",\\n  \\\"schemes\\\": [\\n    \\\"http\\\"\\n  ],\\n  \\\"consumes\\\": [\\n    \\\"application/json\\\"\\n  ],\\n  \\\"produces\\\": [\\n    \\\"application/json\\\"\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/pets\\\": {\\n      \\\"get\\\": {\\n        \\\"description\\\": \\\"Returns all pets from the system that the user has access to\\\\nNam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.\\\\n\\\\nSed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.\\\\n\\\",\\n        \\\"operationId\\\": \\\"findPets\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"$ref\\\": \\\"parameters.json#/tagsParam\\\"\\n          },\\n          {\\n            \\\"$ref\\\": \\\"parameters.json#/limitsParam\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"array\\\",\\n              \\\"items\\\": {\\n                \\\"$ref\\\": \\\"Pet.json\\\"\\n              }\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      },\\n      \\\"post\\\": {\\n        \\\"description\\\": \\\"Creates a new pet in the store.  Duplicates are allowed\\\",\\n        \\\"operationId\\\": \\\"addPet\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"pet\\\",\\n            \\\"in\\\": \\\"body\\\",\\n            \\\"description\\\": \\\"Pet to add to the store\\\",\\n            \\\"required\\\": true,\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"NewPet.json\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"Pet.json\\\"\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      }\\n    },\\n    \\\"/pets/{id}\\\": {\\n      \\\"get\\\": {\\n        \\\"description\\\": \\\"Returns a user based on a single ID, if the user does not have access to the pet\\\",\\n        \\\"operationId\\\": \\\"find pet by id\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"path\\\",\\n            \\\"description\\\": \\\"ID of pet to fetch\\\",\\n            \\\"required\\\": true,\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"Pet.json\\\"\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      },\\n      \\\"delete\\\": {\\n        \\\"description\\\": \\\"deletes a single pet based on the ID supplied\\\",\\n        \\\"operationId\\\": \\\"deletePet\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"path\\\",\\n            \\\"description\\\": \\\"ID of pet to delete\\\",\\n            \\\"required\\\": true,\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"204\\\": {\\n            \\\"description\\\": \\\"pet deleted\\\"\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"Pet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"NewPet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"allOf\\\": [\\n    {\\n      \\\"$ref\\\": \\\"Pet.json\\\"\\n    },\\n    {\\n      \\\"required\\\": [\\n        \\\"name\\\"\\n      ],\\n      \\\"properties\\\": {\\n        \\\"description\\\": {\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"format\\\": \\\"int64\\\"\\n        }\\n      }\\n    }\\n  ]\\n}\"\n        },\n        {\n            \"path\": \"parameters.json\",\n            \"content\": \"{\\n  \\\"tagsParam\\\": {\\n    \\\"name\\\": \\\"tags\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"tags to filter by\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"array\\\",\\n    \\\"collectionFormat\\\": \\\"csv\\\",\\n    \\\"items\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  },\\n  \\\"limitsParam\\\": {\\n    \\\"name\\\": \\\"limit\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"maximum number of results to return\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"integer\\\",\\n    \\\"format\\\": \\\"int32\\\"\\n  }\\n}\"\n        },\n        {\n            \"path\": \"common/Error.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"code\\\",\\n    \\\"message\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"code\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int32\\\"\\n    },\\n    \\\"message\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"invalidParamsError\",\n    \"title\": \"Could not create the resource\",\n    \"detail\": \"Schema already exists for this API\"\n}"},{"id":"4154b974-c3b2-47de-8bb2-4458fd6697db","name":"Missing files Parameter","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"type\" : \"openapi:3\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid request body\",\n    \"detail\": \"Missing parameter: 'files'\"\n}"},{"id":"e16984cd-f798-4d71-802f-a59a28608ea8","name":"Missing content Parameter","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"type\": \"openapi:3\",\n    \"files\": [\n        {\n            \"path\": \"index.json\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid request body\",\n    \"detail\": \"Required field 'content' missing in the files array\"\n}"},{"id":"dee59741-9cd7-4e2c-83db-45947c3e7b91","name":"Invalid type Parameter","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"type\" : \"openapi3\",\n     \"files\": [\n        {\n            \"path\": \"swagger.json\",\n            \"content\": \"{\\n  \\\"swagger\\\": \\\"2.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Swagger Petstore\\\",\\n    \\\"description\\\": \\\"A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification\\\",\\n    \\\"termsOfService\\\": \\\"http://swagger.io/terms/\\\",\\n    \\\"contact\\\": {\\n      \\\"name\\\": \\\"Swagger API Team\\\",\\n      \\\"email\\\": \\\"apiteam@swagger.io\\\",\\n      \\\"url\\\": \\\"http://swagger.io\\\"\\n    },\\n    \\\"license\\\": {\\n      \\\"name\\\": \\\"Apache 2.0\\\",\\n      \\\"url\\\": \\\"https://www.apache.org/licenses/LICENSE-2.0.html\\\"\\n    }\\n  },\\n  \\\"host\\\": \\\"petstore.swagger.io\\\",\\n  \\\"basePath\\\": \\\"/api\\\",\\n  \\\"schemes\\\": [\\n    \\\"http\\\"\\n  ],\\n  \\\"consumes\\\": [\\n    \\\"application/json\\\"\\n  ],\\n  \\\"produces\\\": [\\n    \\\"application/json\\\"\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/pets\\\": {\\n      \\\"get\\\": {\\n        \\\"description\\\": \\\"Returns all pets from the system that the user has access to\\\\nNam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.\\\\n\\\\nSed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.\\\\n\\\",\\n        \\\"operationId\\\": \\\"findPets\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"$ref\\\": \\\"parameters.json#/tagsParam\\\"\\n          },\\n          {\\n            \\\"$ref\\\": \\\"parameters.json#/limitsParam\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"array\\\",\\n              \\\"items\\\": {\\n                \\\"$ref\\\": \\\"Pet.json\\\"\\n              }\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      },\\n      \\\"post\\\": {\\n        \\\"description\\\": \\\"Creates a new pet in the store.  Duplicates are allowed\\\",\\n        \\\"operationId\\\": \\\"addPet\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"pet\\\",\\n            \\\"in\\\": \\\"body\\\",\\n            \\\"description\\\": \\\"Pet to add to the store\\\",\\n            \\\"required\\\": true,\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"NewPet.json\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"Pet.json\\\"\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      }\\n    },\\n    \\\"/pets/{id}\\\": {\\n      \\\"get\\\": {\\n        \\\"description\\\": \\\"Returns a user based on a single ID, if the user does not have access to the pet\\\",\\n        \\\"operationId\\\": \\\"find pet by id\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"path\\\",\\n            \\\"description\\\": \\\"ID of pet to fetch\\\",\\n            \\\"required\\\": true,\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"Pet.json\\\"\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      },\\n      \\\"delete\\\": {\\n        \\\"description\\\": \\\"deletes a single pet based on the ID supplied\\\",\\n        \\\"operationId\\\": \\\"deletePet\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"path\\\",\\n            \\\"description\\\": \\\"ID of pet to delete\\\",\\n            \\\"required\\\": true,\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"204\\\": {\\n            \\\"description\\\": \\\"pet deleted\\\"\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"Pet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"NewPet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"allOf\\\": [\\n    {\\n      \\\"$ref\\\": \\\"Pet.json\\\"\\n    },\\n    {\\n      \\\"required\\\": [\\n        \\\"name\\\"\\n      ],\\n      \\\"properties\\\": {\\n        \\\"description\\\": {\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"format\\\": \\\"int64\\\"\\n        }\\n      }\\n    }\\n  ]\\n}\"\n        },\n        {\n            \"path\": \"parameters.json\",\n            \"content\": \"{\\n  \\\"tagsParam\\\": {\\n    \\\"name\\\": \\\"tags\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"tags to filter by\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"array\\\",\\n    \\\"collectionFormat\\\": \\\"csv\\\",\\n    \\\"items\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  },\\n  \\\"limitsParam\\\": {\\n    \\\"name\\\": \\\"limit\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"maximum number of results to return\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"integer\\\",\\n    \\\"format\\\": \\\"int32\\\"\\n  }\\n}\"\n        },\n        {\n            \"path\": \"common/Error.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"code\\\",\\n    \\\"message\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"code\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int32\\\"\\n    },\\n    \\\"message\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"InvalidParamsError\",\n    \"title\": \"Required parameter is invalid\",\n    \"detail\": \"Required property `type` is invalid. Should be one of: proto:2, proto:3, graphql, openapi:3_1, openapi:3, openapi:2, openapi:1, raml:1, raml:0_8, wsdl:2, wsdl:1, asyncapi:2\"\n}"},{"id":"5878494c-1a7f-4301-8d93-225dc04b6c79","name":"Git-Linked API Errror","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"type\" : \"openapi:3\",\n    \"files\": [\n        {\n            \"path\": \"swagger.json\",\n            \"content\": \"{\\n  \\\"swagger\\\": \\\"2.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Swagger Petstore\\\",\\n    \\\"description\\\": \\\"A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification\\\",\\n    \\\"termsOfService\\\": \\\"http://swagger.io/terms/\\\",\\n    \\\"contact\\\": {\\n      \\\"name\\\": \\\"Swagger API Team\\\",\\n      \\\"email\\\": \\\"apiteam@swagger.io\\\",\\n      \\\"url\\\": \\\"http://swagger.io\\\"\\n    },\\n    \\\"license\\\": {\\n      \\\"name\\\": \\\"Apache 2.0\\\",\\n      \\\"url\\\": \\\"https://www.apache.org/licenses/LICENSE-2.0.html\\\"\\n    }\\n  },\\n  \\\"host\\\": \\\"petstore.swagger.io\\\",\\n  \\\"basePath\\\": \\\"/api\\\",\\n  \\\"schemes\\\": [\\n    \\\"http\\\"\\n  ],\\n  \\\"consumes\\\": [\\n    \\\"application/json\\\"\\n  ],\\n  \\\"produces\\\": [\\n    \\\"application/json\\\"\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/pets\\\": {\\n      \\\"get\\\": {\\n        \\\"description\\\": \\\"Returns all pets from the system that the user has access to\\\\nNam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.\\\\n\\\\nSed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.\\\\n\\\",\\n        \\\"operationId\\\": \\\"findPets\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"$ref\\\": \\\"parameters.json#/tagsParam\\\"\\n          },\\n          {\\n            \\\"$ref\\\": \\\"parameters.json#/limitsParam\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"array\\\",\\n              \\\"items\\\": {\\n                \\\"$ref\\\": \\\"Pet.json\\\"\\n              }\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      },\\n      \\\"post\\\": {\\n        \\\"description\\\": \\\"Creates a new pet in the store.  Duplicates are allowed\\\",\\n        \\\"operationId\\\": \\\"addPet\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"pet\\\",\\n            \\\"in\\\": \\\"body\\\",\\n            \\\"description\\\": \\\"Pet to add to the store\\\",\\n            \\\"required\\\": true,\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"NewPet.json\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"Pet.json\\\"\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      }\\n    },\\n    \\\"/pets/{id}\\\": {\\n      \\\"get\\\": {\\n        \\\"description\\\": \\\"Returns a user based on a single ID, if the user does not have access to the pet\\\",\\n        \\\"operationId\\\": \\\"find pet by id\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"path\\\",\\n            \\\"description\\\": \\\"ID of pet to fetch\\\",\\n            \\\"required\\\": true,\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"Pet.json\\\"\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      },\\n      \\\"delete\\\": {\\n        \\\"description\\\": \\\"deletes a single pet based on the ID supplied\\\",\\n        \\\"operationId\\\": \\\"deletePet\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"path\\\",\\n            \\\"description\\\": \\\"ID of pet to delete\\\",\\n            \\\"required\\\": true,\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"204\\\": {\\n            \\\"description\\\": \\\"pet deleted\\\"\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"Pet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"NewPet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"allOf\\\": [\\n    {\\n      \\\"$ref\\\": \\\"Pet.json\\\"\\n    },\\n    {\\n      \\\"required\\\": [\\n        \\\"name\\\"\\n      ],\\n      \\\"properties\\\": {\\n        \\\"description\\\": {\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"format\\\": \\\"int64\\\"\\n        }\\n      }\\n    }\\n  ]\\n}\"\n        },\n        {\n            \"path\": \"parameters.json\",\n            \"content\": \"{\\n  \\\"tagsParam\\\": {\\n    \\\"name\\\": \\\"tags\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"tags to filter by\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"array\\\",\\n    \\\"collectionFormat\\\": \\\"csv\\\",\\n    \\\"items\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  },\\n  \\\"limitsParam\\\": {\\n    \\\"name\\\": \\\"limit\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"maximum number of results to return\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"integer\\\",\\n    \\\"format\\\": \\\"int32\\\"\\n  }\\n}\"\n        },\n        {\n            \"path\": \"common/Error.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"code\\\",\\n    \\\"message\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"code\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int32\\\"\\n    },\\n    \\\"message\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas"]}},"status":"Unprocessable Entity (WebDAV) (RFC 4918)","code":422,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"detail\": \"This action is not allowed for git linked APIs\",\n    \"type\": \"actionNotAllowedError\",\n    \"title\": \"Action not allowed\"\n}"}]},{"name":"Create or update a schema file","id":"66e2308c-7ac9-47ee-bdbb-17cdeb175a64","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"content\": \"{{fileContent}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","files","{{filePath}}"]},"description":"Creates or updates an API schema file. The request body must contain the following properties:\n\n- `content` — A **string** value that contains the file's contents.\n    \n\n**Note:**\n\n- If the provided file path exists, the file will be updated with the new contents.\n- If the provided file path does **not** exist, then a new schema file will be created.\n- If the file path contains a `/` (forward slash) character, then a folder is created. For example, if the file path is the `dir/schema.json` value, then a `dir` folder is created with the `schema.json` file inside."},"response":[{"id":"7c6bd9e7-a825-42d9-b46a-c08373a1ccb2","name":"Successful Response","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","files","{{filePath}}"]},"description":"Creates an API definition. The request body must contain a `schema` object with the following properties:\n\n*   `type` — A **string** value that contains the API definition's type. One of:  \n    * `openapi3_1`  \n    * `openapi3`  \n    * `openapi2`  \n    * `openapi1`  \n    * `raml`  \n    * `raml1`  \n    * `wsdl1`  \n    * `wsdl2`  \n    * `graphql`  \n    * `proto2`  \n    * `graphql`  \n    * `proto3`  \n* `language` — A **string** value that contains the API definition's language. One of:  \n    * OpenAPI and RAML — `json` or `yaml`  \n    * GraphQL — `graphql`  \n    * WSDL — `xml`  \n    * Protobuf — `proto`  \n* `schema` — A **string** value that contains the API definition's contents."},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"id\": \"ae2b9ab2-28f2-401d-912f-eca09a78e98b\",\n    \"createdBy\": \"2345\",\n    \"updatedBy\": \"2345\",\n    \"createdAt\": \"2022-03-29T11:37:15Z\",\n    \"updatedAt\": \"2022-03-29T11:37:15Z\",\n    \"path\": \"data-model/index.json\",\n    \"name\": \"index.json\"\n}"},{"id":"c46e9832-13e5-438a-aa4b-dbac0f5162cb","name":"Successfully Update root Tag","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"root\": {\n        \"enabled\": true\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","files","{{filePath}}"]},"description":"Creates an API definition. The request body must contain a `schema` object with the following properties:\n\n*   `type` — A **string** value that contains the API definition's type. One of:  \n    * `openapi3_1`  \n    * `openapi3`  \n    * `openapi2`  \n    * `openapi1`  \n    * `raml`  \n    * `raml1`  \n    * `wsdl1`  \n    * `wsdl2`  \n    * `graphql`  \n    * `proto2`  \n    * `graphql`  \n    * `proto3`  \n* `language` — A **string** value that contains the API definition's language. One of:  \n    * OpenAPI and RAML — `json` or `yaml`  \n    * GraphQL — `graphql`  \n    * WSDL — `xml`  \n    * Protobuf — `proto`  \n* `schema` — A **string** value that contains the API definition's contents."},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"id\": \"ae2b9ab2-28f2-401d-912f-eca09a78e98b\",\n    \"createdBy\": \"2345\",\n    \"updatedBy\": \"2345\",\n    \"createdAt\": \"2022-03-29T11:37:15Z\",\n    \"updatedAt\": \"2022-03-29T11:37:15Z\",\n    \"path\": \"data-model/index.json\",\n    \"name\": \"index.json\"\n}"},{"id":"ba9e4428-5781-426a-8d0e-0d0bbfea74b4","name":"API Not Found","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","files","{{filePath}}"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"Resource not found\",\n    \"detail\": \"We could not find the API you are looking for\"\n}"},{"id":"b5813095-2e68-4775-8b8b-0a09533de1df","name":"Schema Not Found","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","files","{{filePath}}"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"Resource not found\",\n    \"detail\": \"We could not find the resource you are looking for\"\n}"},{"id":"29b69771-4926-4b77-804c-73532dd5a347","name":"Schema Not Linked to API","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","files","{{filePath}}"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid param error\",\n    \"detail\": \"Schema is not linked to the API\"\n}"},{"id":"55c367d0-db96-4cc7-ae79-dba6981142dc","name":"Git-Linked API Errror","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","files","{{filePath}}"]}},"status":"Unprocessable Entity (WebDAV) (RFC 4918)","code":422,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"actionNotAllowedError\",\n    \"title\": \"Action not allowed\",\n    \"detail\": \"This action is not allowed for Git linked APIs\"\n}"},{"id":"337e2b8c-8a8c-420a-b944-be3f11213110","name":"Forbidden","originalRequest":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","files","{{filePath}}"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"detail\": \"You do not have access to perform this operation.\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"type\": \"forbiddenError\"\n}"}]},{"name":"Get a schema","id":"d6daec72-7cdc-4e06-a992-662993bfb37e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}"],"query":[{"key":"versionId","value":"{{versionId}}","description":"Optional. The API's version ID.","disabled":true},{"key":"bundled","value":"true","description":"Optional. If true, return the schema in a bundled format.","disabled":true}]},"description":"Gets information about API schema. You can use the `versionId` query parameter to get a schema published in an API version.\n\nYou can use this API to do the following:\n\n- Get a schema's metadata.\n- Get all the files in a schema. This only returns the first file in the schema. The endpoint response contains a link to the next set of response results.\n- Get a schema's contents in multi-file or bundled format.\n    \n\n**Note:**\n\nThe `versionId` query parameter is a **required** parameter for API viewers."},"response":[{"id":"037e737a-60bf-4059-87aa-f104d7d33d90","name":"Successful Response","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}?versionId=66ae9950-0869-4e65-96b0-1e0e47e771af","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}"],"query":[{"key":"versionId","value":"66ae9950-0869-4e65-96b0-1e0e47e771af"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"id\": \"ae2b9ab2-28f2-401d-912f-eca09a78e98b\",\n    \"type\": \"openapi:3\",\n    \"createdBy\": \"2345\",\n    \"updatedBy\": \"2345\",\n    \"createdAt\": \"2022-03-29T11:37:15Z\",\n    \"updatedAt\": \"2022-03-29T11:37:15Z\",\n    \"files\": {\n        \"meta\": {\n            \"nextPath\": \"/apis/1fdbff7c-036b-4f8a-91bc-17bf3ae74fd2/schemas/cf98c187-17c1-455f-afbf-d4be51f12770/files?cursor=eyJzY2hlbWUiOiJwYXRoX2FzYyIsImRpcmVjdGlvblR5cGUiOiJuZXh0IiwicGl2b3QiOiJwYXRoIiwidmFsdWUiOiJkaXIvczEuanNvbiJ9\"\n        },\n        \"data\": [\n            {\n                \"createdBy\": \"5000842\",\n                \"path\": \"dir/s1.json\",\n                \"updatedBy\": \"5000842\",\n                \"updatedAt\": \"2023-03-16T19:11:24.000Z\",\n                \"createdAt\": \"2023-03-16T18:38:56.000Z\",\n                \"id\": \"cf98c187-17c1-455f-afbf-d4be51f12770\",\n                \"name\": \"s1.json\"\n            }\n        ]\n    }\n}"},{"id":"0e8a47e2-a9bc-480f-b67e-9a0e04bf7edd","name":"Get Bundled Schema","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}?bundled=true","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}"],"query":[{"key":"bundled","value":"true"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"id\": \"ae2b9ab2-28f2-401d-912f-eca09a78e98b\",\n    \"type\": \"openapi:3\",\n    \"createdBy\": \"2345\",\n    \"updatedBy\": \"2345\",\n    \"createdAt\": \"2022-03-29T11:37:15Z\",\n    \"updatedAt\": \"2022-03-29T11:37:15Z\",\n    \"content\": \"openapi: '3.0.0'\\ninfo:\\n  version: '1.0.0'\\n  title: 'Sample API'\\n  description: Buy or rent spacecrafts\\n\\npaths:\\n  /spacecrafts/{spacecraftId}:\\n    parameters:\\n      - name: spacecraftId\\n        description: The unique identifier of the spacecraft\\n        in: path\\n        required: true\\n        schema:\\n          $ref: '#/components/schemas/SpacecraftId'\\n    get:\\n      summary: Read a spacecraft\\n      responses:\\n        '200':\\n          description: The spacecraft corresponding to the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Spacecraft'\\n        404:\\n          description: No spacecraft found for the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Error'\\n        500:\\n          description: Unexpected error\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Error'\\ncomponents:\\n  schemas:\\n    SpacecraftId:\\n      description: The unique identifier of a spacecraft\\n      type: string\\n    Spacecraft:\\n      type: object\\n      required:\\n        - id\\n        - names\\n        - type\\n      properties:\\n        id:\\n          $ref: '#/components/schemas/SpacecraftId'\\n        name:\\n          type: string\\n        type:\\n          type: string\\n          enum:\\n            - capsule\\n            - probe\\n            - satellite\\n            - spaceplane\\n            - station\\n        description:\\n          type: string\\n    Error:\\n      type: object\\n      required:\\n        - message\\n      properties:\\n        message:\\n          description: A human readable error message\\n          type: string\\n  securitySchemes:\\n    ApiKey:\\n      type: apiKey\\n      in: header\\n      name: X-Api-Key\\nsecurity:\\n  - ApiKey: []\"\n}"},{"id":"973bdb26-51fc-412d-aa4c-473863af7bf6","name":"API Not Found","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"Resource not found\",\n    \"detail\": \"We could not find the API you are looking for\"\n}"},{"id":"95807d7e-b642-44e9-9c04-7719ee706432","name":"Schema Not Linked to API","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid param error\",\n    \"detail\": \"Schema is not linked to the API\"\n}"},{"id":"a7c71de9-0b5c-4656-bb43-c2cfa5f4eccc","name":"Invalid Version ID","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}?versionId=66ae9950-0869-4e65-96b0-1e0e47e771af","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}"],"query":[{"key":"versionId","value":"66ae9950-0869-4e65-96b0-1e0e47e771af"}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid version Id provided\",\n    \"detail\": \"Schema not published in this version\"\n}"},{"id":"6818ec17-042c-4a63-bd84-d0a816363a75","name":"Forbidden","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"Please ensure that you have required permissions\",\n    \"type\": \"ForbiddenError\"\n}"},{"id":"5e9a294f-34c0-474e-8c74-335011efca00","name":"Bad Request","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"title\": \"Invalid request body\",\n    \"type\": \"invalidParamError\",\n    \"detail\": \"Missing field 'versionId' in the request body\"\n}"},{"id":"a7ab891d-e3f9-4afe-9d48-2260874a25ee","name":"Git-Linked API Errror","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}"]}},"status":"Unprocessable Entity (WebDAV) (RFC 4918)","code":422,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"detail\": \"This action is not allowed for git linked APIs\",\n    \"type\": \"actionNotAllowedError\",\n    \"title\": \"Action not allowed\"\n}"}]},{"name":"Get schema files","id":"4f184f82-d429-437f-86ab-1299103acb46","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","files"],"query":[{"key":"limit","value":"{{limit}}","description":"Optional. The maximum number of rows to return in the response. This value defaults to `10`.","disabled":true},{"key":"versionId","value":"{{versionId}}","description":"Optional. The API's version ID.","disabled":true},{"key":"cursor","value":"{{cursor}}","description":"Optional. The pointer to the first record of the set of paginated results.","disabled":true}]},"description":"Gets the files in an API schema. You can use the `versionId` query parameter to get schema files published in an API version.\n\n**Note:**\n\nThe `versionId` query parameter is a **required** parameter for API viewers."},"response":[{"id":"dfc4b661-0856-4861-92b1-5913dd5c48f3","name":"Successful Response","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files?versionId=66ae9950-0869-4e65-96b0-1e0e47e771af&limit=2&cursor=eyJzY2hlbWUiOiJwYXRoX2FzYyIsImRpcmVjdGlvblR5cGUiOiJuZXh0IiwicGl2b3QiOiJwYXRoIiwidmFsdWUiOiJkaXIvczEuanNvbiJ9","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","files"],"query":[{"key":"versionId","value":"66ae9950-0869-4e65-96b0-1e0e47e771af"},{"key":"limit","value":"2"},{"key":"cursor","value":"eyJzY2hlbWUiOiJwYXRoX2FzYyIsImRpcmVjdGlvblR5cGUiOiJuZXh0IiwicGl2b3QiOiJwYXRoIiwidmFsdWUiOiJkaXIvczEuanNvbiJ9"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"meta\": {\n        \"nextCursor\": \"eyJzY2hlbWUiOiJwYXRoX2FzYyIsImRpcmVjdGlvblR5cGUiOiJuZXh0IiwicGl2b3QiOiJwYXRoIiwidmFsdWUiOiJOZXdQZXQuanNvbiJ9\"\n    },\n    \"files\": [\n        {\n            \"id\": \"e8a015e0-f472-4bb3-a523-57ce7c4583ed\",\n            \"path\": \"data-model/error.yaml\",\n            \"name\": \"error.yaml\",\n            \"createdAt\": \"2022-03-29T11:37:15Z\",\n            \"updatedAt\": \"2022-03-29T11:37:15Z\",\n            \"createdBy\": 2345,\n            \"updatedBy\": 2345\n        },\n        {\n            \"id\": \"e8a015e0-f472-4bb3-a523-57ce7c4583ef\",\n            \"path\": \"data-model/error2.yaml\",\n            \"name\": \"error2.yaml\",\n            \"createdAt\": \"2022-03-29T11:37:15Z\",\n            \"updatedAt\": \"2022-03-29T11:37:15Z\",\n            \"createdBy\": 2345,\n            \"updatedBy\": 2345\n        }\n    ]\n}"},{"id":"59d6a5e7-0def-451c-a685-23ecedfe86e3","name":"API Not Found","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","files"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"Resource not found\",\n    \"detail\": \"We could not find the API you are looking for\"\n}"},{"id":"315fc3d8-9a11-40e1-97f1-872664f20c37","name":"Git-Linked API Errror","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","files"]}},"status":"Unprocessable Entity (WebDAV) (RFC 4918)","code":422,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"detail\": \"This action is not allowed for git linked APIs\",\n    \"type\": \"actionNotAllowedError\",\n    \"title\": \"Action not allowed\"\n}"},{"id":"919a370c-c224-4d46-b892-2c62b628b37c","name":"Schema Not Linked to API","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","files"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid param error\",\n    \"detail\": \"Schema is not linked to the API\"\n}"},{"id":"7c43f022-d05e-4d0b-9e93-32ff37718929","name":"Invalid Version ID","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files?versionId=e8a015e0-f472","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","files"],"query":[{"key":"versionId","value":"e8a015e0-f472"}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid version Id provided\",\n    \"detail\": \"Schema not published in this version\"\n}"},{"id":"986ab876-cdc1-4889-99fd-5d1fc29f5909","name":"Forbidden","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","files"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"Please ensure that you have required permissions\",\n    \"type\": \"ForbiddenError\"\n}"}]},{"name":"Get schema file contents","id":"d97ae191-51d9-4aad-ac68-6f41b28e2d16","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","files","{{filePath}}"],"query":[{"key":"versionId","value":"{{versionId}}","description":"Optional. The API's version ID.","disabled":true}]},"description":"Gets an API schema file contents at the defined path. You can use the `versionId` query parameter to get schema file contents published in an API version.\n\n**Note:**\n\nThe `versionId` query parameter is a **required** parameter for API viewers."},"response":[{"id":"fd5cf681-9e23-4d91-a864-ae277976fb5c","name":"Successful Response","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","files","{{filePath}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"id\": \"ae2b9ab2-28f2-401d-912f-eca09a78e98b\",\n    \"path\": \"s1.json\",\n    \"name\": \"s1\",\n    \"createdBy\": \"2345\",\n    \"updatedBy\": \"2345\",\n    \"createdAt\": \"2022-03-29T11:37:15Z\",\n    \"updatedAt\": \"2022-03-29T11:37:15Z\",\n    \"content\": \"openapi: '3.0.0'\\ninfo:\\n  version: '1.0.0'\\n  title: 'Sample API'\\n  description: Buy or rent spacecrafts\\n\\npaths:\\n  /spacecrafts/{spacecraftId}:\\n    parameters:\\n      - name: spacecraftId\\n        description: The unique identifier of the spacecraft\\n        in: path\\n        required: true\\n        schema:\\n          $ref: '#/components/schemas/SpacecraftId'\\n    get:\\n      summary: Read a spacecraft\\n      responses:\\n        '200':\\n          description: The spacecraft corresponding to the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Spacecraft'\\n        404:\\n          description: No spacecraft found for the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Error'\\n        500:\\n          description: Unexpected error\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Error'\\ncomponents:\\n  schemas:\\n    SpacecraftId:\\n      description: The unique identifier of a spacecraft\\n      type: string\\n    Spacecraft:\\n      type: object\\n      required:\\n        - id\\n        - names\\n        - type\\n      properties:\\n        id:\\n          $ref: '#/components/schemas/SpacecraftId'\\n        name:\\n          type: string\\n        type:\\n          type: string\\n          enum:\\n            - capsule\\n            - probe\\n            - satellite\\n            - spaceplane\\n            - station\\n        description:\\n          type: string\\n    Error:\\n      type: object\\n      required:\\n        - message\\n      properties:\\n        message:\\n          description: A human readable error message\\n          type: string\\n  securitySchemes:\\n    ApiKey:\\n      type: apiKey\\n      in: header\\n      name: X-Api-Key\\nsecurity:\\n  - ApiKey: []\"\n}"},{"id":"9e31ab20-ec87-464f-ae86-4433e0fd42c2","name":"Successful Response for Published Version","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}?versionId=ae2b9ab2-28f2-401d-912f-eca09a78e98b","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","files","{{filePath}}"],"query":[{"key":"versionId","value":"ae2b9ab2-28f2-401d-912f-eca09a78e98b"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"id\": \"ae2b9ab2-28f2-401d-912f-eca09a78e98b\",\n    \"path\": \"s1.json\",\n    \"name\": \"s1\",\n    \"createdBy\": \"2345\",\n    \"updatedBy\": \"2345\",\n    \"createdAt\": \"2022-03-29T11:37:15Z\",\n    \"updatedAt\": \"2022-03-29T11:37:15Z\",\n    \"content\": \"openapi: '3.0.0'\\ninfo:\\n  version: '1.0.0'\\n  title: 'Sample API'\\n  description: Buy or rent spacecrafts\\n\\npaths:\\n  /spacecrafts/{spacecraftId}:\\n    parameters:\\n      - name: spacecraftId\\n        description: The unique identifier of the spacecraft\\n        in: path\\n        required: true\\n        schema:\\n          $ref: '#/components/schemas/SpacecraftId'\\n    get:\\n      summary: Read a spacecraft\\n      responses:\\n        '200':\\n          description: The spacecraft corresponding to the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Spacecraft'\\n        404:\\n          description: No spacecraft found for the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Error'\\n        500:\\n          description: Unexpected error\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Error'\\ncomponents:\\n  schemas:\\n    SpacecraftId:\\n      description: The unique identifier of a spacecraft\\n      type: string\\n    Spacecraft:\\n      type: object\\n      required:\\n        - id\\n        - names\\n        - type\\n      properties:\\n        id:\\n          $ref: '#/components/schemas/SpacecraftId'\\n        name:\\n          type: string\\n        type:\\n          type: string\\n          enum:\\n            - capsule\\n            - probe\\n            - satellite\\n            - spaceplane\\n            - station\\n        description:\\n          type: string\\n    Error:\\n      type: object\\n      required:\\n        - message\\n      properties:\\n        message:\\n          description: A human readable error message\\n          type: string\\n  securitySchemes:\\n    ApiKey:\\n      type: apiKey\\n      in: header\\n      name: X-Api-Key\\nsecurity:\\n  - ApiKey: []\"\n}"},{"id":"153a9d4e-6d8d-4a1a-9d29-0923ef3da65b","name":"API Not Found","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","files","{{filePath}}"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"Resource not found\",\n    \"detail\": \"We could not find the API you are looking for\"\n}"},{"id":"e7216288-e406-4341-803e-b033352185f4","name":"Path Not Found","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","files","{{filePath}}"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"title\": \"Resource not found\",\n    \"detail\": \"API schema file does not exist\",\n    \"type\": \"instanceNotFoundError\"\n}"},{"id":"a68def19-b690-4d66-ab5e-7330e0183050","name":"Schema Not Linked to API","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","files","{{filePath}}"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid param error\",\n    \"detail\": \"Schema is not linked to the API\"\n}"},{"id":"a44703c9-ec9a-4dad-ae44-78c4fc1f4158","name":"Git-Linked API Errror","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","files","{{filePath}}"]}},"status":"Unprocessable Entity (WebDAV) (RFC 4918)","code":422,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"actionNotAllowedError\",\n    \"title\": \"Action not allowed\",\n    \"detail\": \"This action is not allowed for git linked APIs\"\n}"},{"id":"8620d250-0c2f-4dd5-9513-5461ec3a39ba","name":"Forbidden","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","files","{{filePath}}"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"Please ensure that you have required permissions\",\n    \"type\": \"ForbiddenError\"\n}"}]},{"name":"Delete a schema file","id":"d14935cf-6c8c-427e-8dcc-833515c9b411","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","files","{{filePath}}"]},"description":"Deletes a file in an API schema."},"response":[{"id":"8a9e955d-1e2f-4a77-b65b-dbd2e1440372","name":"Deleted","originalRequest":{"method":"DELETE","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/{{filePath}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","{{filePath}}"]}},"status":"No Content","code":204,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":null},{"id":"c5acd6f2-4f2f-4eff-bc15-a3d471ca89ab","name":"Git-Linked API Errror","originalRequest":{"method":"DELETE","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/{{filePath}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","{{filePath}}"]}},"status":"Unprocessable Entity (WebDAV) (RFC 4918)","code":422,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"detail\": \"This action is not allowed for git linked APIs\",\n    \"type\": \"actionNotAllowedError\",\n    \"title\": \"Action not allowed\"\n}"},{"id":"7fec9341-0f25-48c8-be7c-6f8be6633b0b","name":"Path Not Found","originalRequest":{"method":"DELETE","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/{{filePath}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","{{filePath}}"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"Resource not found\",\n    \"detail\": \"File not found: Folder1/nestedFile.json\"\n}"},{"id":"f0a5823c-1210-4853-95f8-39db0740a223","name":"API Not Found","originalRequest":{"method":"DELETE","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/{{filePath}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","{{filePath}}"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"Resource not found\",\n    \"detail\": \"We could not find the API you are looking for\"\n}"},{"id":"2e3e6b59-a692-435a-8914-245503dcd2f5","name":"Schema Not Linked to API","originalRequest":{"method":"DELETE","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/{{filePath}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","{{filePath}}"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid param error\",\n    \"detail\": \"Schema is not linked to the API\"\n}"},{"id":"059c12ae-05e6-47e1-b577-982430e9c0e9","name":"Forbidden","originalRequest":{"method":"DELETE","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","schemas","{{schemaId}}","files","{{filePath}}"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"detail\": \"You do not have access to perform this operation.\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"type\": \"forbiddenError\"\n}"}]}],"id":"75f31d22-96f4-4b03-9bc0-eaba13c83cb5","description":"The **Schema** endpoints let you manage your API schema. These endpoints also support multi-file schema."},{"name":"API Version","item":[{"name":"Create a version","id":"1e68d3c3-6ece-4dd1-aaf8-3e96fd0cc7fb","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"{{apiReleaseName}}\",\n    \"releaseNotes\": \"{{apiReleaseDescription}}\",\n    \"collections\": [\n        {\n            \"id\": \"{{collectionId}}\"\n        }\n    ],\n    \"schemas\": [\n        {\n            \"id\": \"{{schemaId}}\" \n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions"]},"description":"Creates a new API version asynchronously and immediately returns an HTTP `202 Accepted` response. The response contains a polling link to the task status API in the `Location` header.\n\nThis endpoint is equivalent to publishing a version in Postman app, which is the snapshot of API collections and schema at a given point in time.\n\nInclude the following properties in the request body:\n\n- `name` — A **string** value that contains the version name.\n- `collections` — An **array** containing all the collections to publish.\n- `schemas` — An **array** containing the schema to publish.\n- `branch` — A **string** value that contains the name of the repository branch. This property is required only for Git-linked APIs.\n    \n\nYou can include the following optional properties:\n\n- `releaseNotes` — A **string** value that contains the Markdown-supported version summary."},"response":[{"id":"265576ef-0a7a-47ef-a162-ccbe5eef3937","name":"Create Version","originalRequest":{"method":"POST","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"v1\",\n    \"releaseNotes\": \"This is the first release.\",\n    \"collections\": [\n        {\n            \"id\": \"e8a015e0-f472-4bb3-a523-57ce7c4583ed\"\n        }\n    ],\n    \"schemas\": [\n        {\n            \"id\": \"18a015e0-f472-4bb3-a523-57ce7c458387\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions"]},"description":"Creates a new API version release. Include the following properties in the `release` object:\n\n*   `name` — A **string** value that contains the release name.\n*   `visibility` — A **string** value that contains the release's visibility. One of:\n    *   `private` — The release is private.\n    *   `public` — The release is public.\n\nYou can include the following optional properties:\n\n*   `summary` — A **string** value that contains the release's summary.\n*   `description` — A **string** value that contains the release's description.\n*   `gitTag` — A **string** value that contains a valid [Git tag](https://docs.github.com/en/rest/git/tags) ID. The tag must exist in the API's connected Git repository."},"status":"Accepted","code":202,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""},{"key":"Location","value":"/apis/{{apiId}}/tasks/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n    \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n    \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n    \"name\": \"v1\",\n    \"releaseNotes\": \"This is the first release.\"\n}"},{"id":"ec222fd2-65c2-43bc-8a76-ca05a9879941","name":"Git-Linked Version with Schema Directory Path","originalRequest":{"method":"POST","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"v1\",\n    \"branch\": \"develop\",\n    \"releaseNotes\": \"This is the first release.\",\n    \"collections\": [\n        {\n            \"filePath\": \"postman/collections/c1.json\"\n        }\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schema\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions"]}},"status":"Accepted","code":202,"_postman_previewlanguage":"json","header":[{"key":"Location","value":"/apis/{{apiId}}/tasks/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2","description":""},{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n    \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n    \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n    \"name\": \"v1\",\n    \"releaseNotes\": \"This is the first release.\"\n}"},{"id":"6a58d250-76bf-4a6d-af67-572307a5b029","name":"Git-Linked Version with root File Integration","originalRequest":{"method":"POST","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"v1\",\n    \"branch\": \"develop\",\n    \"releaseNotes\": \"This is the first release.\",\n    \"schemas\": [\n        {\n            \"filePath\": \"/dir/index.yml\"\n        }\n    ],\n    \"collections\": [\n        {\n            \"filePath\": \"postman/collections/c1.json\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions"]}},"status":"Accepted","code":202,"_postman_previewlanguage":"json","header":[{"key":"Location","value":"/apis/{{apiId}}/tasks/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2","description":""},{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n    \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n    \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n    \"name\": \"v1\",\n    \"releaseNotes\": \"This is the first release.\"\n}"},{"id":"c3e68262-08d7-4f89-89ed-f9a8082bf581","name":"Repository Not Found","originalRequest":{"method":"POST","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ],\n    \"branch\": \"develop\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"RepositoryNotFound\",\n    \"title\": \"Repository not found.\",\n    \"detail\": \"We could not find the Git repository you are looking for.\"\n}"},{"id":"99b42b62-ea29-47a8-8927-7fc455207c1d","name":"Collection Not Found","originalRequest":{"method":"POST","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ],\n    \"branch\": \"develop\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"CollectionNotFound\",\n    \"title\": \"Collection not found.\",\n    \"detail\": \"We could not find the collection, path/to/collection1.json, in the Git repository. Please ensure that the path is correct.\"\n}"},{"id":"b7e3595a-17a4-4379-b96b-cb82b4e2f029","name":"Inconsistent API State","originalRequest":{"method":"POST","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ],\n    \"branch\": \"develop\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions"]}},"status":"Unprocessable Entity (WebDAV) (RFC 4918)","code":422,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"APIStateInconsistent\",\n    \"title\": \"API state seems to be inconsistent.\",\n    \"detail\": \"Please perform a Git push from the Postman app to sync state between app and repository.\"\n}"},{"id":"7985cb01-e70b-4210-b2ff-9a738b0800b3","name":"Invalid Collection Path","originalRequest":{"method":"POST","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ],\n    \"branch\": \"develop\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions"]}},"status":"Unprocessable Entity (WebDAV) (RFC 4918)","code":422,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"CollectionPathInvalid\",\n    \"detail\": \"Please perform a Git push from the Postman app to sync state between app and repository.\",\n    \"title\": \"Collection not found.\"\n}"},{"id":"c02f2417-9651-458a-8dbc-ffcd5dda4b39","name":"Schema Root Not Found","originalRequest":{"method":"POST","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ],\n    \"branch\": \"develop\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions"]}},"status":"Unprocessable Entity (WebDAV) (RFC 4918)","code":422,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"SchemaRootNotFound\",\n    \"detail\": \"Please perform a Git push from the Postman app to sync state between app and repository.\",\n    \"title\": \"Postman app config seems to be corrupted.\"\n}"},{"id":"de8b831e-8974-4ad8-a686-20c44ba5b3fb","name":"API Not Found","originalRequest":{"method":"POST","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n    ],\n    \"branch\": \"develop\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"We could not find the API you are looking for\",\n    \"detail\": \"We could not find the API you are looking for.\"\n}"},{"id":"2ea079a9-3fe3-4124-9f9f-813cf75ee24e","name":"Branch Not Found","originalRequest":{"method":"POST","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ],\n    \"branch\": \"develop\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"BranchNotFound\",\n    \"title\": \"Branch not found.\",\n    \"details\": \"We could not find the branch you are looking for.\"\n}"},{"id":"e78cd61b-1ac8-42a6-8eb2-2bae84893f4e","name":"Auth Token Expired","originalRequest":{"method":"POST","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ],\n    \"branch\": \"develop\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"Unauthorized\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"Please use the Postman app to link your OAuth token with the API. Head over here, https://postman.postman.co/api/4ca6c9ae-da02-11ed-afa1-0242ac120002\"\n}"},{"id":"229856fd-e504-426a-a471-3ef6ab4c163d","name":"Unauthorized","originalRequest":{"method":"POST","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ],\n    \"branch\": \"develop\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"Unauthorized\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"Please use the Postman app to link your OAuth token with the API. Head over here, https://postman.postman.co/api/4ca6c9ae-da02-11ed-afa1-0242ac120002\"\n}"},{"id":"f8fc9c81-033e-4662-9e98-6cd3743ef2ba","name":"Parameter branch Missing for Git-Linked API","originalRequest":{"method":"POST","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"paramMissingError\",\n    \"title\": \"Parameter is missing in the request.\",\n    \"detail\": \"Parameter, branch is missing in the request.\"\n}"},{"id":"ee8c7aae-e479-4997-a6d2-91bcf5e81dbb","name":"Forbidden","originalRequest":{"method":"POST","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"id\": \"e8a015e0-f472-4bb3-a523-57ce7c4583ed\"\n        }\n    ],\n    \"schemas\": [\n        {\n            \"id\": \"18a015e0-f472-4bb3-a523-57ce7c4183ed\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"detail\": \"You do not have access to perform this operation.\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"type\": \"forbiddenError\"\n}"}]},{"name":"Get all versions","id":"eaebef5a-bd78-4983-9f90-763ee31dffd0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions"],"query":[{"key":"cursor","value":"{{cursor}}","description":"Optional. The pointer to the first record of the set of paginated results.","disabled":true},{"key":"limit","value":"{{limit}}","description":"Optional. The maximum number of rows to return in the response. This value defaults to `10`.","disabled":true}]},"description":"Gets all the published versions of an API."},"response":[{"id":"b2e62bbf-f1f5-40b5-a159-5335cace7dea","name":"Successful Response","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions?limit=2","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions"],"query":[{"key":"limit","value":"2"}]},"description":"Gets information about all of an API version's releases."},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"versions\": [\n        {\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n            \"id\": \"07d940bf-40fc-4acd-a11e-be6769894af0\",\n            \"name\": \"Release 2.0\",\n            \"releaseNotes\": \"This is the second release of the Test API.\"\n        },\n        {\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n            \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n            \"name\": \"Release 1.0\",\n            \"releaseNotes\": \"This is the first release of the Test API. For more information, read the documentation.\"\n        }\n    ],\n    \"meta\": {\n        \"nextCursor\": \"VGh1IE1hciAxNiAyMDIzIDE3OjIxOjUzIEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=\",\n        \"limit\": 2,\n        \"total\": \"100\"\n    }\n}"},{"id":"efa84a7c-f62e-46d1-850c-8811a8c14674","name":"Success with Cursor Response","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions?limit=2","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions"],"query":[{"key":"limit","value":"2"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"meta\": {\n        \"total\": 4,\n        \"limit\": 2,\n        \"nextCursor\": \"V2VkIEZlYiAxNSAyMDIzIDEzOjUyOjAyIEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=\"\n    },\n    \"versions\": [\n        {\n            \"createdAt\": \"2023-02-15T13:41:43.000Z\",\n            \"name\": \"v1\",\n            \"id\": \"12691e5b-4a6f-4bc7-8335-4ce9b7c5c2ae\",\n            \"releaseNotes\": \"\",\n            \"updatedAt\": \"2023-02-15T13:41:58.000Z\"\n        },\n        {\n            \"createdAt\": \"2023-02-15T13:47:23.000Z\",\n            \"name\": \"v2\",\n            \"id\": \"2665bfbf-888a-48f6-98fa-24c0b7689207\",\n            \"releaseNotes\": \"\",\n            \"updatedAt\": \"2023-02-15T13:47:27.000Z\"\n        }\n    ]\n}"},{"id":"32a28937-2637-4e8d-b98c-8ac26ba725c3","name":"Response with cursor Query Parameter","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions?cursor=RnJpIEZlYiAxNyAyMDIzIDEwOjM5OjUxIEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=&limit=10","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions"],"query":[{"key":"cursor","value":"RnJpIEZlYiAxNyAyMDIzIDEwOjM5OjUxIEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk="},{"key":"limit","value":"10"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"meta\": {\n        \"total\": 4,\n        \"limit\": 10\n    },\n    \"versions\": [\n        {\n            \"createdAt\": \"2023-02-17T10:39:51.000Z\",\n            \"name\": \"v4\",\n            \"id\": \"bc792958-ffd5-4a4c-bcf5-1c07cb8f277b\",\n            \"releaseNotes\": \"\",\n            \"updatedAt\": \"2023-02-17T10:39:57.000Z\"\n        }\n    ]\n}"},{"id":"ee669507-1fdd-4493-8d5c-f8b27f9533ae","name":"API Not Found","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"detail\": \"We could not find the API you are looking for.\",\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"We could not find the API you are looking for\"\n}"},{"id":"043a4e68-a434-4377-9702-39eb4369d08c","name":"Forbidden","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"forbiddenError\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"You do not have access to perform this operation.\"\n}"},{"id":"731a709e-54a1-4855-89c2-bbc6e69bca83","name":"v9 Unsupported","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions"]}},"status":"Unprocessable Entity (WebDAV) (RFC 4918)","code":422,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"unsupportedEntityError\",\n    \"title\": \"Unsupported API\",\n    \"detail\": \"This endpoint does not support v9 APIs.\"\n}"}]},{"name":"Get a version","id":"f05bc0f6-4432-4f5a-ba2e-d9902713e05a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{versionId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{versionId}}"]},"description":"Gets information about an API version.\n\n**Note:**\n\n- For API editors, this endpoint returns an HTTP `302 Found` status code when the version status is pending. It also returns the `/apis/{apiId}/tasks/{taskId}` task status response header.\n- For API viewers, this endpoint returns an HTTP `404 Not Found` when the version status is pending."},"response":[{"id":"c6cefd77-36c3-4aae-9afd-f6f6acfebcd5","name":"Successful Response","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}"]},"description":"Gets information about an API version's release."},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"version\": {\n        \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n        \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n        \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n        \"name\": \"Release 1.0\",\n        \"releaseNotes\": \"This is the first release.\",\n        \"schemas\": [\n            {\n                \"id\": \"C1\",\n                \"type\": \"openapi3\"\n            }\n        ],\n        \"collections\": [\n            {\n                \"id\": \"C1\",\n                \"name\": \"collection1\"\n            },\n            {\n                \"id\": \"C2\",\n                \"name\": \"collection2\"\n            }\n        ]\n    }\n}"},{"id":"4d9d4566-9013-4d9c-b284-c35b19eccf9d","name":"Version in Pending Status Response","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}"]},"description":"Gets information about an API version's release."},"status":"Found","code":302,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""},{"key":"Location","value":"/apis/5360b75f-447e-467c-9299-12fd6c92450d/tasks/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2","description":""}],"cookie":[],"responseTime":null,"body":null},{"id":"72f96ce7-84c6-4415-a423-a1a6a3203f6d","name":"Successful Response for API Viewers","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}"]},"description":"Gets information about an API version's release."},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"version\": {\n        \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n        \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n        \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n        \"name\": \"Release 1.0\",\n        \"releaseNotes\": \"This is the first release.\",\n        \"schemas\": [\n            {\n                \"id\": \"C1\",\n                \"type\": \"openapi:3\"\n            }\n        ],\n        \"collections\": [\n            {\n                \"id\": \"C1\",\n                \"name\": \"collection1\"\n            },\n            {\n                \"id\": \"C2\",\n                \"name\": \"collection2\"\n            }\n        ]\n    }\n}"},{"id":"fafe5212-6295-4c49-a88f-122ac8fef976","name":"Not Found","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}"]},"description":"Gets information about an API version's release."},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"VersionNotFound\",\n    \"title\": \"API Version not found.\",\n    \"details\": \"We could not find the API Version you are looking for.\"\n}"}]},{"name":"Update a version","id":"655fbbaf-36bb-4a63-8f72-6b09c23cf81e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"{{apiVersionName}}\",\n    \"releaseNotes\": \"{{releaseNotes}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}"]},"description":"Updates an API version. Include at least one of the following properties in the request body:\n\n- `name` — A **string** value that contains the version name.\n- `releaseNotes` — A **string** value that contains the Markdown-supported release notes.\n    \n\n**Note:**\n\nThis endpoint returns an HTTP `404 Not Found` response when an API version is pending publication."},"response":[{"id":"5cafbd54-7dc8-4f0b-8e83-4a080867a11b","name":"Successful Response","originalRequest":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}"]},"description":"Updates an API version's release. Include at least one of the following properties in the `release` object:\n\n*   `name` — A **string** value that contains the release name.\n*   `visibility` — A **string** value that contains the release's visibility. One of:\n    *   `private` — The release is private.\n    *   `public` — The release is public.\n*   `summary` — A **string** value that contains the release's summary.\n*   `description` — A **string** value that contains the release's description.\n*   `gitTag` — A **string** value that contains a valid [Git tag](https://docs.github.com/en/rest/git/tags) ID. The tag must exist in the API's connected Git repository."},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n    \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n    \"id\": \"8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2\",\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\"\n}"},{"id":"c185c7b1-c3f2-420d-83d0-bdaabd7506b2","name":"Forbidden","originalRequest":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"detail\": \"You do not have access to perform this operation.\",\n    \"type\": \"forbiddenError\",\n    \"title\": \"You are not permitted to perform the action.\"\n}"},{"id":"0a207977-cd3d-41c6-8882-3e1daec3f6dc","name":"VersionNotFound Error When API Version is Pending Publishing","originalRequest":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"VersionNotFound\",\n    \"title\": \"API Version not found.\",\n    \"details\": \"We could not find the API Version you are looking for.\"\n}"}]},{"name":"Delete a version","id":"0fd62a10-cafc-4994-bd31-a33462692554","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{postman-API-key}}","type":"string"},{"key":"key","value":"X-API-KEY","type":"string"}]},"method":"DELETE","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{versionId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{versionId}}"]},"description":"Deletes an API version.\n\n**Note:**\n\nThis endpoint returns an HTTP `404 Not Found` response when an API version is pending publication."},"response":[{"id":"22094e32-7cac-48fa-89f0-df558b2676a3","name":"Deleted","originalRequest":{"auth":{"type":"apikey","apikey":[{"key":"key","value":"X-API-KEY","type":"string"},{"key":"value","value":"{{postman-API-key}}","type":"string"},{"key":"in","type":"any"}]},"method":"DELETE","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}"]},"description":"Deletes an API version's release."},"status":"No Content","code":204,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":null},{"id":"eb38583f-7bb2-4357-b021-97154a83c74e","name":"API Not Found","originalRequest":{"auth":{"type":"apikey","apikey":[{"key":"key","value":"X-API-KEY","type":"string"},{"key":"value","value":"{{postman-API-key}}","type":"string"},{"key":"in","type":"any"}]},"method":"DELETE","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}"]},"description":"Deletes an API version's release."},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API version you are looking for\"\n    }\n}"},{"id":"d4e4a42d-a10b-470e-8496-ce27ac4b54ec","name":"Forbidden","originalRequest":{"method":"DELETE","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"forbiddenError\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"You do not have permission to perform this action\"\n}"},{"id":"59c099b1-94d2-4cfd-b27c-6af97a87f886","name":"VersionNotFound Error When API Version is Pending Publishing","originalRequest":{"method":"DELETE","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{versionId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{versionId}}"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"VersionNotFound\",\n    \"title\": \"API Version not found.\",\n    \"details\": \"We could not find the API Version you are looking for.\"\n}"}]}],"id":"c8e7d75e-5dfa-497c-8b57-d2d1ef77620a","description":"The **API Version** endpoints enable you to manage your [API's published versions](https://learning.postman.com/docs/designing-and-developing-your-api/versioning-an-api/versioning-an-api-overview/). Only users with the [API Admin](https://learning.postman.com/docs/collaborating-in-postman/roles-and-permissions/#api-roles) or [Workspace Admin](https://learning.postman.com/docs/collaborating-in-postman/roles-and-permissions/#workspace-roles) role can publish and manage versions."},{"name":"Collections","item":[{"name":"Get a collection","id":"d8fd66e6-e302-445e-8e36-d58855fc7a84","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/collections/{{collectionId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","collections","{{collectionId}}"],"query":[{"key":"versionId","value":"{{versionId}}","description":"Optional. The API's version ID.","disabled":true}]},"description":"Gets a collection attached to an API. You can use the `versionId` query parameter to get a collection published in a version.\n\n**Note:**\n\nThe `versionId` query parameter is a **required** parameter for API viewers."},"response":[{"id":"21a6b41e-86ce-43e6-9a03-3079870eec5b","name":"Successful Response","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/collections/{{collectionId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","collections","{{collectionId}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"item\": [\n        {\n            \"protocolProfileBehavior\": {\n                \"disableBodyPruning\": true\n            },\n            \"response\": [\n                {\n                    \"originalRequest\": {\n                        \"url\": {\n                            \"host\": [\n                                \"https://api.getpostman.com\"\n                            ],\n                            \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                            \"variable\": [\n                                {\n                                    \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                    \"key\": \"spacecraftId\",\n                                    \"value\": \"<string>\"\n                                }\n                            ],\n                            \"path\": [\n                                \"spacecrafts\",\n                                \":spacecraftId\"\n                            ]\n                        },\n                        \"method\": \"GET\",\n                        \"header\": [\n                            {\n                                \"description\": \"Added as a part of security scheme: apikey\",\n                                \"key\": \"X-Api-Key\",\n                                \"value\": \"<API Key>\"\n                            }\n                        ]\n                    },\n                    \"code\": 200,\n                    \"_postman_previewlanguage\": \"json\",\n                    \"responseTime\": null,\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ],\n                    \"name\": \"The spacecraft corresponding to the provided `spacecraftId`\",\n                    \"_postman_previewtype\": \"html\",\n                    \"body\": \"{\\n  \\\"id\\\": \\\"<string>\\\",\\n  \\\"name\\\": \\\"commodo\\\",\\n  \\\"type\\\": \\\"capsule\\\",\\n  \\\"description\\\": \\\"pariatur dolo\\\"\\n}\",\n                    \"cookie\": [],\n                    \"status\": \"OK\",\n                    \"id\": \"54467f6e-71d7-43d5-acc0-48f948e38528\"\n                },\n                {\n                    \"originalRequest\": {\n                        \"url\": {\n                            \"host\": [\n                                \"https://api.getpostman.com\"\n                            ],\n                            \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                            \"variable\": [\n                                {\n                                    \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                    \"key\": \"spacecraftId\",\n                                    \"value\": \"<string>\"\n                                }\n                            ],\n                            \"path\": [\n                                \"spacecrafts\",\n                                \":spacecraftId\"\n                            ]\n                        },\n                        \"method\": \"GET\",\n                        \"header\": [\n                            {\n                                \"description\": \"Added as a part of security scheme: apikey\",\n                                \"key\": \"X-Api-Key\",\n                                \"value\": \"<API Key>\"\n                            }\n                        ]\n                    },\n                    \"code\": 404,\n                    \"_postman_previewlanguage\": \"json\",\n                    \"responseTime\": null,\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ],\n                    \"name\": \"No spacecraft found for the provided `spacecraftId`\",\n                    \"_postman_previewtype\": \"html\",\n                    \"body\": \"{\\n  \\\"message\\\": \\\"dolore Excepteur\\\"\\n}\",\n                    \"cookie\": [],\n                    \"status\": \"Not Found\",\n                    \"id\": \"1231609a-7a3d-444d-aa0c-579703e618f4\"\n                },\n                {\n                    \"originalRequest\": {\n                        \"url\": {\n                            \"host\": [\n                                \"https://api.getpostman.com\"\n                            ],\n                            \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                            \"variable\": [\n                                {\n                                    \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                    \"key\": \"spacecraftId\",\n                                    \"value\": \"<string>\"\n                                }\n                            ],\n                            \"path\": [\n                                \"spacecrafts\",\n                                \":spacecraftId\"\n                            ]\n                        },\n                        \"method\": \"GET\",\n                        \"header\": [\n                            {\n                                \"description\": \"Added as a part of security scheme: apikey\",\n                                \"key\": \"X-Api-Key\",\n                                \"value\": \"<API Key>\"\n                            }\n                        ]\n                    },\n                    \"code\": 500,\n                    \"_postman_previewlanguage\": \"json\",\n                    \"responseTime\": null,\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ],\n                    \"name\": \"Unexpected error\",\n                    \"_postman_previewtype\": \"html\",\n                    \"body\": \"{\\n  \\\"message\\\": \\\"dolore Excepteur\\\"\\n}\",\n                    \"cookie\": [],\n                    \"status\": \"Internal Server Error\",\n                    \"id\": \"db674465-8cec-4208-9724-42278ca9b83c\"\n                }\n            ],\n            \"id\": \"d3779255-5293-4e58-9b65-8954936e1dca\",\n            \"request\": {\n                \"url\": {\n                    \"host\": [\n                        \"https://api.getpostman.com\"\n                    ],\n                    \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                    \"variable\": [\n                        {\n                            \"description\": \"(Required) The unique identifier of the spacecraft\",\n                            \"key\": \"spacecraftId\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"path\": [\n                        \"spacecrafts\",\n                        \":spacecraftId\"\n                    ]\n                },\n                \"method\": \"GET\",\n                \"header\": [\n                    {\n                        \"key\": \"Accept\",\n                        \"value\": \"application/json\"\n                    }\n                ]\n            },\n            \"name\": \"Read a spacecraft\"\n        }\n    ],\n    \"auth\": {\n        \"apikey\": [\n            {\n                \"type\": \"string\",\n                \"key\": \"key\",\n                \"value\": \"X-Api-Key\"\n            },\n            {\n                \"type\": \"string\",\n                \"key\": \"value\",\n                \"value\": \"SCBKCDKCHKDHCK\"\n            },\n            {\n                \"type\": \"string\",\n                \"key\": \"in\",\n                \"value\": \"header\"\n            }\n        ],\n        \"type\": \"apikey\"\n    },\n    \"info\": {\n        \"description\": \"Buy or rent spacecrafts\",\n        \"_postman_id\": \"e726de58-f1b3-4edd-a8a7-2579dc799d39\",\n        \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\",\n        \"name\": \"Generated\"\n    },\n    \"variable\": [\n        {\n            \"value\": \"/\",\n            \"type\": \"string\",\n            \"id\": \"526a20ba-acfb-4549-a841-8edf2d24b929\",\n            \"key\": \"baseUrl\"\n        }\n    ]\n}"},{"id":"e3ec151c-d8e9-4928-9fb0-7f05a5861aee","name":"Successful Response with Version","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/collections/{{collectionId}}?versionId=e726de58-f1b3-4edd-a8a7-2579dc799d39","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","collections","{{collectionId}}"],"query":[{"key":"versionId","value":"e726de58-f1b3-4edd-a8a7-2579dc799d39"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"item\": [\n        {\n            \"protocolProfileBehavior\": {\n                \"disableBodyPruning\": true\n            },\n            \"response\": [\n                {\n                    \"originalRequest\": {\n                        \"url\": {\n                            \"host\": [\n                                \"https://api.getpostman.com\"\n                            ],\n                            \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                            \"variable\": [\n                                {\n                                    \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                    \"key\": \"spacecraftId\",\n                                    \"value\": \"<string>\"\n                                }\n                            ],\n                            \"path\": [\n                                \"spacecrafts\",\n                                \":spacecraftId\"\n                            ]\n                        },\n                        \"method\": \"GET\",\n                        \"header\": [\n                            {\n                                \"description\": \"Added as a part of security scheme: apikey\",\n                                \"key\": \"X-Api-Key\",\n                                \"value\": \"<API Key>\"\n                            }\n                        ]\n                    },\n                    \"code\": 200,\n                    \"_postman_previewlanguage\": \"json\",\n                    \"responseTime\": null,\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ],\n                    \"name\": \"The spacecraft corresponding to the provided `spacecraftId`\",\n                    \"_postman_previewtype\": \"html\",\n                    \"body\": \"{\\n  \\\"id\\\": \\\"<string>\\\",\\n  \\\"name\\\": \\\"commodo\\\",\\n  \\\"type\\\": \\\"capsule\\\",\\n  \\\"description\\\": \\\"pariatur dolo\\\"\\n}\",\n                    \"cookie\": [],\n                    \"status\": \"OK\",\n                    \"id\": \"54467f6e-71d7-43d5-acc0-48f948e38528\"\n                },\n                {\n                    \"originalRequest\": {\n                        \"url\": {\n                            \"host\": [\n                                \"https://api.getpostman.com\"\n                            ],\n                            \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                            \"variable\": [\n                                {\n                                    \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                    \"key\": \"spacecraftId\",\n                                    \"value\": \"<string>\"\n                                }\n                            ],\n                            \"path\": [\n                                \"spacecrafts\",\n                                \":spacecraftId\"\n                            ]\n                        },\n                        \"method\": \"GET\",\n                        \"header\": [\n                            {\n                                \"description\": \"Added as a part of security scheme: apikey\",\n                                \"key\": \"X-Api-Key\",\n                                \"value\": \"<API Key>\"\n                            }\n                        ]\n                    },\n                    \"code\": 404,\n                    \"_postman_previewlanguage\": \"json\",\n                    \"responseTime\": null,\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ],\n                    \"name\": \"No spacecraft found for the provided `spacecraftId`\",\n                    \"_postman_previewtype\": \"html\",\n                    \"body\": \"{\\n  \\\"message\\\": \\\"dolore Excepteur\\\"\\n}\",\n                    \"cookie\": [],\n                    \"status\": \"Not Found\",\n                    \"id\": \"1231609a-7a3d-444d-aa0c-579703e618f4\"\n                },\n                {\n                    \"originalRequest\": {\n                        \"url\": {\n                            \"host\": [\n                                \"https://api.getpostman.com\"\n                            ],\n                            \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                            \"variable\": [\n                                {\n                                    \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                    \"key\": \"spacecraftId\",\n                                    \"value\": \"<string>\"\n                                }\n                            ],\n                            \"path\": [\n                                \"spacecrafts\",\n                                \":spacecraftId\"\n                            ]\n                        },\n                        \"method\": \"GET\",\n                        \"header\": [\n                            {\n                                \"description\": \"Added as a part of security scheme: apikey\",\n                                \"key\": \"X-Api-Key\",\n                                \"value\": \"<API Key>\"\n                            }\n                        ]\n                    },\n                    \"code\": 500,\n                    \"_postman_previewlanguage\": \"json\",\n                    \"responseTime\": null,\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ],\n                    \"name\": \"Unexpected error\",\n                    \"_postman_previewtype\": \"html\",\n                    \"body\": \"{\\n  \\\"message\\\": \\\"dolore Excepteur\\\"\\n}\",\n                    \"cookie\": [],\n                    \"status\": \"Internal Server Error\",\n                    \"id\": \"db674465-8cec-4208-9724-42278ca9b83c\"\n                }\n            ],\n            \"id\": \"d3779255-5293-4e58-9b65-8954936e1dca\",\n            \"request\": {\n                \"url\": {\n                    \"host\": [\n                        \"https://api.getpostman.com\"\n                    ],\n                    \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                    \"variable\": [\n                        {\n                            \"description\": \"(Required) The unique identifier of the spacecraft\",\n                            \"key\": \"spacecraftId\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"path\": [\n                        \"spacecrafts\",\n                        \":spacecraftId\"\n                    ]\n                },\n                \"method\": \"GET\",\n                \"header\": [\n                    {\n                        \"key\": \"Accept\",\n                        \"value\": \"application/json\"\n                    }\n                ]\n            },\n            \"name\": \"Read a spacecraft\"\n        }\n    ],\n    \"auth\": {\n        \"apikey\": [\n            {\n                \"type\": \"string\",\n                \"key\": \"key\",\n                \"value\": \"X-Api-Key\"\n            },\n            {\n                \"type\": \"string\",\n                \"key\": \"value\",\n                \"value\": \"SCBKCDKCHKDHCK\"\n            },\n            {\n                \"type\": \"string\",\n                \"key\": \"in\",\n                \"value\": \"header\"\n            }\n        ],\n        \"type\": \"apikey\"\n    },\n    \"info\": {\n        \"description\": \"Buy or rent spacecrafts\",\n        \"_postman_id\": \"e726de58-f1b3-4edd-a8a7-2579dc799d39\",\n        \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\",\n        \"name\": \"Generated\"\n    },\n    \"variable\": [\n        {\n            \"value\": \"/\",\n            \"type\": \"string\",\n            \"id\": \"526a20ba-acfb-4549-a841-8edf2d24b929\",\n            \"key\": \"baseUrl\"\n        }\n    ]\n}"},{"id":"4c07ff2a-ebf1-4131-8874-420c66d33849","name":"Version ID Missing","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/collections/{{collectionId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","collections","{{collectionId}}"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"title\": \"Invalid request body\",\n    \"type\": \"invalidParamError\",\n    \"detail\": \"Missing field 'versionId' in the request body\"\n}"}]},{"name":"Add a collection","id":"d0522645-e15c-413a-9e47-f0748ab85c5f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"operationType\": \"{{operationType}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/collections","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","collections"]},"description":"Adds a collection to an API. To do this, use the following `operationType` values:\n\n- `COPY_COLLECTION` — Copies a collection from the workspace and adds it to an API.\n- `CREATE_NEW` — Creates a new collection by providing the new collection's content.\n- `GENERATE_FROM_SCHEMA` — Generates the collection from an API schema.\n    - `options` — An **object** that contains advanced creation options and their values. You can find a complete list of properties and their values in Postman's [OpenAPI 3.0 to Postman Collection v2.1.0 Converter OPTIONS documentation](https://github.com/postmanlabs/openapi-to-postman/blob/develop/OPTIONS.md). **These properties are case-sensitive.**\n\nFor examples of each method, see the collection's response examples."},"response":[{"id":"69bf3839-2499-4451-8283-fbcf146f7667","name":"Copy a Collection","originalRequest":{"method":"POST","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n  \"operationType\": \"COPY_COLLECTION\",\n  \"data\": {\n    \"collectionId\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n  }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/collections","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","collections"]}},"status":"Created","code":201,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n}"},{"id":"c668da34-3fe5-436d-bd20-8007670b0d7d","name":"Generate a Collection from Schema","originalRequest":{"method":"POST","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n  \"operationType\": \"GENERATE_FROM_SCHEMA\",\n  \"name\": \"Test Collection\",\n  \"options\": {\n      \"enableOptionalParameters\": true,\n      \"folderStrategy\": \"Tags\"\n  }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/collections","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","collections"]}},"status":"Created","code":201,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n}"},{"id":"eda034f2-9d54-44e7-a81a-d724927c00e6","name":"Add a New Collection","originalRequest":{"method":"POST","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"operationType\": \"CREATE_NEW\",\n    \"data\": {\n        \"item\": [\n            {\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"response\": [\n                    {\n                        \"originalRequest\": {\n                            \"url\": {\n                                \"host\": [\n                                    \"https://api.getpostman.com\"\n                                ],\n                                \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                                \"variable\": [\n                                    {\n                                        \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                        \"key\": \"spacecraftId\",\n                                        \"value\": \"<string>\"\n                                    }\n                                ],\n                                \"path\": [\n                                    \"spacecrafts\",\n                                    \":spacecraftId\"\n                                ]\n                            },\n                            \"method\": \"GET\",\n                            \"header\": [\n                                {\n                                    \"description\": \"Added as a part of security scheme: apikey\",\n                                    \"key\": \"X-Api-Key\",\n                                    \"value\": \"<API Key>\"\n                                }\n                            ]\n                        },\n                        \"code\": 200,\n                        \"_postman_previewlanguage\": \"json\",\n                        \"responseTime\": null,\n                        \"header\": [\n                            {\n                                \"key\": \"Content-Type\",\n                                \"value\": \"application/json\"\n                            }\n                        ],\n                        \"name\": \"The spacecraft corresponding to the provided `spacecraftId`\",\n                        \"_postman_previewtype\": \"html\",\n                        \"body\": \"{\\n  \\\"id\\\": \\\"<string>\\\",\\n  \\\"name\\\": \\\"commodo\\\",\\n  \\\"type\\\": \\\"capsule\\\",\\n  \\\"description\\\": \\\"pariatur dolo\\\"\\n}\",\n                        \"cookie\": [],\n                        \"status\": \"OK\",\n                        \"id\": \"54467f6e-71d7-43d5-acc0-48f948e38528\"\n                    },\n                    {\n                        \"originalRequest\": {\n                            \"url\": {\n                                \"host\": [\n                                    \"https://api.getpostman.com\"\n                                ],\n                                \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                                \"variable\": [\n                                    {\n                                        \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                        \"key\": \"spacecraftId\",\n                                        \"value\": \"<string>\"\n                                    }\n                                ],\n                                \"path\": [\n                                    \"spacecrafts\",\n                                    \":spacecraftId\"\n                                ]\n                            },\n                            \"method\": \"GET\",\n                            \"header\": [\n                                {\n                                    \"description\": \"Added as a part of security scheme: apikey\",\n                                    \"key\": \"X-Api-Key\",\n                                    \"value\": \"<API Key>\"\n                                }\n                            ]\n                        },\n                        \"code\": 404,\n                        \"_postman_previewlanguage\": \"json\",\n                        \"responseTime\": null,\n                        \"header\": [\n                            {\n                                \"key\": \"Content-Type\",\n                                \"value\": \"application/json\"\n                            }\n                        ],\n                        \"name\": \"No spacecraft found for the provided `spacecraftId`\",\n                        \"_postman_previewtype\": \"html\",\n                        \"body\": \"{\\n  \\\"message\\\": \\\"dolore Excepteur\\\"\\n}\",\n                        \"cookie\": [],\n                        \"status\": \"Not Found\",\n                        \"id\": \"1231609a-7a3d-444d-aa0c-579703e618f4\"\n                    },\n                    {\n                        \"originalRequest\": {\n                            \"url\": {\n                                \"host\": [\n                                    \"https://api.getpostman.com\"\n                                ],\n                                \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                                \"variable\": [\n                                    {\n                                        \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                        \"key\": \"spacecraftId\",\n                                        \"value\": \"<string>\"\n                                    }\n                                ],\n                                \"path\": [\n                                    \"spacecrafts\",\n                                    \":spacecraftId\"\n                                ]\n                            },\n                            \"method\": \"GET\",\n                            \"header\": [\n                                {\n                                    \"description\": \"Added as a part of security scheme: apikey\",\n                                    \"key\": \"X-Api-Key\",\n                                    \"value\": \"<API Key>\"\n                                }\n                            ]\n                        },\n                        \"code\": 500,\n                        \"_postman_previewlanguage\": \"json\",\n                        \"responseTime\": null,\n                        \"header\": [\n                            {\n                                \"key\": \"Content-Type\",\n                                \"value\": \"application/json\"\n                            }\n                        ],\n                        \"name\": \"Unexpected error\",\n                        \"_postman_previewtype\": \"html\",\n                        \"body\": \"{\\n  \\\"message\\\": \\\"dolore Excepteur\\\"\\n}\",\n                        \"cookie\": [],\n                        \"status\": \"Internal Server Error\",\n                        \"id\": \"db674465-8cec-4208-9724-42278ca9b83c\"\n                    }\n                ],\n                \"id\": \"d3779255-5293-4e58-9b65-8954936e1dca\",\n                \"request\": {\n                    \"url\": {\n                        \"host\": [\n                            \"https://api.getpostman.com\"\n                        ],\n                        \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                        \"variable\": [\n                            {\n                                \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                \"key\": \"spacecraftId\",\n                                \"value\": \"<string>\"\n                            }\n                        ],\n                        \"path\": [\n                            \"spacecrafts\",\n                            \":spacecraftId\"\n                        ]\n                    },\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Accept\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                },\n                \"name\": \"Read a spacecraft\"\n            }\n        ],\n        \"auth\": {\n            \"apikey\": [\n                {\n                    \"type\": \"string\",\n                    \"key\": \"key\",\n                    \"value\": \"X-Api-Key\"\n                },\n                {\n                    \"type\": \"string\",\n                    \"key\": \"value\",\n                    \"value\": \"SCBKCDKCHKDHCK\"\n                },\n                {\n                    \"type\": \"string\",\n                    \"key\": \"in\",\n                    \"value\": \"header\"\n                }\n            ],\n            \"type\": \"apikey\"\n        },\n        \"info\": {\n            \"description\": \"Buy or rent spacecrafts\",\n            \"_postman_id\": \"e726de58-f1b3-4edd-a8a7-2579dc799d39\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\",\n            \"name\": \"Generated\"\n        },\n        \"variable\": [\n            {\n                \"value\": \"/\",\n                \"type\": \"string\",\n                \"id\": \"526a20ba-acfb-4549-a841-8edf2d24b929\",\n                \"key\": \"baseUrl\"\n            }\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/collections","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","collections"]}},"status":"Created","code":201,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n}"},{"id":"5abf7597-c715-45c1-9338-e531c368dc31","name":"Forbidden","originalRequest":{"method":"POST","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n  \"operationType\": \"COPY_COLLECTION\",\n  \"data\": {\n    \"collectionId\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n  }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/collections","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","collections"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"detail\": \"You do not have access to perform this operation.\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"type\": \"forbiddenError\"\n}"}]},{"name":"Sync collection with schema","id":"31b48e38-a48f-4557-be8d-14276fcc995c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/collections/{{collectionId}}/sync-with-schema-tasks","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","collections","{{collectionId}}","sync-with-schema-tasks"]},"description":"Syncs a collection attached to an API with the API schema.\n\nThis is an asynchronous endpoint that returns an HTTP `202 Accepted` response. The response contains a polling link to the `/apis/{apiId}/tasks/{taskId}` endpoint in the Location header.\n\n**Note:**\n\nThis endpoint only supports the OpenAPI 3 schema type."},"response":[{"id":"b82a1689-a9c5-4781-96e0-9ce059a23c0f","name":"Successful Response","originalRequest":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/collections/{{collectionId}}/sync-with-schema-tasks","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","collections","{{collectionId}}","sync-with-schema-tasks"]}},"status":"Accepted","code":202,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""},{"key":"Location","value":"/apis/5360b75f-447e-467c-9299-12fd6c92450d/collections/e726de58-f1b3-4edd-a8a7-2579dc799d39","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"taskId\": \"66ae9950-0869-4e65-96b0-1e0e47e771af\"\n}"},{"id":"9a6122c0-a5de-49b7-81ea-814433fd49ed","name":"Schema Not Found","originalRequest":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/collections/{{collectionId}}/sync-with-schema-tasks","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","collections","{{collectionId}}","sync-with-schema-tasks"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"detail\": \"We could not find a schema linked to this API\",\n    \"title\": \"Schema not found\",\n    \"type\": \"instanceNotFoundError\"\n}"},{"id":"de0d212f-d436-4224-b0b3-44acb097bbcf","name":"Unsupported Schema Type","originalRequest":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/collections/{{collectionId}}/sync-with-schema-tasks","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","collections","{{collectionId}}","sync-with-schema-tasks"]}},"status":"Unprocessable Entity (WebDAV) (RFC 4918)","code":422,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"title\": \"Unsupported schema\",\n    \"detail\": \"Collection syncing is not supported for the current schema type of the API\",\n    \"type\": \"unsupportedEntityError\"\n}"},{"id":"43c5042b-60d3-4e2c-b6c0-4e8de510926d","name":"Action Not Allowed","originalRequest":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/collections/{{collectionId}}/sync-with-schema-tasks","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","collections","{{collectionId}}","sync-with-schema-tasks"]}},"status":"Unprocessable Entity (WebDAV) (RFC 4918)","code":422,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"detail\": \"This action is not allowed for git linked APIs\",\n    \"type\": \"actionNotAllowedError\",\n    \"title\": \"Action not allowed\"\n}"},{"id":"3c3c2b77-d4d5-4cc9-9620-307797c88261","name":"v9 Unsupported","originalRequest":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/collections/{{collectionId}}/sync-with-schema-tasks","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","collections","{{collectionId}}","sync-with-schema-tasks"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"detail\": \"This endpoint does not support v9 APIs.\",\n    \"title\": \"Unsupported API\",\n    \"type\": \"unsupportedEntityError\"\n}"},{"id":"6feaa37f-e99a-4c04-aee3-265c6ce824ec","name":"Collection Not Found","originalRequest":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/collections/{{collectionId}}/sync-with-schema-tasks","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","collections","{{collectionId}}","sync-with-schema-tasks"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"detail\": \"We could not find a collection you are looking for\",\n    \"title\": \"Collection not found\",\n    \"type\": \"instanceNotFoundError\"\n}"},{"id":"ce2dc6c4-e82a-4620-bcbd-0bf8745824f2","name":"API Not Found","originalRequest":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/collections/{{collectionId}}/sync-with-schema-tasks","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","collections","{{collectionId}}","sync-with-schema-tasks"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"title\": \"We could not find the API you are looking for\",\n    \"detail\": \"We could not find the API you are looking for.\",\n    \"type\": \"instanceNotFoundError\"\n}"},{"id":"6a19a792-2488-4233-8303-ab365dc646c2","name":"Forbidden","originalRequest":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/collections/{{collectionId}}/sync-with-schema-tasks","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","collections","{{collectionId}}","sync-with-schema-tasks"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"Text","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"detail\": \"You do not have access to perform this operation.\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"type\": \"forbiddenError\"\n}"}]}],"id":"40449770-d24c-40de-9f78-24bb8de1fcaf","description":"The **Collections** endpoints enable you to manage your collections linked to an API."},{"name":"Tags","item":[{"name":"Get an API's tags","id":"f2451baa-6db8-447c-a5fb-4e40a36a9521","protocolProfileBehavior":{"disableBodyPruning":true,"disabledSystemHeaders":{"accept":true}},"request":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiUid}}/tags","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiUid}}","tags"]},"description":"Gets all the tags associated with an API."},"response":[{"id":"78a29186-4b7f-4871-95fa-846ece55c3b4","name":"Successful Response","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/12345678-6fd634a3-79ba-451d-8f07-56a953f96667/tags","protocol":"https","host":["api","getpostman","com"],"path":["apis","12345678-6fd634a3-79ba-451d-8f07-56a953f96667","tags"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}"},{"id":"dec8a982-1407-4805-b5f6-e366633d7bf8","name":"Unauthorized","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/12345678-6fd634a3-79ba-451d-8f07-56a953f96667/tags","protocol":"https","host":["api","getpostman","com"],"path":["apis","12345678-6fd634a3-79ba-451d-8f07-56a953f96667","tags"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"status\": 401\n}"},{"id":"81b264da-ecf1-4dcb-8e13-db7949295906","name":"Invalid Credentials","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/12345678-6fd634a3-79ba-451d-8f07-56a953f96667/tags","protocol":"https","host":["api","getpostman","com"],"path":["apis","12345678-6fd634a3-79ba-451d-8f07-56a953f96667","tags"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"The request lacks valid credentials.\",\n    \"status\": 401\n}"},{"id":"c58597f6-8875-4c0e-a4a9-08132dba70dc","name":"Forbidden","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/12345678-6fd634a3-79ba-451d-8f07-56a953f96667/tags","protocol":"https","host":["api","getpostman","com"],"path":["apis","12345678-6fd634a3-79ba-451d-8f07-56a953f96667","tags"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"You do not have developer role. Ask your (super)admin to grant you developer role\",\n    \"status\": 403\n}"},{"id":"0328aada-452b-4896-b2ce-99d20864625e","name":"Not Enterprise","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/12345678-6fd634a3-79ba-451d-8f07-56a953f96667/tags","protocol":"https","host":["api","getpostman","com"],"path":["apis","12345678-6fd634a3-79ba-451d-8f07-56a953f96667","tags"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"The tags feature is only available to enterprise teams\",\n    \"status\": 403\n}"},{"id":"467ba338-7044-40f7-bb75-723505820eed","name":"No View Permissions","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/12345678-6fd634a3-79ba-451d-8f07-56a953f96667/tags","protocol":"https","host":["api","getpostman","com"],"path":["apis","12345678-6fd634a3-79ba-451d-8f07-56a953f96667","tags"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"status\": 403,\n    \"detail\": \"You do not have view permission\",\n    \"instance\": \"/tags/apis/12345678-90ca9f5a-c4c4-11ed-afa1-0242ac120002\"\n}"},{"id":"59c1fcbb-1391-4b38-add8-b9be7be28aba","name":"Not Found","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/12345678-6fd634a3-79ba-451d-8f07-56a953f96667/tags","protocol":"https","host":["api","getpostman","com"],"path":["apis","12345678-6fd634a3-79ba-451d-8f07-56a953f96667","tags"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Resource Not Found\",\n    \"detail\": \"Slug 'needs-review' does not exist\",\n    \"status\": 404,\n    \"instance\": \"/slugs/needs-review/entities\"\n}"},{"id":"99848c37-7c9c-4413-b7e1-708bd1644f04","name":"Internal Server Error","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/12345678-6fd634a3-79ba-451d-8f07-56a953f96667/tags","protocol":"https","host":["api","getpostman","com"],"path":["apis","12345678-6fd634a3-79ba-451d-8f07-56a953f96667","tags"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"status\": 500\n}"}]},{"name":"Update an API's tags","id":"1ec6f711-6398-4955-b563-85179822bffa","protocolProfileBehavior":{"disableBodyPruning":true,"disabledSystemHeaders":{"accept":true}},"request":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"{{tagName}}\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiUid}}/tags","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiUid}}","tags"]},"description":"Gets all the tags associated with an API. This endpoint replaces all existing tags with those you pass in the request body.\n\n**Note:**\n\n- You can only add a maximum of five tags to an API.\n- Tags must be between `2` and `64` characters long.\n- Tags must follow the `^[a-z][a-z0-9-]\\\\\\\\*[a-z0-9]+$` pattern."},"response":[{"id":"cffaac0d-2df8-4afa-86a4-5ff762b26216","name":"Successful Response","originalRequest":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/12345678-6fd634a3-79ba-451d-8f07-56a953f96667/tags","protocol":"https","host":["api","getpostman","com"],"path":["apis","12345678-6fd634a3-79ba-451d-8f07-56a953f96667","tags"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}"},{"id":"cfdc648b-0103-49c1-ba7a-eeaadbe076c4","name":"Tag Exceeds Max Size","originalRequest":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"oS1Z9gHS9lDaAhX3xu0ekJRZwt0CPIikGYApohSPJVu3n3iiHxdISMqMFVo6wPf8N\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/12345678-6fd634a3-79ba-451d-8f07-56a953f96667/tags","protocol":"https","host":["api","getpostman","com"],"path":["apis","12345678-6fd634a3-79ba-451d-8f07-56a953f96667","tags"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"title\": \"Bad Request\",\n    \"detail\": \"body/tags/0/slug must NOT have more than 64 characters\",\n    \"status\": 400\n}"},{"id":"7743ee92-2738-4835-8ba3-2275b96ffd1a","name":"Exceeds Max Number of Tags","originalRequest":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/12345678-6fd634a3-79ba-451d-8f07-56a953f96667/tags","protocol":"https","host":["api","getpostman","com"],"path":["apis","12345678-6fd634a3-79ba-451d-8f07-56a953f96667","tags"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/badrequest\",\n    \"title\": \"Bad Request\",\n    \"detail\": \"Tags max length of 5 exceeded\",\n    \"status\": 400\n}"},{"id":"53f2856b-cdcf-4676-adcd-64bb0b3d8d08","name":"Special Character Present","originalRequest":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"test-api!\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/12345678-6fd634a3-79ba-451d-8f07-56a953f96667/tags","protocol":"https","host":["api","getpostman","com"],"path":["apis","12345678-6fd634a3-79ba-451d-8f07-56a953f96667","tags"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"title\": \"Bad Request\",\n    \"detail\": \"body/tags/0/slug must match pattern \\\"^[a-z][a-z0-9-]*[a-z0-9]+$\\\"\",\n    \"status\": 400\n}"},{"id":"f2a93d0c-7873-40a5-aee8-a014096892c0","name":"Missing tags Object","originalRequest":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/12345678-6fd634a3-79ba-451d-8f07-56a953f96667/tags","protocol":"https","host":["api","getpostman","com"],"path":["apis","12345678-6fd634a3-79ba-451d-8f07-56a953f96667","tags"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"statusCode\": 400,\n    \"error\": \"Bad Request\",\n    \"message\": \"body must have required property 'tags'\"\n}"},{"id":"f7701ae5-f212-49e5-b212-b34fd2edcd80","name":"Tag Does Not Start with Letter","originalRequest":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"1test\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/12345678-6fd634a3-79ba-451d-8f07-56a953f96667/tags","protocol":"https","host":["api","getpostman","com"],"path":["apis","12345678-6fd634a3-79ba-451d-8f07-56a953f96667","tags"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"title\": \"Bad Request\",\n    \"detail\": \"body/tags/0/slug must match pattern \\\"^[a-z][a-z0-9-]*[a-z0-9]+$\\\"\",\n    \"status\": 400\n}"},{"id":"2dd80c28-ad32-4b0b-8362-b26e310caafe","name":"Unauthorized","originalRequest":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/12345678-6fd634a3-79ba-451d-8f07-56a953f96667/tags","protocol":"https","host":["api","getpostman","com"],"path":["apis","12345678-6fd634a3-79ba-451d-8f07-56a953f96667","tags"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"status\": 401\n}"},{"id":"8d6d0b36-c2c7-4963-8ddf-d22cb1b6e630","name":"Invalid Credentials","originalRequest":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/12345678-6fd634a3-79ba-451d-8f07-56a953f96667/tags","protocol":"https","host":["api","getpostman","com"],"path":["apis","12345678-6fd634a3-79ba-451d-8f07-56a953f96667","tags"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"The request lacks valid credentials.\",\n    \"status\": 401\n}"},{"id":"5329a56a-3de5-487a-b12e-c1ae9a138d86","name":"Forbidden","originalRequest":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/12345678-6fd634a3-79ba-451d-8f07-56a953f96667/tags","protocol":"https","host":["api","getpostman","com"],"path":["apis","12345678-6fd634a3-79ba-451d-8f07-56a953f96667","tags"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"You do not have developer role. Ask your (super)admin to grant you developer role\",\n    \"status\": 403\n}"},{"id":"030acb99-6467-49c0-b890-7e90df1a215a","name":"Not Enterprise","originalRequest":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/12345678-6fd634a3-79ba-451d-8f07-56a953f96667/tags","protocol":"https","host":["api","getpostman","com"],"path":["apis","12345678-6fd634a3-79ba-451d-8f07-56a953f96667","tags"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"The tags feature is only available to enterprise teams\",\n    \"status\": 403\n}"},{"id":"ca99e9a7-6c67-4987-899a-69bcd88c77e3","name":"Internal Server Error","originalRequest":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/12345678-6fd634a3-79ba-451d-8f07-56a953f96667/tags","protocol":"https","host":["api","getpostman","com"],"path":["apis","12345678-6fd634a3-79ba-451d-8f07-56a953f96667","tags"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"status\": 500\n}"}]}],"id":"7f6d94b3-f379-41e0-9bf7-0ca4033a4a34","description":"The **Tags** endpoints enable you to manage API tags with Postman's [tagging](https://learning.postman.com/docs/designing-and-developing-your-api/managing-apis/#tagging-apis) feature. Tagging is available on [Postman Enterprise plans](https://www.postman.com/pricing/)."},{"name":"Create an API","id":"3a2d1813-8dac-4cc9-b966-0af0668b5195","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"POST","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"{{apiName}}\",\n    \"summary\": \"{{apiSummary}}\",\n    \"description\": \"{{apiDescription}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis?workspaceId={{workspaceId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis"],"query":[{"key":"workspaceId","value":"{{workspaceId}}","description":"Required. The workspace ID."}]},"description":"Creates an API. Include the following properties in the request body:\n\n- `name` — A **string** value that contains the API's name.\n    \n\nYou can include the following optional properties:\n\n- `summary` — A **string** value that contains a summary of the API.\n- `description` — A **string** value that contains the description of the API."},"response":[{"id":"0b75e150-19c5-4ed1-9cf6-41b26153c1f1","name":"Successful Response","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"Test API\",\n    \"summary\": \"Test API Schema\",\n    \"description\": \"This is a test API.\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["apis"],"query":[{"key":"workspaceId","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"}]},"description":"Creates an API. Include the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n    \n\nYou can include the following optional properties:\n\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."},"status":"Created","code":201,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"createdAt\": \"2022-06-29T20:46:58.000Z\",\n    \"updatedAt\": \"2022-06-29T20:46:58.000Z\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"name\": \"Test API\",\n    \"summary\": \"Test API Schema\",\n    \"description\": \"This is a test API.\",\n    \"createdBy\": \"12345678\",\n    \"updatedBy\": \"12345678\"\n}"},{"id":"3b33057f-bc89-4048-aabf-ded6edfed5c7","name":"Forbidden","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"Test API\",\n    \"summary\": \"Test API Schema\",\n    \"description\": \"This is a test API.\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["apis"],"query":[{"key":"workspaceId","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"}]},"description":"Creates an API. Include the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n    \n\nYou can include the following optional properties:\n\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"forbiddenError\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"You do not have access to perform this operation.\"\n}"},{"id":"2a6f885b-3188-4752-ae7f-0a1c858fb930","name":"Missing Workspace ID","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"Test API\",\n    \"summary\": \"Test API Schema\",\n    \"description\": \"This is a test API.\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis","protocol":"https","host":["api","getpostman","com"],"path":["apis"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"paramMissingError\",\n    \"title\": \"Parameter is missing in the request.\",\n    \"detail\": \"Parameter, workspaceId is missing in the request.\"\n}"},{"id":"0420a79b-67e7-403a-83eb-cdfd52648389","name":"Workspace Not Found","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"Test API\",\n    \"summary\": \"Test API Schema\",\n    \"description\": \"This is a test API.\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["apis"],"query":[{"key":"workspaceId","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"}]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"title\": \"We could not find the workspace you are looking for\",\n    \"detail\": \"We could not find the workspace you are looking for.\",\n    \"type\": \"instanceNotFoundError\"\n}"}]},{"name":"Update an API","id":"bd36be72-8cbc-4ec9-9c96-d259a6b2bc74","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"{{apiName}}\",\n    \"summary\": \"{{apiSummary}}\",\n    \"description\": \"{{apiDescription}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}"]},"description":"Updates an API. Include at least one of the following properties in the request body:\n\n- `name` — A **string** value that contains the API's name.\n- `summary` — A **string** value that contains a summary of the API.\n- `description` — A **string** value that contains the description of the API. This supports Markdown formatting."},"response":[{"id":"f65ac8cf-68f4-4314-ab4f-f0dfbd52fa35","name":"Successful Response","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"Test API A\",\n    \"summary\": \"Test API A Schema\",\n    \"description\": \"This is Test API A.\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}"]},"description":"Updates an API. Include at least one of the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"createdAt\": \"2022-06-29T20:46:58.000Z\",\n    \"updatedAt\": \"2022-06-29T20:46:58.000Z\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"name\": \"Test API A\",\n    \"summary\": \"Test API A Schema\",\n    \"description\": \"This is Test API A.\",\n    \"createdBy\": \"12345678\",\n    \"updatedBy\": \"12345678\"\n}"},{"id":"255001ca-ac49-4761-99fb-4c3a99f06265","name":"API Not Found","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"Test API A\",\n    \"summary\": \"Test API A Schema\",\n    \"description\": \"This is Test API A.\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}"]},"description":"Updates an API. Include at least one of the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"We could not find the API you are looking for\",\n    \"detail\": \"We could not find the API you are looking for.\"\n}"},{"id":"088fd2cd-a990-45da-8849-dd873f7303bd","name":"Forbidden","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"Test API A\",\n    \"summary\": \"Test API A Schema\",\n    \"description\": \"This is Test API A.\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}"]},"description":"Updates an API. Include at least one of the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"forbiddenError\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"You do not have access to perform this operation.\"\n}"},{"id":"ab34fec0-afec-4988-b48d-ce4b28dada6b","name":"v9 Unsupported","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"Test API A\",\n    \"summary\": \"Test API A Schema\",\n    \"description\": \"This is Test API A.\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}"]}},"status":"Unprocessable Entity (WebDAV) (RFC 4918)","code":422,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"unsupportedEntityError\",\n    \"title\": \"Unsupported API\",\n    \"detail\": \"This endpoint does not support v9 APIs.\"\n}"}]},{"name":"Get all APIs","id":"775d779a-2067-4c45-a5c9-411a5bdaf162","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis?workspaceId={{workspaceId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis"],"query":[{"key":"workspaceId","value":"{{workspaceId}}","description":"Required. The workspace ID."},{"key":"createdBy","value":"{{createdBy}}","description":"Optional. The user ID of the user that created the resource.","disabled":true},{"key":"cursor","value":"{{cursor}}","description":"Optional. The pointer to the first record of the set of paginated results.","disabled":true},{"key":"limit","value":"{{limit}}","description":"Optional. The maximum number of rows to return in the response. This value defaults to `10`.","disabled":true},{"key":"description","value":"{{description}}","description":"Optional. Return only APIs whose description includes the given value. Matching is not case-sensitive.","disabled":true}]},"description":"Gets information about all APIs in a workspace.\n\n**Note:**\n\nThis endpoint only returns APIs created or migrated in Postman v10 and higher."},"response":[{"id":"01175437-7173-4661-ab06-54e2f4c4709d","name":"Successful Response","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["apis"],"query":[{"key":"workspaceId","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Tue, 12 Jul 2022 16:39:09 GMT"},{"key":"Content-Type","value":"application/json","description":""},{"key":"Content-Length","value":"120"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"x-frame-options","value":"SAMEORIGIN"},{"key":"Access-Control-Allow-Origin","value":"*"},{"key":"x-srv-trace","value":"v=1;t=915b2bd230311a7e"},{"key":"x-srv-span","value":"v=1;s=108d09101d76e02a"},{"key":"X-RateLimit-Limit","value":"400"},{"key":"X-RateLimit-Remaining","value":"399"},{"key":"X-RateLimit-Reset","value":"1657644009"},{"key":"ETag","value":"W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""},{"key":"Vary","value":"Accept-Encoding"}],"cookie":[],"responseTime":null,"body":"{\n    \"meta\": {\n        \"nextCursor\": \"VGh1IE1hciAxNiAyMDIzIDE3OjIxOjUzIEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=\",\n        \"total\": 4,\n        \"limit\": 10\n    },\n    \"apis\": [\n        {\n            \"updatedBy\": \"893478\",\n            \"createdBy\": \"893478\",\n            \"name\": \"New API\",\n            \"summary\": null,\n            \"description\": null,\n            \"createdAt\": \"2023-02-15T06:27:16.000Z\",\n            \"id\": \"73e15000-bc7a-4802-b80e-05fff18fd7f8\",\n            \"updatedAt\": \"2023-02-15T06:27:24.000Z\"\n        },\n        {\n            \"updatedBy\": \"12345678\",\n            \"createdBy\": \"12345678\",\n            \"name\": \"Test API\",\n            \"summary\": \"This is a test API.\",\n            \"description\": \"This is an API for testing purposes.\",\n            \"createdAt\": \"2023-02-15T13:07:08.000Z\",\n            \"id\": \"fec65321-5f55-4feb-8525-be95bccae8dd\",\n            \"updatedAt\": \"2023-02-15T13:07:08.000Z\"\n        },\n        {\n            \"updatedBy\": \"12345678\",\n            \"createdBy\": \"12345678\",\n            \"name\": \"Test API\",\n            \"summary\": \"This is a test API.\",\n            \"description\": \"This is an API for testing purposes.\",\n            \"createdAt\": \"2023-02-16T05:52:27.000Z\",\n            \"id\": \"b7c54faa-d119-4572-a18d-e2f5c32348ce\",\n            \"updatedAt\": \"2023-02-16T05:52:27.000Z\"\n        },\n        {\n            \"updatedBy\": \"12345678\",\n            \"createdBy\": \"12345678\",\n            \"name\": \"Test API\",\n            \"summary\": \"This is a test API.\",\n            \"description\": \"This is an API for testing purposes.\",\n            \"createdAt\": \"2023-02-16T07:07:16.000Z\",\n            \"id\": \"d535a8ba-ed4b-4c6a-bf1c-13fac95485b8\",\n            \"updatedAt\": \"2023-02-16T07:07:16.000Z\"\n        }\n    ]\n}"},{"id":"2266885c-f092-4900-88a0-8020100f0871","name":"Pagination with Cursor Response","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9)&cursor=V2VkIEZlYiAxNSAyMDIzIDEzOjA3OjA4IEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=&limit=2","protocol":"https","host":["api","getpostman","com"],"path":["apis"],"query":[{"key":"workspaceId","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9)"},{"key":"cursor","value":"V2VkIEZlYiAxNSAyMDIzIDEzOjA3OjA4IEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk="},{"key":"limit","value":"2"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"meta\": {\n        \"nextCursor\": \"VGh1IEZlYiAxNiAyMDIzIDA3OjA3OjE2IEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=\",\n        \"total\": 4,\n        \"limit\": 2\n    },\n    \"apis\": [\n        {\n            \"updatedBy\": \"893478\",\n            \"createdBy\": \"893478\",\n            \"name\": \"New API\",\n            \"summary\": null,\n            \"description\": null,\n            \"createdAt\": \"2023-02-15T06:27:16.000Z\",\n            \"id\": \"73e15000-bc7a-4802-b80e-05fff18fd7f8\",\n            \"updatedAt\": \"2023-02-15T06:27:24.000Z\"\n        },\n        {\n            \"updatedBy\": \"12345678\",\n            \"createdBy\": \"12345678\",\n            \"name\": \"Test API\",\n            \"summary\": \"This is a test API.\",\n            \"description\": \"This is an API for testing purposes.\",\n            \"createdAt\": \"2023-02-15T13:07:08.000Z\",\n            \"id\": \"fec65321-5f55-4feb-8525-be95bccae8dd\",\n            \"updatedAt\": \"2023-02-15T13:07:08.000Z\"\n        }\n    ]\n}"},{"id":"0ecb6fab-24e2-4189-ab27-dde5e8363dbe","name":"Missing Workspace ID","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis","protocol":"https","host":["api","getpostman","com"],"path":["apis"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"paramMissingError\",\n    \"title\": \"Parameter is missing in the request.\",\n    \"detail\": \"Parameter, workspaceId is missing in the request.\"\n}"},{"id":"3b516410-3ec2-43d1-bc7c-22bcd42764af","name":"Filter by createdBy","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9)&createdBy=893478","protocol":"https","host":["api","getpostman","com"],"path":["apis"],"query":[{"key":"workspaceId","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9)"},{"key":"createdBy","value":"893478"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"meta\": {\n        \"nextCursor\": \"V2VkIEZlYiAxNSAyMDIzIDEzOjA3OjA4IEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=\",\n        \"total\": 1,\n        \"limit\": 10\n    },\n    \"apis\": [\n        {\n            \"updatedBy\": \"893478\",\n            \"createdBy\": \"893478\",\n            \"name\": \"New API\",\n            \"summary\": null,\n            \"description\": null,\n            \"createdAt\": \"2023-02-15T06:27:16.000Z\",\n            \"id\": \"73e15000-bc7a-4802-b80e-05fff18fd7f8\",\n            \"updatedAt\": \"2023-02-15T06:27:24.000Z\"\n        }\n    ]\n}"},{"id":"28a1a313-2a26-493e-a57e-b0f72bf6ee11","name":"Filter by description","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9)&description=This is an API for testing purposes","protocol":"https","host":["api","getpostman","com"],"path":["apis"],"query":[{"key":"workspaceId","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9)"},{"key":"description","value":"This is an API for testing purposes"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"meta\": {\n        \"nextCursor\": \"V2VkIEZlYiAxNSAyMDIzIDEzOjA3OjA4IEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=\",\n        \"total\": 1,\n        \"limit\": 10\n    },\n    \"apis\": [\n        {\n            \"updatedBy\": \"893478\",\n            \"createdBy\": \"893478\",\n            \"name\": \"New API\",\n            \"summary\": null,\n            \"description\": \"This is an API for testing purposes.\",\n            \"createdAt\": \"2023-02-15T06:27:16.000Z\",\n            \"id\": \"73e15000-bc7a-4802-b80e-05fff18fd7f8\",\n            \"updatedAt\": \"2023-02-15T06:27:24.000Z\"\n        }\n    ]\n}"},{"id":"5939e122-f70c-4f3e-b6d8-69da4752933d","name":"Workspace Not Found","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9)","protocol":"https","host":["api","getpostman","com"],"path":["apis"],"query":[{"key":"workspaceId","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9)"}]}},"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"We could not find the workspace you are looking for\",\n    \"detail\": \"We could not find the workspace you are looking for.\"\n}"}]},{"name":"Get an API","id":"e95848e1-fe2c-4b22-8476-0ec42d6db205","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}"],"query":[{"key":"include","value":"{{includeOptions}}","description":"Optional. An array that contains one or more of the following additional resources to include in the response. Use this parameter to query for element links to the API, such as collections and schemas:\n- `collections` — Query for linked Postman collections.\n- `versions` — Query for linked versions.\n- `schemas` — Query for linked schemas.\n- `gitInfo` — Query for information about the API’s git-linked repository. This query only returns the linked repository  and folder locations of the files. It does **not** return `collections` or `schemas` information.\n\n**Note:**\nAPI viewers can only use the `versions` option.\n        ","disabled":true}]},"description":"Gets information about an API.\n\n**Note:**\n\n- Git-connected APIs will **only** return the `versions` and `gitInfo` query responses. This is because schema and collection information is stored in the connected Git repository. The `gitInfo` object only lists the repository and folder locations of the files.\n- API viewers can only use the `versions` option in the `include` query parameter."},"response":[{"id":"9cb2789c-2798-4a79-a276-1ce1015440c5","name":"Successful Response","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}"]},"description":"Gets information about an API."},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"description\": \"This is a test API.\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"updatedBy\": \"12345678\",\n    \"createdBy\": \"12345678\",\n    \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n    \"name\": \"Test API\",\n    \"summary\": \"Test API.\",\n    \"updatedAt\": \"2022-06-09T19:50:49.000Z\"\n}"},{"id":"eb1bfce1-cd63-4423-9ba0-ef3e48ed9bce","name":"With include Parameter","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}?include=schemas,collections,versions,gitInfo","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}"],"query":[{"key":"include","value":"schemas,collections,versions,gitInfo"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"createdBy\": \"12345678\",\n    \"name\": \"Test API\",\n    \"updatedBy\": \"12345678\",\n    \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n    \"description\": \"This is a test API.\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"collections\": [\n        {\n            \"id\": \"16bb367e-fafb-4ef3-933b-ee3d971866fb\"\n        }\n    ],\n    \"gitInfo\": {},\n    \"schemas\": [\n        {\n            \"id\": \"ae2b9ab2-28f2-401d-912f-eca09a78e98b\"\n        }\n    ],\n    \"versions\": [\n        {\n            \"id\": \"18ccb2dc-1746-4945-ba76-8152b37cr123\",\n            \"name\": \"v1.0.0\"\n        }\n    ],\n    \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n    \"summary\": \"Test API.\"\n}"},{"id":"3094d8ed-73e0-4c3f-8a95-ff5d28e99215","name":"Git-Linked API with root File","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}?include=schemas,collections,versions,gitInfo","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}"],"query":[{"key":"include","value":"schemas,collections,versions,gitInfo"}]},"description":"Gets information about an API."},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"createdBy\": \"12345678\",\n    \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n    \"updatedBy\": \"12345678\",\n    \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n    \"description\": \"This is a test API.\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"name\": \"Test API\",\n    \"summary\": \"Test API.\",\n    \"versions\": [\n        {\n            \"id\": \"18ccb2dc-1746-4945-ba76-8152b37cr123\",\n            \"name\": \"v1.0.0\"\n        }\n    ],\n    \"gitInfo\": {\n        \"schemaFolder\": \"\",\n        \"domain\": \"https://example.com\",\n        \"repository\": \"repo-name\",\n        \"organization\": \"org-name\",\n        \"collectionFolder\": \"collection-folder\"\n    }\n}"},{"id":"8de41c0d-a869-43ca-85d4-5a7f5bb4343b","name":"Git-Linked API with a Schema Folder","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}?include=schemas,collections,versions,gitInfo","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}"],"query":[{"key":"include","value":"schemas,collections,versions,gitInfo"}]},"description":"Gets information about an API."},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"createdBy\": \"12345678\",\n    \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n    \"updatedBy\": \"12345678\",\n    \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n    \"description\": \"This is a test API.\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"name\": \"Test API\",\n    \"summary\": \"Test API.\",\n    \"versions\": [\n        {\n            \"id\": \"18ccb2dc-1746-4945-ba76-8152b37cr123\",\n            \"name\": \"v1.0.0\"\n        }\n    ],\n    \"gitInfo\": {\n        \"schemaFolder\": \"schema-folder\",\n        \"domain\": \"https://example.com\",\n        \"repository\": \"repo-name\",\n        \"organization\": \"org-name\",\n        \"collectionFolder\": \"collection-folder\"\n    }\n}"},{"id":"3240dd11-4895-4971-9c52-b7b2404adbc2","name":"Response for API Viewers","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}?include=versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}"],"query":[{"key":"include","value":"versions"}]},"description":"Gets information about an API."},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n    \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"name\": \"Test API\",\n    \"summary\": \"Test API.\",\n    \"description\": \"This is a test API.\",\n    \"createdBy\": \"12345678\",\n    \"updatedBy\": \"12345678\",\n    \"versions\": [\n        {\n            \"id\": \"18ccb2dc-1746-4945-ba76-8152b37cr123\",\n            \"name\": \"v1.0.0\"\n        },\n        {\n            \"id\": \"5260b75f-447e-467c-9299-12f16c924503\",\n            \"name\": \"v1.0.1\"\n        }\n    ]\n}"},{"id":"66875d12-e8e8-4940-9a63-017a25bc77c9","name":"API Not Found","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}"]},"description":"Gets information about an API."},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"We could not find the API you are looking for\",\n    \"detail\": \"We could not find the API you are looking for.\"\n}"},{"id":"60ea0f0b-a6ae-4ab3-b9ab-ba626af9e753","name":"v9 Unsupported","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}"]}},"status":"Unprocessable Entity (WebDAV) (RFC 4918)","code":422,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"unsupportedEntityError\",\n    \"title\": \"Unsupported API\",\n    \"detail\": \"This endpoint does not support v9 APIs.\"\n}"}]},{"name":"Delete an API","id":"4f0c409d-063e-4a9c-95da-9598ba97015e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}"]},"description":"Deletes an API."},"response":[{"id":"7b52485e-17c2-4b28-9b28-621e4b0f77c2","name":"Deleted","originalRequest":{"method":"DELETE","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}"]},"description":"Deletes an API."},"status":"No Content","code":204,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":null},{"id":"d5c1fbf7-bdf1-4161-a7ec-5b152c6ea50d","name":"Forbidden","originalRequest":{"method":"DELETE","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/vnd.api.v10+json"}],"body":{"mode":"raw","raw":""},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}"]},"description":"Updates an API. Include at least one of the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"forbiddenError\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"You do not have access to perform this operation.\"\n}"},{"id":"0426b5c5-0e34-4ada-a60c-f41395fe6475","name":"API Not Found","originalRequest":{"method":"DELETE","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}"]},"description":"Deletes an API."},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"We could not find the API you are looking for\",\n    \"detail\": \"We could not find the API you are looking for.\"\n}"},{"id":"0b41bdc5-8a3e-40e9-8806-53858e8ebb15","name":"v9 Unsupported","originalRequest":{"method":"DELETE","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}"]}},"status":"Unprocessable Entity (WebDAV) (RFC 4918)","code":422,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"unsupportedEntityError\",\n    \"title\": \"Unsupported API\",\n    \"detail\": \"This endpoint does not support v9 APIs.\"\n}"}]},{"name":"Get status of an asynchronous task","id":"b8075ccb-4c2c-4b8c-8fd0-38c213d339fc","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/tasks/{{taskId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","tasks","{{taskId}}"]},"description":"Gets the status of an asynchronous task."},"response":[{"id":"632f3e81-cae6-4a44-931e-bd7c85c45b15","name":"Pending Status","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/tasks/{{taskId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","tasks","{{taskId}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"meta\": {\n        \"url\": \"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/collections/e726de58-f1b3-4edd-a8a7-2579dc799d39/sync\",\n        \"action\": \"update\",\n        \"model\": \"collection\"\n    },\n    \"id\": \"66ae9950-0869-4e65-96b0-1e0e47e771af\",\n    \"createdAt\": \"2023-02-12 19:34:49\",\n    \"updatedAt\": \"2023-02-12 19:34:49\",\n    \"status\": \"pending\"\n}"},{"id":"efa8eed0-eb56-405d-8fa5-86e2f58fb59b","name":"Completed Status","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/tasks/{{taskId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","tasks","{{taskId}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"meta\": {\n        \"url\": \"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/collections/e726de58-f1b3-4edd-a8a7-2579dc799d39/sync\",\n        \"action\": \"update\",\n        \"model\": \"collection\"\n    },\n    \"details\": {\n        \"resources\": [\n            {\n                \"id\": \"collectionID\",\n                \"url\": \"/apis/5360b75f-447e-467c-9299-12fd6c92450d/collections/e726de58-f1b3-4edd-a8a7-2579dc799d39\"\n            }\n        ]\n    },\n    \"id\": \"66ae9950-0869-4e65-96b0-1e0e47e771af\",\n    \"createdAt\": \"2023-02-12 19:34:49\",\n    \"updatedAt\": \"2023-02-12 19:34:49\",\n    \"status\": \"completed\"\n}"},{"id":"3ebb92c6-68c1-472d-b025-7dab877d9921","name":"Failed Status","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/tasks/{{taskId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","tasks","{{taskId}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"meta\": {\n        \"url\": \"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/collections/e726de58-f1b3-4edd-a8a7-2579dc799d39/sync\",\n        \"action\": \"update\",\n        \"model\": \"collection\"\n    },\n    \"details\": {\n        \"error\": {\n            \"message\": \"The API contains invalid schema\"\n        }\n    },\n    \"id\": \"66ae9950-0869-4e65-96b0-1e0e47e771af\",\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"updatedAt\": \"2023-02-12 19:34:49\",\n    \"status\": \"failed\"\n}"},{"id":"9e8dd578-1f26-4443-9e68-01d00609499a","name":"Not Found","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.api.v10+json"}],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/tasks/{{taskId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","tasks","{{taskId}}"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"detail\": \"Parameter, taskId is in an invalid format.\",\n    \"title\": \"The specified parameter is in an invalid format\",\n    \"type\": \"invalidParamsError\"\n}"}]}],"id":"5b43313e-4e1b-4882-b016-7093223276bf","description":"The `/apis` endpoints let you manage your APIs.\n\n## Important:\n\n- These endpoints are only available in Postman v10 and higher.\n- When using these endpoints, you must pass an `Accept` header with the `application/vnd.api.v10+json` value."},{"name":"v9","item":[{"name":"API Version","item":[{"name":"Get all API versions","id":"9be130ba-c4cc-4094-b5c3-b2ce41b187d2","request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions"]},"description":"Gets information about an API's versions.\n\n**In Postman v9 and earlier:**\n\nWhen you create an API, the system creates a single, default API version. You can use this version’s ID with any endpoints that require an API version ID."},"response":[{"id":"1fd0e92f-4b27-4bd4-9d8b-a7ea96473d6f","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"},"type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"versions\": [\n        {\n            \"id\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n            \"name\": \"Draft\",\n            \"summary\": null,\n            \"createdBy\": \"20891195\",\n            \"updatedBy\": \"20891195\",\n            \"stage\": \"Planning\",\n            \"visibility\": \"public\",\n            \"api\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n            \"createdAt\": \"2023-02-14T14:26:05.000Z\",\n            \"updatedAt\": \"2023-02-14T14:26:05.000Z\",\n            \"repositoryIntegration\": null\n        }\n    ]\n}"},{"id":"ef277d07-8c4f-4e48-b715-d494648e7858","name":"Bad Request","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"},{"id":"6b83ed62-3746-4771-9245-f288223f7c99","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Create an API version","id":"dbdbdf6e-6120-4a6c-a716-59439f078626","request":{"method":"POST","header":[{"name":"Content-Type","key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n\t\"version\": {\n\t\t\"name\": \"{{apiVersionName}}\",\n\t\t\"source\": {\n\t\t\t\"id\": \"{{apiVersionId}}\",\n\t\t\t\"schema\": {{boolean}},\n\t\t\t\"relations\": {\n\t\t\t\t\"monitor\": {{boolean}},\n\t\t\t\t\"mock\": {{boolean}},\n\t\t\t\t\"documentation\": {{boolean}},\n                \"test\": {{boolean}},\n                \"environment\": {{boolean}}\n\t\t\t}\n\t\t}\n\t}\n}"},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions"]},"description":"**This endpoint is deprecated in Postman v10 and higher.**\n\nCreates a new API version. Include the following request body properties in the `version` object:\n\n- `name` — Required. A **string** that contains the API version's name.\n- `source` — An **object** that contains the following properties:\n    - `id` — A **string** that contains an API version's ID to copy to the created API version.\n    - `schema` — A **boolean** value. If true, copy the API definition to the new API version.\n    - `relations` — An **object** that contains the relation types to copy to the new API version. Each property is a **boolean** value that, if true, copies to the new API version. If you do **not** include any the following properties, the system does **not** copy them over (defaults to the `false` value):\n        - `monitor`\n        - `mock`\n        - `documentation`\n        - `test`\n        - `environment`"},"response":[{"id":"4610b2c3-9aac-41c6-b822-c0e998ecb72d","name":"Successful Response","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"version\": {\n        \"name\": \"v1\",\n        \"source\": {\n            \"id\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n            \"schema\": true,\n            \"relations\": {\n                \"documentation\": true,\n                \"environment\": true,\n                \"mock\": true,\n                \"monitor\": true\n            }\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"version\": {\n        \"id\": \"8421a1f3-3262-4d47-a597-7005bf4c1564\",\n        \"name\": \"v1\",\n        \"api\": \"387c2863-6ee3-4a56-8210-225f774edade\"\n    }\n}"},{"id":"e7566f0c-401d-412c-918c-b542b8deb436","name":"Bad Request","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"version\": {\n        \"name\": \"v1\",\n        \"source\": {\n            \"id\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n            \"schema\": true,\n            \"relations\": {\n                \"documentation\": true,\n                \"environment\": true,\n                \"mock\": true,\n                \"monitor\": true\n            }\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"},{"id":"83c39ca3-d816-4e11-a9fd-338f718fe86b","name":"Rate Limit Exceeded","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"version\": {\n        \"name\": \"v1\",\n        \"source\": {\n            \"id\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n            \"schema\": true,\n            \"relations\": {\n                \"documentation\": true,\n                \"environment\": true,\n                \"mock\": true,\n                \"monitor\": true\n            }\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Get an API version","id":"582be4d5-3456-483f-8219-ca30ea87a47b","request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}"]},"description":"Gets information about an API version.\n\n**In Postman v9 and earlier:**\n\nWhen you create an API, the system creates a single, default API version. You can use this version’s ID with any endpoints that require an API version ID."},"response":[{"id":"29fff776-7f28-45ec-9449-0f09288a55f1","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"},"type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"version\": {\n        \"id\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n        \"name\": \"Draft\",\n        \"summary\": null,\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"stage\": \"Planning\",\n        \"visibility\": \"public\",\n        \"api\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n        \"createdAt\": \"2023-02-14T14:26:05.000Z\",\n        \"updatedAt\": \"2023-02-14T14:26:05.000Z\",\n        \"repositoryIntegration\": null,\n        \"schema\": [\n            \"16bb367e-fafb-4ef3-933b-ee3d971866fb\"\n        ]\n    }\n}"},{"id":"7c6b29b2-66e4-496e-884c-e69e0df33650","name":"Bad Request","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"},{"id":"e7651b72-897a-4f20-9f46-def9af0c9010","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Update an API version","id":"32b43666-766c-47b0-98dd-cb55baa09e17","request":{"method":"PUT","header":[{"name":"Content-Type","key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n\t\"version\": {\n\t\t\"name\": \"{{apiVersionName}}\"\n\t}\n}"},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}"]},"description":"**This endpoint is deprecated in Postman v10 and higher.**\n\nUpdates an API version. Include the following request body properties in the `version` object:\n\n- `name` — A **string** that contains the API version's name."},"response":[{"id":"cbbaa0eb-880e-41bb-8d7a-24733ec4a2c7","name":"Successful Response","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"version\": {\n        \"name\": \"v1.0\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"version\": {\n        \"createdAt\": \"2022-08-02T13:28:05.000Z\",\n        \"updatedAt\": \"2022-08-02T13:35:32.000Z\",\n        \"id\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n        \"name\": \"v1.0\",\n        \"summary\": null,\n        \"stage\": \"Planning\",\n        \"visibility\": \"public\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"api\": \"387c2863-6ee3-4a56-8210-225f774edade\"\n    }\n}"},{"id":"651c9368-8c13-4f9a-bc1f-eaa788cb25bc","name":"Bad Request","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"version\": {\n        \"name\": \"v1.0\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"},{"id":"5f2efc16-e6b8-4119-bfde-fe47784f0212","name":"Rate Limit Exceeded","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"version\": {\n        \"name\": \"v1.0\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Delete an API version","id":"251cd06a-0968-4909-a724-d65d43ddb1fb","request":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}"]},"description":"**This endpoint is deprecated in Postman v10 and higher.**\n\nDeletes an API version."},"response":[{"id":"6a05b544-c781-464d-9420-3ab430bb0813","name":"Successful Response","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"version\": {\n        \"id\": \"a9879d02-74bf-425a-bbec-6d27aa135507\"\n    }\n}"},{"id":"693b9bab-82df-4a74-a50d-91d4fdc6262a","name":"Bad Request","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API version you are looking for\"\n    }\n}"},{"id":"28f0a788-834c-4cc1-a4ff-93696d9bc475","name":"Rate Limit Exceeded","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]}],"id":"6c70927d-34e1-4e12-b428-124090d47aa6","description":"The API version endpoints let you manage your [API's versions](https://learning.postman.com/docs/designing-and-developing-your-api/versioning-an-api/versioning-an-api-overview/).\n\n### Important\n\n**API versions are deprecated as of Postman v10 and higher.**\n\nIn v9 and earlier, when you create an API, the system creates a single, default API version. You can use this version’s ID with any endpoints that require an API version ID.\n\nIn Postman v10, published versions are static representations of your API that consumers can reference (like releases in Postman v9). If you need to work on more than one major iteration of your API in Postman v10, create separate APIs.","event":[{"listen":"prerequest","script":{"type":"text/javascript","exec":[""]}},{"listen":"test","script":{"type":"text/javascript","exec":[""]}}]},{"name":"Relations","item":[{"name":"Get unclassified relations","id":"28d3ed98-dfbc-499b-8258-517c7c8122f8","request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/unclassified","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}","unclassified"]},"description":"**This endpoint is for Postman v10 and higher.**\n\nGets all of an API version's unclassified relations.\n\nUnclassified relations are used for documentation and testing. This is the default relation type."},"response":[{"id":"616dbe16-ed01-49a5-91fc-1bd7be8ef1be","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/unclassified","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","unclassified"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"unclassified\": [\n        {\n            \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n            \"name\": \"Test\",\n            \"updatedAt\": \"2023-01-19T14:50:05.000Z\",\n            \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\"\n        }\n    ]\n}"},{"id":"6c9a0d32-16dd-416f-b8fa-8cd9091e9457","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/unclassified","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","unclassified"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Get monitor relations","event":[{"listen":"test","script":{"type":"text/javascript","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});"]}}],"id":"39d5d094-d965-4de0-bbd7-a0acdf8c78bb","request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/monitor","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}","monitor"]},"description":"**This endpoint is deprecated in Postman v10 and higher.**\n\nGets an API version's monitor relations."},"response":[{"id":"957b456a-ccaf-4f7d-986f-c4b05e03e7f4","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/monitor","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","monitor"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"monitor\": [\n        {\n            \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n            \"name\": \"Test Monitor\",\n            \"updatedAt\": \"2022-07-10T05:00:25.066Z\",\n            \"monitorId\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n        }\n    ]\n}"},{"id":"1e026c43-6b46-4c37-a300-b491ba9432a3","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/monitor","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","monitor"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Get  documentation relations","event":[{"listen":"test","script":{"type":"text/javascript","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});"]}}],"id":"9d0ae9c8-1a4b-4c52-9754-efd779816b3b","request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/documentation","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}","documentation"]},"description":"**This endpoint is deprecated in Postman v10 and higher.**\n\nGets an API version's documentation relations."},"response":[{"id":"350db7dc-d1a2-4aca-9100-4b3fde62b13d","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/documentation","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","documentation"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"documentation\": [\n        {\n            \"id\": \"b9bccf0f-e06a-433d-b556-a3cd158f0270\",\n            \"name\": \"Test Collection\",\n            \"createdAt\": \"2022-07-08T20:29:35.000Z\",\n            \"updatedAt\": \"2022-07-08T20:31:06.000Z\"\n        }\n    ]\n}"},{"id":"af0000a9-cb1f-443f-a56d-6d81a00d182d","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/documentation","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","documentation"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Get integration test relations","event":[{"listen":"test","script":{"type":"text/javascript","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});"]}}],"id":"d8d0f8f0-01cc-42b0-9c0e-ecf0e08d4ea0","request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/integrationtest","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}","integrationtest"]},"description":"**This endpoint is deprecated.**"},"response":[{"id":"c2075840-5938-4a65-bcf5-c36a9acfbde3","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations/integrationtest","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","relations","integrationtest"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"integrationtest\": [\n        {\n            \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n            \"name\": \"C test\",\n            \"updatedAt\": \"2019-08-29T10:18:11.000Z\",\n            \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\"\n        },\n        {\n            \"id\": \"521b0486-ab91-4d3a-9189-43c9380a0533\",\n            \"name\": \"C1\",\n            \"updatedAt\": \"2019-08-29T11:40:39.000Z\",\n            \"collectionId\": \"7332157-a8bcd143-2b01-4b12-8c14-c7d05be77725\"\n        }\n    ]\n}"},{"id":"9af998bb-2863-4cd2-bd24-a684cc8d48af","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations/integrationtest","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","relations","integrationtest"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Get test suite relations","event":[{"listen":"test","script":{"type":"text/javascript","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});"]}}],"id":"ac762ac6-d176-43b8-a2d3-3bf53880c76a","request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/testsuite","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}","testsuite"]},"description":"**This endpoint is deprecated.**"},"response":[{"id":"a65eac74-0aee-4887-a48f-77ff0bf83c33","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations/testsuite","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","relations","testsuite"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"testsuite\": [\n        {\n            \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n            \"name\": \"C test\",\n            \"updatedAt\": \"2019-08-29T10:18:11.000Z\",\n            \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\"\n        },\n        {\n            \"id\": \"521b0486-ab91-4d3a-9189-43c9380a0533\",\n            \"name\": \"C1\",\n            \"updatedAt\": \"2019-08-29T11:40:39.000Z\",\n            \"collectionId\": \"7332157-a8bcd143-2b01-4b12-8c14-c7d05be77725\"\n        }\n    ]\n}"},{"id":"fabb4cd5-5323-48e2-9522-13b7d0666bd0","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations/testsuite","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","relations","testsuite"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Get all linked relations","id":"0ea98a26-1b19-4f5d-8df7-6d97739b9574","request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/relations","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}","relations"]},"description":"Gets all of an API version's relations.\n\n**Note:**\n\nIn Postman v10 and higher, this endpoint returns the following:\n\n- The `unclassified` relation is for documentation and testing. This is the default relation type.\n- The `apiDefinition` relation is the relation used for API definitions."},"response":[{"id":"112c2955-9a63-40f1-ab09-6cb629039e30","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","relations"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"},"type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"relations\": {\n        \"apiDefintion\": {\n            \"16bb367e-fafb-4ef3-933b-ee3d971866fb\": {\n                \"id\": \"16bb367e-fafb-4ef3-933b-ee3d971866fb\"\n            }\n        },\n        \"unclassified\": {\n            \"b9bccf0f-e06a-433d-b556-a3cd158f0270\": {\n                \"id\": \"b9bccf0f-e06a-433d-b556-a3cd158f0270\",\n                \"name\": \"Test Collection\",\n                \"createdAt\": \"2023-01-30T17:41:50.000Z\",\n                \"updatedAt\": \"2023-01-19T14:50:05.000Z\"\n            }\n        },\n        \"schema\": {\n            \"16bb367e-fafb-4ef3-933b-ee3d971866fb\": {\n                \"id\": \"16bb367e-fafb-4ef3-933b-ee3d971866fb\"\n            }\n        }\n    }\n}"},{"id":"6b182889-f0ee-4fdb-9e8f-d4cf5a731f96","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","relations"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Get all test relations","event":[{"listen":"test","script":{"id":"15a6e978-cffa-4e86-ade8-1b675c80065a","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"id":"03d0203f-398a-42e4-916c-8b5c9e0a3741","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/test","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}","test"]},"description":"**This endpoint is deprecated in Postman v10 and higher.**\n\nGets all of an API version's test relations."},"response":[{"id":"f337eba5-38f0-4c3f-9452-24ea014476df","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/test","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","test"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"test\": [\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"updatedAt\": \"2022-07-08T18:32:23.000Z\",\n            \"collectionId\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    ]\n}"},{"id":"e5b4de46-99a2-4ce2-9785-a6e0075c2877","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/test","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","test"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Sync API relations with definition","id":"c6c32516-f641-4379-a794-302f0fbfb777","request":{"method":"PUT","header":[],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/:relationType/:entityId/syncWithSchema","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}",":relationType",":entityId","syncWithSchema"],"variable":[{"id":"2e881b34-f85e-4f58-8b51-dc83c032b20c","key":"relationType","value":"unclassified","description":"The `unclassified` relation type. This relation is used for documentation and testing.\n\n**Note:**\n\nIn Postman v10 and earlier, this value is one of:\n* `documentation`\n* `test`\n* `mock`\n* `monitor`"},{"id":"b105a66a-6e4a-4b4f-9f0e-3404bd9fec25","key":"entityId","value":"{{entityId}}","description":"The collection's UID value.\n\n**Note:**\n\nIn Postman v10 and earlier, the entity's ID value is one of the following, based on its relation type:\n* `documentation` and `test` — The collection UID value.\n* `environment` — The environment UID value.\n* `mock` — The mock ID value.\n* `monitor` — The monitor ID value."}]},"description":"Syncs an API version's relation with the API's definition."},"response":[{"id":"25ec1314-f8a6-47ac-bfe2-5d194d042cae","name":"Successful Response","originalRequest":{"method":"PUT","header":[],"url":{"raw":"https://api.getpostman.com/apis/4ebb45f8-7bb3-4a63-9c42-0b1602818293/versions/5e154147-b571-4ffe-a6ac-df2ab3b6e5ba/:relationType/:entityId/syncWithSchema","protocol":"https","host":["api","getpostman","com"],"path":["apis","4ebb45f8-7bb3-4a63-9c42-0b1602818293","versions","5e154147-b571-4ffe-a6ac-df2ab3b6e5ba",":relationType",":entityId","syncWithSchema"],"variable":[{"key":"relationType","value":"unclassified"},{"key":"entityId","value":"12345678-b4abc083-3ee2-4fc2-8959-29a7653a1c91"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"success\": true\n}"},{"id":"0330130d-ba32-46a6-8493-5f85ed8eaf1a","name":"Bad Request","originalRequest":{"method":"PUT","header":[],"url":{"raw":"https://api.getpostman.com/apis/4ebb45f8-7bb3-4a63-9c42-0b1602818293/versions/5e154147-b571-4ffe-a6ac-df2ab3b6e5ba/:relationType/:entityId/syncWithSchema","protocol":"https","host":["api","getpostman","com"],"path":["apis","4ebb45f8-7bb3-4a63-9c42-0b1602818293","versions","5e154147-b571-4ffe-a6ac-df2ab3b6e5ba",":relationType",":entityId","syncWithSchema"],"variable":[{"key":"relationType","value":"unclassified"},{"key":"entityId","value":"12345678-b4abc083-3ee2-4fc2-8959-29a7653a1c91"}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API version you are looking for\"\n    }\n}"},{"id":"59a0efd7-ffb0-4aea-8b7b-e9c020aa1f53","name":"Rate Limit Exceeded","originalRequest":{"method":"PUT","header":[],"url":{"raw":"https://api.getpostman.com/apis/4ebb45f8-7bb3-4a63-9c42-0b1602818293/versions/5e154147-b571-4ffe-a6ac-df2ab3b6e5ba/:relationType/:entityId/syncWithSchema","protocol":"https","host":["api","getpostman","com"],"path":["apis","4ebb45f8-7bb3-4a63-9c42-0b1602818293","versions","5e154147-b571-4ffe-a6ac-df2ab3b6e5ba",":relationType",":entityId","syncWithSchema"],"variable":[{"key":"relationType","value":"unclassified"},{"key":"entityId","value":"12345678-b4abc083-3ee2-4fc2-8959-29a7653a1c91"}]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Get environment relations","event":[{"listen":"test","script":{"type":"text/javascript","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});"]}}],"id":"7fdc67ef-7755-4e3f-bb29-d0be8c2f80ab","request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/environment","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}","environment"]},"description":"**This endpoint is deprecated in Postman v10 and higher.**\n\nGets an API version's environment relations."},"response":[{"id":"33a630e5-cf43-49c9-804d-a9f3de916891","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/environment","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","environment"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"environment\": [\n        {\n            \"id\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n            \"name\": \"Test Environment\",\n            \"createdAt\": \"2022-07-08T20:32:48.000Z\",\n            \"updatedAt\": \"2022-07-08T20:31:30.000Z\"\n        }\n    ]\n}"},{"id":"ba38b742-77e7-47cc-8915-c093f6fcd3e1","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/environment","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","environment"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Get contract test relations","event":[{"listen":"test","script":{"type":"text/javascript","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});"]}}],"id":"f1fe5cd9-ce29-4050-96f3-80adadbe5c62","request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/contracttest","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}","contracttest"]},"description":"**This endpoint is deprecated.**"},"response":[{"id":"c2730bff-db06-4587-96c9-392b0de61c6e","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations/contracttest","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","relations","contracttest"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"contracttest\": [\n        {\n            \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n            \"name\": \"C test\",\n            \"updatedAt\": \"2019-08-29T10:18:11.000Z\",\n            \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\"\n        },\n        {\n            \"id\": \"521b0486-ab91-4d3a-9189-43c9380a0533\",\n            \"name\": \"C1\",\n            \"updatedAt\": \"2019-08-29T11:40:39.000Z\",\n            \"collectionId\": \"7332157-a8bcd143-2b01-4b12-8c14-c7d05be77725\"\n        }\n    ]\n}"},{"id":"627493e7-1adf-44b3-b38f-0868b216f4ac","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations/contracttest","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","relations","contracttest"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Create relations","id":"57896024-5410-487b-be3b-1ae6e7d3bb6e","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"{{relationType}}\": [\n        \"{{entityId}}\"\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/relations","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}","relations"]},"description":"Creates a new relation for an API version. Include the following in the request body:\n\n- `relationType` — An **array** that contains entity relations. The key value for this array must be the `unclassified` value.\n    \n\nYou must include the following properties in the `relationType` array:\n\n- `entityId` — The collection's UID value.\n    \n\n**Note:**\n\nThe following is **deprecated** in Postman API v10 and higher:\n\n| **`relationType`** | **`entityId`** |\n| --- | --- |\n| `documentation` and `test` | A collection UID value. |\n| `environment` | An environment UID value. |\n| `mock` | A mock ID value. |\n| `monitor` | A monitor ID value. |\n\nThe endpoint accepts multiple `relationType` arrays in a single call. For an example, see the example response documentation.\n\nThe `documentation` and `test` values returned in the response are the relation ID values, **not** the collection ID values."},"response":[{"id":"9bc019ad-f305-4503-83af-7bdce374353f","name":"Successful Response","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"unclassified\": [\n        \"12345678-b4abc083-3ee2-4fc2-8959-29a7653a1c91\"\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","relations"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"unclassified\": [\n        \"2e006451-e819-443f-97bc-d1635e51007f\"\n    ]\n}"},{"id":"05e9e3a4-e4f5-482c-bb56-c86ffbb66f32","name":"Bad Request","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","relations"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"invalidParamsError\",\n        \"message\": \"The specified parameter is in an invalid format\"\n    }\n}"},{"id":"68e5557c-3350-47ec-9f27-06d88186a227","name":"Rate Limit Exceeded","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"unclassified\": [\n        \"12345678-b4abc083-3ee2-4fc2-8959-29a7653a1c91\"\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","relations"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]}],"id":"95b25a68-8b4f-4997-ab66-123bc3d231d1","description":"The Relations endpoints let you manage your API's relations. Relations are an API's connections to items such as documentation, tests, and API definitions.\n\n### Important\n\nIn Postman v10 and higher, we **only** support the following relation types:\n\n- `unclassified` — The relation for documentation and testing.\n- `apiDefinition` — The relation for API definitions."},{"name":"Schema","item":[{"name":"Get a schema","id":"3778e7a3-807b-4c14-86e1-d1ec3c64df96","request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/schemas/{{schemaId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}","schemas","{{schemaId}}"]},"description":"**This endpoint is deprecated in Postman v10 and higher.**\n\nGets information about an API's definition."},"response":[{"id":"6c642064-0ec5-47f6-9abe-2a0e619e0184","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas/16bb367e-fafb-4ef3-933b-ee3d971866fb","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","schemas","16bb367e-fafb-4ef3-933b-ee3d971866fb"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"schema\": {\n        \"id\": \"16bb367e-fafb-4ef3-933b-ee3d971866fb\",\n        \"type\": \"openapi3\",\n        \"language\": \"json\",\n        \"createdAt\": \"2022-07-01T20:12:31.000Z\",\n        \"updatedAt\": \"2022-07-01T20:13:04.000Z\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"schema\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Test API\\\"\\n  },\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://locahost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"List all users\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"required\\\": true,\\n            \\\"description\\\": \\\"The user's ID.\\\",\\n            \\\"example\\\": 1234,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Information about the user.\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses.\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\",\n        \"apiVersion\": \"a9879d02-74bf-425a-bbec-6d27aa135507\"\n    }\n}"},{"id":"7fef5654-6695-4bfe-b17c-5043231b83d4","name":"Bad Request","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas/16bb367e-fafb-4ef3-933b-ee3d971866fb","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","schemas","16bb367e-fafb-4ef3-933b-ee3d971866fb"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"},{"id":"533df211-321c-4db0-89cb-3551c12dec67","name":"Definition Mismatch","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas/16bb367e-fafb-4ef3-933b-ee3d971866fb","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","schemas","16bb367e-fafb-4ef3-933b-ee3d971866fb"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"schemaApiVersionMismatchError\",\n        \"message\": \"The Schema ID provided does not belong to the API Version ID provided.\"\n    }\n}"},{"id":"86007ec4-ea52-49fe-a4e4-ba062c1ca133","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas/16bb367e-fafb-4ef3-933b-ee3d971866fb","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","schemas","16bb367e-fafb-4ef3-933b-ee3d971866fb"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Create a schema","event":[{"listen":"prerequest","script":{"id":"0212c8c2-b79a-4704-a5d8-ac332b0865f2","exec":[""],"type":"text/javascript"}}],"id":"19b90046-2e41-438d-8165-40c1a015d194","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"name":"Content-Type","key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n\t\"schema\": {\n\t\t\"language\": \"{{apiDefinitionLanguage}}\",\n\t\t\"schema\": \"{{apiDefinition}}\",\n\t\t\"type\": \"{{apiDefinitionType}}\"\n\t}\n}"},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/schemas","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}","schemas"]},"description":"**This endpoint is deprecated in Postman v10 and higher.**\n\nCreates an API definition. The request body must contain a `schema` object with the following properties:\n\n- `type` — A **string** value that contains the API definition's type. One of:\n    - `openapi3_1`\n    - `openapi3`\n    - `openapi2`\n    - `openapi1`\n    - `raml`\n    - `raml1`\n    - `wsdl1`\n    - `wsdl2`\n    - `graphql`\n    - `proto2`\n    - `graphql`\n    - `proto3`\n- `language` — A **string** value that contains the API definition's language. One of:\n    - OpenAPI and RAML — `json` or `yaml`\n    - GraphQL — `graphql`\n    - WSDL — `xml`\n    - Protobuf — `proto`\n- `schema` — A **string** value that contains the API definition's contents."},"response":[{"id":"fc94e899-feb1-466c-8023-2da14f31d17f","name":"Successful Response","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n\t\"schema\": {\n\t\t\"language\": \"json\",\n\t\t\"schema\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Test API\\\"\\n  },\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://locahost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"List all users\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"required\\\": true,\\n            \\\"description\\\": \\\"The user's ID.\\\",\\n            \\\"example\\\": 1234,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Information about the user.\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses.\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\",\n\t\t\"type\": \"openapi3\"\n\t}\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","schemas"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"schema\": {\n        \"id\": \"e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822\",\n        \"language\": \"json\",\n        \"apiVersion\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n        \"type\": \"openapi3\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"createdAt\": \"2021-05-22T13:17:07.000Z\",\n        \"updatedAt\": \"2021-05-22T13:17:07.000Z\"\n    }\n}"},{"id":"0bebf2dd-63c8-4779-92df-7a12ecd29af8","name":"Bad Request","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n\t\"schema\": {\n\t\t\"language\": \"json\",\n\t\t\"schema\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Test API\\\"\\n  },\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://locahost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"List all users\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"required\\\": true,\\n            \\\"description\\\": \\\"The user's ID.\\\",\\n            \\\"example\\\": 1234,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Information about the user.\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses.\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\",\n\t\t\"type\": \"openapi3\"\n\t}\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","schemas"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceAlreadyExists\",\n        \"message\": \"A schema already exists for this API Version\"\n    }\n}"},{"id":"922fe8dd-c9a6-452d-9abb-57a7683a2206","name":"Rate Limit Exceeded","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n\t\"schema\": {\n\t\t\"language\": \"json\",\n\t\t\"schema\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Test API\\\"\\n  },\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://locahost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"List all users\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"required\\\": true,\\n            \\\"description\\\": \\\"The user's ID.\\\",\\n            \\\"example\\\": 1234,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Information about the user.\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses.\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\",\n\t\t\"type\": \"openapi3\"\n\t}\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","schemas"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Create a collection from a schema","id":"d1036a23-09d1-4f2b-bbd8-07e0cb81099e","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n\t\"name\": \"{{collectionName}}\",\n\t\"relations\": [\n\t\t{\n\t\t\t\"type\": \"{{relationType}}\"\n\t\t}\t\n\t],\n    \"options\": {\n        \"{{optionName}}\": \"{{optionValue}}\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/schemas/{{schemaId}}/collections","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}","schemas","{{schemaId}}","collections"],"query":[{"key":"workspaceId","value":"{{workspaceId}}","description":"Optional. The workspace ID in which to created the collection.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.","disabled":true}]},"description":"**This endpoint is deprecated in Postman v10 and higher.**\n\nCreates a collection and links it to an API as one or multiple relations.\n\nInclude the following properties in the request body:\n\n- `name` — A **string** that contains the name of the collection.\n    \n\nYou can also include the following additional properties in the request body:\n\n- `relations` — An **array** that contains a list of relations to create:\n    - `contracttest` — **Deprecated.**\n    - `integrationtest` — **Deprecated.**\n    - `testsuite` — **Deprecated.**\n    - `documentation`\n- `options` — An **object** that contains advanced creation options and their values. You can find a complete list of properties and their values in Postman's [OpenAPI 3.0 to Postman Collection v2.1.0 Converter OPTIONS documentation](https://github.com/postmanlabs/openapi-to-postman/blob/develop/OPTIONS.md). **These properties are case-sensitive.**"},"response":[{"id":"b2a0a491-ae44-4e2b-b9ca-ff6de1f4bf0c","name":"Successful Response","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n\t\"name\": \"Test Collection\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/be50acd7-414e-4d65-9443-f919b847e29a/versions/56d5f9ac-69a7-4255-8343-cde8ea25ef8b/schemas/f087f7b9-018f-447f-ba64-74cb981957ce/collections","protocol":"https","host":["api","getpostman","com"],"path":["apis","be50acd7-414e-4d65-9443-f919b847e29a","versions","56d5f9ac-69a7-4255-8343-cde8ea25ef8b","schemas","f087f7b9-018f-447f-ba64-74cb981957ce","collections"],"query":[{"key":"workspace","value":"c90a3482-f80d-43d6-9dfb-0830f5e43605","description":"Optional. The workspace ID in which to created the collection.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"uid\": \"12345678ß-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"},{"id":"6a18a813-5877-4e60-8444-50f0a0b56989","name":"Create a Collection with a Documentation Relation","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n\t\"name\": \"Test Collection\",\n\t\"relations\": [\n\t\t{\n\t\t\t\"type\": \"documentation\"\n\t\t}\t\n\t]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/be50acd7-414e-4d65-9443-f919b847e29a/versions/56d5f9ac-69a7-4255-8343-cde8ea25ef8b/schemas/f087f7b9-018f-447f-ba64-74cb981957ce/collections","protocol":"https","host":["api","getpostman","com"],"path":["apis","be50acd7-414e-4d65-9443-f919b847e29a","versions","56d5f9ac-69a7-4255-8343-cde8ea25ef8b","schemas","f087f7b9-018f-447f-ba64-74cb981957ce","collections"],"query":[{"key":"workspace","value":"c90a3482-f80d-43d6-9dfb-0830f5e43605","description":"Optional. The workspace ID in which to created the collection.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json"}],"cookie":[],"responseTime":null,"body":"{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    },\n    \"relations\": [\n        {\n            \"type\": \"documentation\",\n            \"id\": \"d86b6c97-fdf9-4c37-825a-49b0223913c7\"\n        }\n    ]\n}"},{"id":"8001a4b8-6253-40b1-8c1d-71b7f817b7f6","name":"Create a Collection with Advanced Options","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n\t\"name\": \"Test Collection\",\n\t\"relations\": [\n\t\t{\n\t\t\t\"type\": \"documentation\"\n\t\t}\t\n\t],\n    \"options\": {\n        \"requestParametersResolution\": \"Example\",\n        \"requestNameSource\": \"Fallback\",\n        \"validateMetadata\": true\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/be50acd7-414e-4d65-9443-f919b847e29a/versions/56d5f9ac-69a7-4255-8343-cde8ea25ef8b/schemas/f087f7b9-018f-447f-ba64-74cb981957ce/collections","protocol":"https","host":["api","getpostman","com"],"path":["apis","be50acd7-414e-4d65-9443-f919b847e29a","versions","56d5f9ac-69a7-4255-8343-cde8ea25ef8b","schemas","f087f7b9-018f-447f-ba64-74cb981957ce","collections"],"query":[{"key":"workspace","value":"c90a3482-f80d-43d6-9dfb-0830f5e43605","description":"Optional. The workspace ID in which to created the collection.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json"}],"cookie":[],"responseTime":null,"body":"{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    },\n    \"relations\": [\n        {\n            \"type\": \"documentation\",\n            \"id\": \"d86b6c97-fdf9-4c37-825a-49b0223913c7\"\n        }\n    ]\n}"},{"id":"06f40d01-2359-4a3c-ac54-f7b06411d72c","name":"Create a Collection from a Definition in a Workspace","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n\t\"name\": \"Test Collection\",\n\t\"relations\": [\n\t\t{\n\t\t\t\"type\": \"documentation\"\n\t\t}\t\n\t]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/be50acd7-414e-4d65-9443-f919b847e29a/versions/56d5f9ac-69a7-4255-8343-cde8ea25ef8b/schemas/f087f7b9-018f-447f-ba64-74cb981957ce/collections?workspace=c90a3482-f80d-43d6-9dfb-0830f5e43605","protocol":"https","host":["api","getpostman","com"],"path":["apis","be50acd7-414e-4d65-9443-f919b847e29a","versions","56d5f9ac-69a7-4255-8343-cde8ea25ef8b","schemas","f087f7b9-018f-447f-ba64-74cb981957ce","collections"],"query":[{"key":"workspace","value":"c90a3482-f80d-43d6-9dfb-0830f5e43605","description":"Optional. The workspace ID in which to created the collection.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace."}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json"}],"cookie":[],"responseTime":null,"body":"{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    },\n    \"relations\": [\n        {\n            \"type\": \"documentation\",\n            \"id\": \"d86b6c97-fdf9-4c37-825a-49b0223913c7\"\n        }\n    ]\n}"},{"id":"593164b8-09cf-4c44-85ce-c18d58ae0aa0","name":"Invalid Parameter","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n\t\"name\": \"Test Collection\",\n\t\"relations\": [\n\t\t{\n\t\t\t\"type\": \"mocks\"\n\t\t}\t\n\t]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/be50acd7-414e-4d65-9443-f919b847e29a/versions/56d5f9ac-69a7-4255-8343-cde8ea25ef8b/schemas/f087f7b9-018f-447f-ba64-74cb981957ce/collections","protocol":"https","host":["api","getpostman","com"],"path":["apis","be50acd7-414e-4d65-9443-f919b847e29a","versions","56d5f9ac-69a7-4255-8343-cde8ea25ef8b","schemas","f087f7b9-018f-447f-ba64-74cb981957ce","collections"],"query":[{"key":"workspace","value":"c90a3482-f80d-43d6-9dfb-0830f5e43605","description":"Optional. The workspace ID in which to created the collection.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.","disabled":true}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"invalidParamsError\",\n        \"message\": \"The specified parameter is in an invalid format\"\n    }\n}"},{"id":"66d418a1-9e37-452e-907b-787151084c19","name":"Rate Limit Exceeded","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n\t\"name\": \"Test Collection\",\n\t\"relations\": [\n\t\t{\n\t\t\t\"type\": \"mocks\"\n\t\t}\t\n\t]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/be50acd7-414e-4d65-9443-f919b847e29a/versions/56d5f9ac-69a7-4255-8343-cde8ea25ef8b/schemas/f087f7b9-018f-447f-ba64-74cb981957ce/collections","protocol":"https","host":["api","getpostman","com"],"path":["apis","be50acd7-414e-4d65-9443-f919b847e29a","versions","56d5f9ac-69a7-4255-8343-cde8ea25ef8b","schemas","f087f7b9-018f-447f-ba64-74cb981957ce","collections"],"query":[{"key":"workspace","value":"c90a3482-f80d-43d6-9dfb-0830f5e43605","description":"Optional. The workspace ID in which to created the collection.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.","disabled":true}]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Update a schema","event":[{"listen":"prerequest","script":{"id":"e09e6aa2-d1e8-423b-8401-77a918f01208","exec":[""],"type":"text/javascript"}}],"id":"71534e1b-791e-4e25-8e26-72784a9aeef7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"name":"Content-Type","key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n\t\"schema\": {\n\t\t\"language\": \"{{apiDefinitionLanguage}}\",\n        \"schema\": \"{{apiDefinition}}\",\n\t\t\"type\": \"{{apiDefinitionType}}\"\n\t}\n}"},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/schemas/{{schemaId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}","schemas","{{schemaId}}"]},"description":"**This endpoint is deprecated in Postman v10 and higher.**\n\nUpdates an API definition. The request body must contain a `schema` object with the following properties:\n\n- `type` — A **string** value that contains the API definition's type. One of:\n    - `openapi3_1`\n    - `openapi3`\n    - `openapi2`\n    - `openapi1`\n    - `raml`\n    - `raml1`\n    - `wsdl1`\n    - `wsdl2`\n    - `graphql`\n    - `proto2`\n    - `graphql`\n    - `proto3`\n- `language` — A **string** value that contains the API definition's language. One of:\n    - OpenAPI and RAML — `json` or `yaml`\n    - GraphQL — `graphql`\n    - WSDL — `xml`\n    - Protobuf — `proto`\n- `schema` — Optional. A **string** value that contains the API definition's contents."},"response":[{"id":"c0a82e00-b82d-40cd-8040-6521b993e864","name":"Successful Response","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n\t\"schema\": {\n\t\t\"language\": \"yaml\",\n\t\t\"schema\": \"openapi: 3.0.0\\ninfo:\\n  version: 1.0.0\\n  title: Test API\\nservers:\\n  - url: http://localhost:3000\\npaths:\\n  /user:\\n    get:\\n      summary: List all users\\n      operationId: listUser\\n      tags:\\n        - user\\n      parameters:\\n        - name: id\\n          in: query\\n          required: true\\n          description: The user's ID.\\n          example: 1234\\n          schema:\\n            type: integer\\n            format: int32\\n      responses:\\n        '200':\\n          description: Information about the user.\\n          headers:\\n            x-next:\\n              description: A link to the next page of responses.\\n              schema:\\n                type: string\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/User' \\ncomponents:\\n  schemas:\\n   User:\\n      type: object\\n      required:\\n        - id\\n        - name\\n      properties:\\n        id:\\n          type: integer\\n          format: int32\\n   Error:\\n      type: object\\n      required:\\n        - code\\n        - message\\n      properties:\\n        code:\\n          type: integer\\n          format: int32\\n        message:\\n          type: string\\n\",\n\t\t\"type\": \"openapi3\"\n\t}\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas/16bb367e-fafb-4ef3-933b-ee3d971866fb","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","schemas","16bb367e-fafb-4ef3-933b-ee3d971866fb"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"schema\": {\n        \"id\": \"16bb367e-fafb-4ef3-933b-ee3d971866fb\",\n        \"language\": \"yaml\",\n        \"apiVersion\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n        \"type\": \"openapi3\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"createdAt\": \"2021-05-22T13:17:07.000Z\",\n        \"updatedAt\": \"2021-05-22T13:17:07.000Z\"\n    }\n}"},{"id":"deebb2f6-707e-4847-8764-d4aa8ab3d620","name":"Bad Request","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n\t\"schema\": {\n\t\t\"language\": \"yaml\",\n\t\t\"schema\": \"openapi: 3.0.0\\ninfo:\\n  version: 1.0.0\\n  title: Test API\\nservers:\\n  - url: http://localhost:3000\\npaths:\\n  /user:\\n    get:\\n      summary: List all users\\n      operationId: listUser\\n      tags:\\n        - user\\n      parameters:\\n        - name: id\\n          in: query\\n          required: true\\n          description: The user's ID.\\n          example: 1234\\n          schema:\\n            type: integer\\n            format: int32\\n      responses:\\n        '200':\\n          description: Information about the user.\\n          headers:\\n            x-next:\\n              description: A link to the next page of responses.\\n              schema:\\n                type: string\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/User' \\ncomponents:\\n  schemas:\\n   User:\\n      type: object\\n      required:\\n        - id\\n        - name\\n      properties:\\n        id:\\n          type: integer\\n          format: int32\\n   Error:\\n      type: object\\n      required:\\n        - code\\n        - message\\n      properties:\\n        code:\\n          type: integer\\n          format: int32\\n        message:\\n          type: string\\n\",\n\t\t\"type\": \"openapi3\"\n\t}\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas/16bb367e-fafb-4ef3-933b-ee3d971866fb","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","schemas","16bb367e-fafb-4ef3-933b-ee3d971866fb"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"},{"id":"9c5a7c4a-7d2e-42f3-965c-99a2795ec6af","name":"Rate Limit Exceeded","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n\t\"schema\": {\n\t\t\"language\": \"yaml\",\n\t\t\"schema\": \"openapi: 3.0.0\\ninfo:\\n  version: 1.0.0\\n  title: Test API\\nservers:\\n  - url: http://localhost:3000\\npaths:\\n  /user:\\n    get:\\n      summary: List all users\\n      operationId: listUser\\n      tags:\\n        - user\\n      parameters:\\n        - name: id\\n          in: query\\n          required: true\\n          description: The user's ID.\\n          example: 1234\\n          schema:\\n            type: integer\\n            format: int32\\n      responses:\\n        '200':\\n          description: Information about the user.\\n          headers:\\n            x-next:\\n              description: A link to the next page of responses.\\n              schema:\\n                type: string\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/User' \\ncomponents:\\n  schemas:\\n   User:\\n      type: object\\n      required:\\n        - id\\n        - name\\n      properties:\\n        id:\\n          type: integer\\n          format: int32\\n   Error:\\n      type: object\\n      required:\\n        - code\\n        - message\\n      properties:\\n        code:\\n          type: integer\\n          format: int32\\n        message:\\n          type: string\\n\",\n\t\t\"type\": \"openapi3\"\n\t}\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas/16bb367e-fafb-4ef3-933b-ee3d971866fb","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","schemas","16bb367e-fafb-4ef3-933b-ee3d971866fb"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]}],"id":"002e6905-856c-402e-8655-5d026eadaa49","description":"The Schema endpoints let you manage your API's definitions.\n\n### Important\n\n**The schemas concept is deprecated as of Postman v10 and higher.**\n\nIn Postman v10 and higher, “schemas” are now known as “API definitions”. You may see that API responses may return both the `schemas` and `apiDefinition` properties. Use the `apiDefinition` property."},{"name":"Release","item":[{"name":"Get an API release","id":"8a3b1198-971f-4d5d-b661-45a3e671f1b9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/releases/{{apiReleaseId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}","releases","{{apiReleaseId}}"],"variable":[{"id":"99e88a0c-47d8-487e-8905-081e7424ecf1","key":"apiId","value":"{{apiId}}"},{"id":"915195aa-c22f-48fc-b670-514ad84dc181","key":"apiVersionId","value":"{{apiVersionId}}"},{"id":"fae13226-889a-4b0c-9851-260de9b32cfa","key":"releaseId","value":"{{releaseId}}"}]},"description":"**This endpoint is deprecated in Postman v10 and higher.**\n\nGets information about an API version's release."},"response":[{"id":"7e440656-06cf-4492-9c20-9b8129e71f4f","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","releases","3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"release\": {\n        \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n        \"name\": \"Release 1.0\",\n        \"summary\": \"This is the first release.\",\n        \"description\": \"This is the first release of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\"\n    }\n}"},{"id":"53316d33-3dad-440f-9408-fba5ae14f9ac","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","releases","3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Get all API releases","id":"49d9e450-6358-4553-95f0-d107d81db1d3","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/releases","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}","releases"],"variable":[{"id":"389e750e-513e-4c8b-a5fd-bf51897aa0d4","key":"apiId","value":"{{apiId}}"},{"id":"4387841f-d440-4694-b0c6-5f9467a1bcea","key":"apiVersionId","value":"{{apiVersionId}}"}]},"description":"**This endpoint is deprecated in Postman v10 and higher.**\n\nGets information about all of an API version's releases."},"response":[{"id":"3c4f532e-e08c-4acd-a35c-096990fbd21d","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","releases"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"releases\": [\n        {\n            \"id\": \"07d940bf-40fc-4acd-a11e-be6769894af0\",\n            \"name\": \"Release 2.0\",\n            \"description\": \"This is the second release of the Test API.\",\n            \"visibility\": \"private\"\n        },\n        {\n            \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n            \"name\": \"Release 1.0\",\n            \"description\": \"This is the first release of the Test API. For more information, read the documentation.\",\n            \"visibility\": \"public\"\n        }\n    ]\n}"},{"id":"946200b6-5c0e-462b-8806-f454a056beb0","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","releases"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Create an API release","id":"823f2bbb-4402-44a8-9ea0-1c74ee0b59b8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"release\": {\n        \"name\": \"{{apiReleaseName}}\",\n        \"summary\": \"{{apiReleaseSummary}}\",\n        \"description\": \"{{apiReleaseDescription}}\",\n        \"visibility\": \"{{apiReleaseVisibility}}\",\n        \"gitTag\": \"{{apiReleaseGitTag}}\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/releases","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}","releases"]},"description":"**This endpoint is deprecated in Postman v10 and higher.**\n\nCreates a new API version release. Include the following properties in the `release` object:\n\n- `name` — A **string** value that contains the release name.\n- `visibility` — A **string** value that contains the release's visibility. One of:\n    - `private` — The release is private.\n    - `public` — The release is public.\n\nYou can include the following optional properties:\n\n- `summary` — A **string** value that contains the release's summary.\n- `description` — A **string** value that contains the release's description.\n- `gitTag` — A **string** value that contains a valid [Git tag](https://docs.github.com/en/rest/git/tags) ID. The tag must exist in the API's connected Git repository."},"response":[{"id":"36fce8b5-8c0b-44a8-a2ee-5bf1f6c6c14c","name":"Successful Response","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"release\": {\n        \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n        \"name\": \"Release 1.0\",\n        \"summary\": \"This is the first release.\",\n        \"description\": \"This is the first release of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\",\n        \"gitTag\": \"release\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","releases"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"release\": {\n        \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n        \"name\": \"Release 1.0\",\n        \"summary\": \"This is the first release.\",\n        \"description\": \"This is the first release of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\"\n    }\n}"},{"id":"985e7e5d-834e-4454-957e-fd07317836e7","name":"Bad Request","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"release\": {\n        \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n        \"name\": \"Release 1.0\",\n        \"summary\": \"This is the first release.\",\n        \"description\": \"This is the first release of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\",\n        \"gitTag\": \"release\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","releases"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"apiRepositoryNotFoundError\",\n        \"message\": \"This API version is not linked to a repository\"\n    }\n}"},{"id":"2ab0e7b4-02ad-49d2-b876-5a9a2387d134","name":"Rate Limit Exceeded","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"release\": {\n        \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n        \"name\": \"Release 1.0\",\n        \"summary\": \"This is the first release.\",\n        \"description\": \"This is the first release of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\",\n        \"gitTag\": \"release\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","releases"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Update an API release","id":"cc397e83-135c-4691-baa1-3f3244de68ab","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{\n    \"release\": {\n        \"name\": \"{{apiReleaseName}}\",\n        \"summary\": \"{{apiReleaseSummary}}\",\n        \"description\": \"{{apiReleaseDescription}}\",\n        \"visibility\": \"{{apiReleaseVisibility}}\",\n        \"gitTag\": \"{{apiReleaseGitTag}}\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/releases/{{apiReleaseId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}","releases","{{apiReleaseId}}"]},"description":"**This endpoint is deprecated in Postman v10 and higher.**\n\nUpdates an API version's release. Include at least one of the following properties in the `release` object:\n\n- `name` — A **string** value that contains the release name.\n- `visibility` — A **string** value that contains the release's visibility. One of:\n    - `private` — The release is private.\n    - `public` — The release is public.\n- `summary` — A **string** value that contains the release's summary.\n- `description` — A **string** value that contains the release's description.\n- `gitTag` — A **string** value that contains a valid [Git tag](https://docs.github.com/en/rest/git/tags) ID. The tag must exist in the API's connected Git repository."},"response":[{"id":"81a829c8-f46e-4f66-a46f-77e414e99e33","name":"Successful Response","originalRequest":{"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{\n    \"release\": {\n        \"name\": \"Release 1.5\",\n        \"summary\": \"This is the first public release update.\",\n        \"description\": \"This is the first release update of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\",\n        \"gitTag\": \"Test\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases/8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","releases","8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"release\": {\n        \"id\": \"8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2\",\n        \"name\": \"Release 1.5\",\n        \"summary\": \"This is the first public release update.\",\n        \"description\": \"This is the first release update of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\",\n        \"gitTag\": \"Test\"\n    }\n}"},{"id":"95a7b0ea-0a92-4198-a685-c24929afcb75","name":"Bad Request","originalRequest":{"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{\n    \"release\": {\n        \"name\": \"Release 1.5\",\n        \"summary\": \"This is the first public release update.\",\n        \"description\": \"This is the first release update of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\",\n        \"gitTag\": \"Test\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases/8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","releases","8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"release\": {\n        \"id\": \"8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2\",\n        \"name\": \"Release 1.5\",\n        \"summary\": \"This is the first public release update.\",\n        \"description\": \"This is the first release update of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\",\n        \"gitTag\": \"Test\"\n    }\n}"},{"id":"50f43e29-5e3d-4556-b267-e2bb06563181","name":"Rate Limit Exceeded","originalRequest":{"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{\n    \"release\": {\n        \"name\": \"Release 1.5\",\n        \"summary\": \"This is the first public release update.\",\n        \"description\": \"This is the first release update of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\",\n        \"gitTag\": \"Test\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases/8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","releases","8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Delete an API release","id":"011498c2-59ee-400c-a42e-21c44421bb9c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{postman-API-key}}","type":"string"},{"key":"key","value":"X-API-KEY","type":"string"}]},"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/releases/{{apiReleaseId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}","versions","{{apiVersionId}}","releases","{{apiReleaseId}}"]},"description":"**This endpoint is deprecated in Postman v10 and higher.**\n\nDeletes an API version's release."},"response":[{"id":"a5373c8b-361f-4ee3-9aa4-b388edd2040b","name":"Successful Response","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","releases","3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"release\": {\n        \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\"\n    }\n}"},{"id":"8fd72382-78cf-41fb-a293-9b759fee63ea","name":"Bad Request","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","releases","3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the release you are looking for\"\n    }\n}"},{"id":"26443bbc-981c-4b29-840f-db59ec3b3c5d","name":"Rate Limit Exceeded","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2","protocol":"https","host":["api","getpostman","com"],"path":["apis","387c2863-6ee3-4a56-8210-225f774edade","versions","a9879d02-74bf-425a-bbec-6d27aa135507","releases","3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]}],"id":"7eaebdbb-0672-401b-b984-60515fb3e359","description":"The API release endpoints let you manage your API's releases.\n\n### Important\n\n**API releases are deprecated as of Postman v10 and higher.**\n\nYou can no longer create releases for collections in Postman v10, but API producers can [publish versions of an API](https://learning.postman.com/docs/designing-and-developing-your-api/versioning-an-api/api-versions/)."},{"name":"Get all APIs","id":"65ae1b7f-431c-40b8-90ed-dc615eb129bf","request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis","protocol":"https","host":["api","getpostman","com"],"path":["apis"],"query":[{"key":"workspaceId","value":"{{workspaceId}}","description":"Optional. Return only APIs that are inside the given workspace.","disabled":true},{"key":"since","value":"{{since}}","description":"Optional. Return only APIs updated at and after this time, in ISO 8601 UTC format.","disabled":true},{"key":"until","value":"{{until}}","description":"Optional. Return only APIs updated at and before this time, in ISO 8601 UTC format.","disabled":true},{"key":"createdBy","value":"{{createdBy}}","description":"Optional. Return only APIs created by the given user ID.","disabled":true},{"key":"updatedBy","value":"{{updatedBy}}","description":"Optional. Return only APIs updated by the given user ID.","disabled":true},{"key":"isPublic","value":"{{isPublic}}","description":"Optional. If true, return only public APIs; if false, return only private APIs.","disabled":true},{"key":"name","value":"{{name}}","description":"Optional. Return only APIs whose name includes the given value. Matching is not case-sensitive.","disabled":true},{"key":"summary","value":"{{summary}}","description":"Optional. Return only APIs whose summary includes the given value. Matching is not case-sensitive.","disabled":true},{"key":"description","value":"{{description}}","description":"Optional. Return only APIs whose description includes the given value. Matching is not case-sensitive.","disabled":true},{"key":"sort","value":"{{sort}}","description":"Optional. Sort the results by the given value.\n\nIf you use this query parameter, you must also use the `direction` parameter.","disabled":true},{"key":"direction","value":"{{direction}}","description":"Optional. Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.","disabled":true}]},"description":"Gets information about all APIs."},"response":[{"id":"a6990b65-273e-491b-a947-3ad102e2cafa","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis","protocol":"https","host":["api","getpostman","com"],"path":["apis"],"query":[{"key":"workspace","value":"{{workspaceId}}","description":"Optional. Return only APIs that are inside the given workspace.","disabled":true},{"key":"since","value":"{{since}}","description":"Optional. Return only APIs updated at and after this time, in ISO 8601 UTC format.","disabled":true},{"key":"until","value":"{{until}}","description":"Optional. Return only APIs updated at and before this time, in ISO 8601 UTC format.","disabled":true},{"key":"createdBy","value":"{{createdBy}}","description":"Optional. Return only APIs created by the given user ID.","disabled":true},{"key":"updatedBy","value":"{{updatedBy}}","description":"Optional. Return only APIs updated by the given user ID.","disabled":true},{"key":"isPublic","value":"{{isPublic}}","description":"Optional. If true, return only public APIs; if false, return only private APIs.","disabled":true},{"key":"name","value":"{{name}}","description":"Optional. Return only APIs whose name includes the given value. Matching is not case-sensitive.","disabled":true},{"key":"summary","value":"{{summary}}","description":"Optional. Return only APIs whose summary includes the given value. Matching is not case-sensitive.","disabled":true},{"key":"description","value":"{{description}}","description":"Optional. Return only APIs whose description includes the given value. Matching is not case-sensitive.","disabled":true},{"key":"sort","value":"{{sort}}","description":"Optional. Sort the results by the given value.\n\nIf you use this query parameter, you must also use the `direction` parameter.","disabled":true},{"key":"direction","value":"{{direction}}","description":"Optional. Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Tue, 12 Jul 2022 16:39:09 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"120"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"x-frame-options","value":"SAMEORIGIN"},{"key":"Access-Control-Allow-Origin","value":"*"},{"key":"x-srv-trace","value":"v=1;t=915b2bd230311a7e"},{"key":"x-srv-span","value":"v=1;s=108d09101d76e02a"},{"key":"X-RateLimit-Limit","value":"400"},{"key":"X-RateLimit-Remaining","value":"399"},{"key":"X-RateLimit-Reset","value":"1657644009"},{"key":"ETag","value":"W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""},{"key":"Vary","value":"Accept-Encoding"}],"cookie":[],"responseTime":null,"body":"{\n    \"apis\": [\n        {\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n            \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n            \"name\": \"Test API\",\n            \"summary\": \"Test API.\",\n            \"description\": \"This is a test API.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\": \"12345678\",\n            \"isPublic\": true\n        },\n        {\n            \"createdAt\": \"2022-06-22T16:51:28.000Z\",\n            \"updatedAt\": \"2022-06-22T16:51:28.000Z\",\n            \"id\": \"69ce25ea-2914-426e-ae34-af558b6777e6\",\n            \"name\": \"Public API A\",\n            \"summary\": \"Public Test A.\",\n            \"description\": \"This is a public test API.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\": \"12345678\",\n            \"isPublic\": true\n        },\n        {\n            \"createdAt\": \"2022-06-30T16:51:28.000Z\",\n            \"updatedAt\": \"2022-06-30T16:51:28.000Z\",\n            \"id\": \"69ce25ea-2914-426e-ae34-af558b6777e6\",\n            \"name\": \"Public Test API B\",\n            \"summary\": \"Public Test B\",\n            \"description\": \"This is another public test API.\",\n            \"createdBy\": \"87654321\",\n            \"updatedBy\": \"87654321\",\n            \"isPublic\": false\n        }\n    ]\n}"},{"id":"bd496e0f-52e6-4880-a947-2f07f8cf3fa1","name":"Get Public APIs","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis?isPublic=true","protocol":"https","host":["api","getpostman","com"],"path":["apis"],"query":[{"key":"workspace","value":"{{workspaceId}}","description":"Optional. Return only APIs that are inside the given workspace.","disabled":true},{"key":"since","value":"{{since}}","description":"Optional. Return only APIs updated at and after this time, in ISO 8601 UTC format.","disabled":true},{"key":"until","value":"{{until}}","description":"Optional. Return only APIs updated at and before this time, in ISO 8601 UTC format.","disabled":true},{"key":"createdBy","value":"{{createdBy}}","description":"Optional. Return only APIs created by the given user ID.","disabled":true},{"key":"updatedBy","value":"{{updatedBy}}","description":"Optional. Return only APIs updated by the given user ID.","disabled":true},{"key":"isPublic","value":"true","description":"Optional. If true, return only public APIs; if false, return only private APIs."},{"key":"name","value":"{{name}}","description":"Optional. Return only APIs whose name includes the given value. Matching is not case-sensitive.","disabled":true},{"key":"summary","value":"{{summary}}","description":"Optional. Return only APIs whose summary includes the given value. Matching is not case-sensitive.","disabled":true},{"key":"description","value":"{{description}}","description":"Optional. Return only APIs whose description includes the given value. Matching is not case-sensitive.","disabled":true},{"key":"sort","value":"{{sort}}","description":"Optional. Sort the results by the given value.\n\nIf you use this query parameter, you must also use the `direction` parameter.","disabled":true},{"key":"direction","value":"{{direction}}","description":"Optional. Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Tue, 12 Jul 2022 16:39:09 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"120"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"x-frame-options","value":"SAMEORIGIN"},{"key":"Access-Control-Allow-Origin","value":"*"},{"key":"x-srv-trace","value":"v=1;t=915b2bd230311a7e"},{"key":"x-srv-span","value":"v=1;s=108d09101d76e02a"},{"key":"X-RateLimit-Limit","value":"400"},{"key":"X-RateLimit-Remaining","value":"399"},{"key":"X-RateLimit-Reset","value":"1657644009"},{"key":"ETag","value":"W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""},{"key":"Vary","value":"Accept-Encoding"}],"cookie":[],"responseTime":null,"body":"{\n    \"apis\": [\n        {\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n            \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n            \"name\": \"Test API\",\n            \"summary\": \"Test API.\",\n            \"description\": \"This is a test API.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\": \"12345678\",\n            \"isPublic\": true\n        },\n        {\n            \"createdAt\": \"2022-06-22T16:51:28.000Z\",\n            \"updatedAt\": \"2022-06-22T16:51:28.000Z\",\n            \"id\": \"69ce25ea-2914-426e-ae34-af558b6777e6\",\n            \"name\": \"Public API A\",\n            \"summary\": \"Public Test A.\",\n            \"description\": \"This is a public test API.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\": \"12345678\",\n            \"isPublic\": true\n        }\n    ]\n}"},{"id":"6f1115d8-986d-4e81-9c2d-ec569be067c9","name":"Get APIs in a Date Range","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis?since=2022-06-01T00:00:00.000Z&until=2022-06-15T00:00:00.000Z","protocol":"https","host":["api","getpostman","com"],"path":["apis"],"query":[{"key":"workspace","value":"{{workspaceId}}","description":"Optional. Return only APIs that are inside the given workspace.","disabled":true},{"key":"since","value":"2022-06-01T00:00:00.000Z","description":"Optional. Return only APIs updated at and after this time, in ISO 8601 UTC format."},{"key":"until","value":"2022-06-15T00:00:00.000Z","description":"Optional. Return only APIs updated at and before this time, in ISO 8601 UTC format."},{"key":"createdBy","value":"{{createdBy}}","description":"Optional. Return only APIs created by the given user ID.","disabled":true},{"key":"updatedBy","value":"{{updatedBy}}","description":"Optional. Return only APIs updated by the given user ID.","disabled":true},{"key":"isPublic","value":"{{isPublic}}","description":"Optional. If true, return only public APIs; if false, return only private APIs.","disabled":true},{"key":"name","value":"{{name}}","description":"Optional. Return only APIs whose name includes the given value. Matching is not case-sensitive.","disabled":true},{"key":"summary","value":"{{summary}}","description":"Optional. Return only APIs whose summary includes the given value. Matching is not case-sensitive.","disabled":true},{"key":"description","value":"{{description}}","description":"Optional. Return only APIs whose description includes the given value. Matching is not case-sensitive.","disabled":true},{"key":"sort","value":"{{sort}}","description":"Optional. Sort the results by the given value.\n\nIf you use this query parameter, you must also use the `direction` parameter.","disabled":true},{"key":"direction","value":"{{direction}}","description":"Optional. Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Tue, 12 Jul 2022 16:39:09 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"120"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"x-frame-options","value":"SAMEORIGIN"},{"key":"Access-Control-Allow-Origin","value":"*"},{"key":"x-srv-trace","value":"v=1;t=915b2bd230311a7e"},{"key":"x-srv-span","value":"v=1;s=108d09101d76e02a"},{"key":"X-RateLimit-Limit","value":"400"},{"key":"X-RateLimit-Remaining","value":"399"},{"key":"X-RateLimit-Reset","value":"1657644009"},{"key":"ETag","value":"W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""},{"key":"Vary","value":"Accept-Encoding"}],"cookie":[],"responseTime":null,"body":"{\n    \"apis\": [\n        {\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n            \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n            \"name\": \"Test API\",\n            \"summary\": \"Test API.\",\n            \"description\": \"This is a test API.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\": \"12345678\",\n            \"isPublic\": true\n        }\n    ]\n}"},{"id":"63f0dcfb-1246-4c83-9d04-121578de4e3a","name":"Filter APIs by Name","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis?name=Public","protocol":"https","host":["api","getpostman","com"],"path":["apis"],"query":[{"key":"workspace","value":"{{workspaceId}}","description":"Optional. Return only APIs that are inside the given workspace.","disabled":true},{"key":"since","value":"{{since}}","description":"Optional. Return only APIs updated at and after this time, in ISO 8601 UTC format.","disabled":true},{"key":"until","value":"{{until}}","description":"Optional. Return only APIs updated at and before this time, in ISO 8601 UTC format.","disabled":true},{"key":"createdBy","value":"{{createdBy}}","description":"Optional. Return only APIs created by the given user ID.","disabled":true},{"key":"updatedBy","value":"{{updatedBy}}","description":"Optional. Return only APIs updated by the given user ID.","disabled":true},{"key":"isPublic","value":"{{isPublic}}","description":"Optional. If true, return only public APIs; if false, return only private APIs.","disabled":true},{"key":"name","value":"Public","description":"Optional. Return only APIs whose name includes the given value. Matching is not case-sensitive."},{"key":"summary","value":"{{summary}}","description":"Optional. Return only APIs whose summary includes the given value. Matching is not case-sensitive.","disabled":true},{"key":"description","value":"{{description}}","description":"Optional. Return only APIs whose description includes the given value. Matching is not case-sensitive.","disabled":true},{"key":"sort","value":"{{sort}}","description":"Optional. Sort the results by the given value.\n\nIf you use this query parameter, you must also use the `direction` parameter.","disabled":true},{"key":"direction","value":"{{direction}}","description":"Optional. Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Tue, 12 Jul 2022 16:39:09 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"120"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"x-frame-options","value":"SAMEORIGIN"},{"key":"Access-Control-Allow-Origin","value":"*"},{"key":"x-srv-trace","value":"v=1;t=915b2bd230311a7e"},{"key":"x-srv-span","value":"v=1;s=108d09101d76e02a"},{"key":"X-RateLimit-Limit","value":"400"},{"key":"X-RateLimit-Remaining","value":"399"},{"key":"X-RateLimit-Reset","value":"1657644009"},{"key":"ETag","value":"W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""},{"key":"Vary","value":"Accept-Encoding"}],"cookie":[],"responseTime":null,"body":"{\n    \"apis\": [\n        {\n            \"createdAt\": \"2022-06-22T16:51:28.000Z\",\n            \"updatedAt\": \"2022-06-22T16:51:28.000Z\",\n            \"id\": \"69ce25ea-2914-426e-ae34-af558b6777e6\",\n            \"name\": \"Public API A\",\n            \"summary\": \"Public Test A.\",\n            \"description\": \"This is a public test API.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\": \"12345678\",\n            \"isPublic\": true\n        },\n        {\n            \"createdAt\": \"2022-06-30T16:51:28.000Z\",\n            \"updatedAt\": \"2022-06-30T16:51:28.000Z\",\n            \"id\": \"69ce25ea-2914-426e-ae34-af558b6777e6\",\n            \"name\": \"Public Test API B\",\n            \"summary\": \"Public Test B\",\n            \"description\": \"This is another public test API.\",\n            \"createdBy\": \"87654321\",\n            \"updatedBy\": \"87654321\",\n            \"isPublic\": false\n        }\n    ]\n}"},{"id":"dedd0187-492f-41b7-8b1e-75d0946f15b9","name":"Sort by updatedAt","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis?sort=updatedAt","protocol":"https","host":["api","getpostman","com"],"path":["apis"],"query":[{"key":"workspace","value":"{{workspaceId}}","description":"Optional. Return only APIs that are inside the given workspace.","disabled":true},{"key":"since","value":"{{since}}","description":"Optional. Return only APIs updated at and after this time, in ISO 8601 UTC format.","disabled":true},{"key":"until","value":"{{until}}","description":"Optional. Return only APIs updated at and before this time, in ISO 8601 UTC format.","disabled":true},{"key":"createdBy","value":"{{createdBy}}","description":"Optional. Return only APIs created by the given user ID.","disabled":true},{"key":"updatedBy","value":"{{updatedBy}}","description":"Optional. Return only APIs updated by the given user ID.","disabled":true},{"key":"isPublic","value":"{{isPublic}}","description":"Optional. If true, return only public APIs; if false, return only private APIs.","disabled":true},{"key":"name","value":"{{name}}","description":"Optional. Return only APIs whose name includes the given value. Matching is not case-sensitive.","disabled":true},{"key":"summary","value":"{{summary}}","description":"Optional. Return only APIs whose summary includes the given value. Matching is not case-sensitive.","disabled":true},{"key":"description","value":"{{description}}","description":"Optional. Return only APIs whose description includes the given value. Matching is not case-sensitive.","disabled":true},{"key":"sort","value":"updatedAt","description":"Optional. Sort the results by the given value.\n\nIf you use this query parameter, you must also use the `direction` parameter."},{"key":"direction","value":"{{direction}}","description":"Optional. Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Tue, 12 Jul 2022 16:39:09 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"120"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"x-frame-options","value":"SAMEORIGIN"},{"key":"Access-Control-Allow-Origin","value":"*"},{"key":"x-srv-trace","value":"v=1;t=915b2bd230311a7e"},{"key":"x-srv-span","value":"v=1;s=108d09101d76e02a"},{"key":"X-RateLimit-Limit","value":"400"},{"key":"X-RateLimit-Remaining","value":"399"},{"key":"X-RateLimit-Reset","value":"1657644009"},{"key":"ETag","value":"W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""},{"key":"Vary","value":"Accept-Encoding"}],"cookie":[],"responseTime":null,"body":"{\n    \"apis\": [\n        {\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n            \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n            \"name\": \"Test API\",\n            \"summary\": \"Test API.\",\n            \"description\": \"This is a test API.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\": \"12345678\",\n            \"isPublic\": true\n        },\n        {\n            \"createdAt\": \"2022-06-22T16:51:28.000Z\",\n            \"updatedAt\": \"2022-06-22T16:51:28.000Z\",\n            \"id\": \"69ce25ea-2914-426e-ae34-af558b6777e6\",\n            \"name\": \"Public API A\",\n            \"summary\": \"Public Test A.\",\n            \"description\": \"This is a public test API.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\": \"12345678\",\n            \"isPublic\": true\n        },\n        {\n            \"createdAt\": \"2022-06-30T16:51:28.000Z\",\n            \"updatedAt\": \"2022-06-30T16:51:28.000Z\",\n            \"id\": \"69ce25ea-2914-426e-ae34-af558b6777e6\",\n            \"name\": \"Public Test API B\",\n            \"summary\": \"Public Test B\",\n            \"description\": \"This is another public test API.\",\n            \"createdBy\": \"87654321\",\n            \"updatedBy\": \"87654321\",\n            \"isPublic\": false\n        }\n    ]\n}"},{"id":"921cfaf7-31be-4729-88ac-3da2a272e91e","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis","protocol":"https","host":["api","getpostman","com"],"path":["apis"],"query":[{"key":"workspace","value":"{{workspaceId}}","description":"Optional. Return only APIs that are inside the given workspace.","disabled":true},{"key":"since","value":"{{since}}","description":"Optional. Return only APIs updated at and after this time, in ISO 8601 UTC format.","disabled":true},{"key":"until","value":"{{until}}","description":"Optional. Return only APIs updated at and before this time, in ISO 8601 UTC format.","disabled":true},{"key":"createdBy","value":"{{createdBy}}","description":"Optional. Return only APIs created by the given user ID.","disabled":true},{"key":"updatedBy","value":"{{updatedBy}}","description":"Optional. Return only APIs updated by the given user ID.","disabled":true},{"key":"isPublic","value":"{{isPublic}}","description":"Optional. If true, return only public APIs; if false, return only private APIs.","disabled":true},{"key":"name","value":"{{name}}","description":"Optional. Return only APIs whose name includes the given value. Matching is not case-sensitive.","disabled":true},{"key":"summary","value":"{{summary}}","description":"Optional. Return only APIs whose summary includes the given value. Matching is not case-sensitive.","disabled":true},{"key":"description","value":"{{description}}","description":"Optional. Return only APIs whose description includes the given value. Matching is not case-sensitive.","disabled":true},{"key":"sort","value":"{{sort}}","description":"Optional. Sort the results by the given value.\n\nIf you use this query parameter, you must also use the `direction` parameter.","disabled":true},{"key":"direction","value":"{{direction}}","description":"Optional. Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.","disabled":true}]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Tue, 12 Jul 2022 16:39:09 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"120"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"x-frame-options","value":"SAMEORIGIN"},{"key":"Access-Control-Allow-Origin","value":"*"},{"key":"x-srv-trace","value":"v=1;t=915b2bd230311a7e"},{"key":"x-srv-span","value":"v=1;s=108d09101d76e02a"},{"key":"X-RateLimit-Limit","value":"400"},{"key":"X-RateLimit-Remaining","value":"399"},{"key":"X-RateLimit-Reset","value":"1657644009"},{"key":"ETag","value":"W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""},{"key":"Vary","value":"Accept-Encoding"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Create an API","event":[{"listen":"test","script":{"id":"711aed68-e5c8-4c84-aa2f-6d953ac3e53f","exec":[""],"type":"text/javascript"}}],"id":"e67191ce-8d6d-4167-b449-8ef6ee033943","request":{"method":"POST","header":[{"name":"Content-Type","key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"api\": {\n        \"name\": \"{{apiName}}\",\n        \"summary\": \"{{apiSummary}}\",\n        \"description\": \"{{apiDescription}}\"\n    }\n}"},"url":{"raw":"https://api.getpostman.com/apis","protocol":"https","host":["api","getpostman","com"],"path":["apis"],"query":[{"key":"workspaceId","value":"{{workspaceId}}","description":"Optional. The workspace ID in which to create the API.\n\nIf you do not use this parameter, the system creates the API in the \"My Workspace\" workspace.","disabled":true}]},"description":"Creates an API. Include the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n    \n\nYou can include the following optional properties:\n\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."},"response":[{"id":"1118536d-bd5c-4efc-baa8-5c8d23399cb5","name":"Successful Response","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"api\": {\n        \"name\": \"Test API\",\n        \"summary\": \"Test API Schema\",\n        \"description\": \"This is a test API.\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis","protocol":"https","host":["api","getpostman","com"],"path":["apis"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. The workspace ID in which to create the API.\n\nIf you do not use this parameter, the system creates the API in the \"My Workspace\" workspace.","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"api\": {\n        \"createdAt\": \"2022-06-29T20:46:58.000Z\",\n        \"updatedAt\": \"2022-06-29T20:46:58.000Z\",\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"name\": \"Test API\",\n        \"summary\": \"Test API Schema\",\n        \"description\": \"This is a test API.\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\"\n    }\n}"},{"id":"5300874f-3090-4d00-b7ad-591fe2b70109","name":"Create API in a Workspace","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"api\": {\n        \"name\": \"Test API\",\n        \"summary\": \"Test API Schema\",\n        \"description\": \"This is a test API.\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["apis"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. The workspace ID in which to create the API.\n\nIf you do not use this parameter, the system creates the API in the \"My Workspace\" workspace."}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"api\": {\n        \"createdAt\": \"2022-06-29T20:46:58.000Z\",\n        \"updatedAt\": \"2022-06-29T20:46:58.000Z\",\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"name\": \"Test API\",\n        \"summary\": \"Test API Schema\",\n        \"description\": \"This is a test API.\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\"\n    }\n}"},{"id":"dabe57d3-79f6-484f-8a12-780c7543a102","name":"Bad Request","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"api\": {\n        \"summary\": \"Test API Schema\",\n        \"description\": \"This is a test API.\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis","protocol":"https","host":["api","getpostman","com"],"path":["apis"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. The workspace ID in which to create the API.\n\nIf you do not use this parameter, the system creates the API in the \"My Workspace\" workspace.","disabled":true}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"paramMissingError\",\n        \"message\": \"Parameter is missing in the request.\"\n    }\n}"},{"id":"68b93ad0-c79b-42d7-8abf-bb63edaeeb33","name":"Rate Limit Exceeded","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"api\": {\n        \"summary\": \"Test API Schema\",\n        \"description\": \"This is a test API.\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis","protocol":"https","host":["api","getpostman","com"],"path":["apis"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. The workspace ID in which to create the API.\n\nIf you do not use this parameter, the system creates the API in the \"My Workspace\" workspace.","disabled":true}]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Get an API","id":"bfe25599-04b6-47a5-b629-0e49ff9f9ff0","request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}"]},"description":"Gets information about an API."},"response":[{"id":"8f9bd6db-1cec-4c4c-9337-b98b2bfc8be9","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d","protocol":"https","host":["api","getpostman","com"],"path":["apis","5360b75f-447e-467c-9299-12fd6c92450d"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"},"type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"api\": {\n        \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n        \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"name\": \"Test API\",\n        \"summary\": \"Test API.\",\n        \"description\": \"This is a test API.\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"team\": \"1234\",\n        \"isPublic\": true,\n        \"versions\": [\n            {\n                \"id\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n                \"name\": \"Draft\",\n                \"summary\": null,\n                \"schemas\": [\n                    {\n                        \"id\": \"16bb367e-fafb-4ef3-933b-ee3d971866fb\",\n                        \"type\": \"openapi3\",\n                        \"language\": \"json\",\n                        \"content\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Test API\\\"\\n  },\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://locahost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"List all users\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"required\\\": true,\\n            \\\"description\\\": \\\"The user's ID.\\\",\\n            \\\"example\\\": 1234,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Information about the user.\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses.\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"\n                    }\n                ],\n                \"relations\": [\n                    {\n                        \"id\": \"66b88a55-9e52-41b0-8577-7b6798ff5bee\",\n                        \"model\": \"apiDefinition\",\n                        \"type\": \"apiDefinition\",\n                        \"modelId\": \"66b88a55-9e52-41b0-8577-7b6798ff5bee\"\n                    },\n                    {\n                        \"id\": \"66b88a55-9e52-41b0-8577-7b6798ff5bee\",\n                        \"model\": \"schema\",\n                        \"type\": \"schema\",\n                        \"modelId\": \"66b88a55-9e52-41b0-8577-7b6798ff5bee\"\n                    }\n                ]\n            }\n        ]\n    }\n}"},{"id":"c12b6620-c4f7-4c4b-b2d0-d3bbc5d420a3","name":"Bad Request","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d","protocol":"https","host":["api","getpostman","com"],"path":["apis","5360b75f-447e-467c-9299-12fd6c92450d"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"},{"id":"ee6645b2-c37d-43c4-91dc-8014699e0727","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d","protocol":"https","host":["api","getpostman","com"],"path":["apis","5360b75f-447e-467c-9299-12fd6c92450d"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Update an API","id":"56ee2ef7-01ce-48ab-a449-7e211a7590b9","request":{"method":"PUT","header":[{"name":"Content-Type","key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n\t\"api\": {\n\t\t\"name\": \"{{apiName}}\",\n        \"summary\": \"{{apiSummary}}\",\n\t\t\"description\": \"{{apiDescription}}\"\n\t}\n}"},"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}"]},"description":"Updates an API. Include at least one of the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."},"response":[{"id":"dd3513a7-f2b8-4a17-84b1-0d2628845d4a","name":"Successful Response","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"api\": {\n        \"name\": \"Test API A\",\n        \"summary\": \"Test API A Schema\",\n        \"description\": \"This is Test API A.\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d","protocol":"https","host":["api","getpostman","com"],"path":["apis","5360b75f-447e-467c-9299-12fd6c92450d"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"api\": {\n        \"createdAt\": \"2022-06-29T20:46:58.000Z\",\n        \"updatedAt\": \"2022-06-29T20:46:58.000Z\",\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"name\": \"Test API A\",\n        \"summary\": \"Test API A Schema\",\n        \"description\": \"This is Test API A.\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\"\n    }\n}"},{"id":"b42d5656-1223-4ad8-b594-443a48b71553","name":"Bad Request","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"api\": {\n        \"name\": \"Test API A\",\n        \"summary\": \"Test API A Schema\",\n        \"description\": \"This is Test API A.\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d","protocol":"https","host":["api","getpostman","com"],"path":["apis","5360b75f-447e-467c-9299-12fd6c92450d"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"},{"id":"25eafeb3-52d8-4c53-a390-3b0a0e5bbfd2","name":"Rate Limit Exceeded","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"api\": {\n        \"name\": \"Test API A\",\n        \"summary\": \"Test API A Schema\",\n        \"description\": \"This is Test API A.\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d","protocol":"https","host":["api","getpostman","com"],"path":["apis","5360b75f-447e-467c-9299-12fd6c92450d"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Delete an API","id":"382007e0-dde1-4457-911b-3d8ed2770b0f","request":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/apis/{{apiId}}","protocol":"https","host":["api","getpostman","com"],"path":["apis","{{apiId}}"]},"description":"Deletes an API."},"response":[{"id":"79be1bc0-7f8c-48b6-8df6-dc80da91883d","name":"Successful Response","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d","protocol":"https","host":["api","getpostman","com"],"path":["apis","5360b75f-447e-467c-9299-12fd6c92450d"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\"\n    }\n}"},{"id":"a335a848-ead1-414d-8728-1d0645395c3e","name":"Bad Request","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d","protocol":"https","host":["api","getpostman","com"],"path":["apis","5360b75f-447e-467c-9299-12fd6c92450d"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"},{"id":"b9d7140c-21a8-4403-966c-e0194414357e","name":"Rate Limit Exceeded","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d","protocol":"https","host":["api","getpostman","com"],"path":["apis","5360b75f-447e-467c-9299-12fd6c92450d"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]}],"id":"2185c0c8-4666-47cb-a10f-75c8134657ef","description":"The `/apis` endpoints let you manage your APIs."}],"id":"8f3e76e3-24d8-4d0c-970e-6d05137bf4c7","description":"The API endpoints let you manage your APIs.\n\n## **Important:**\n\nThe endpoints in this folder are separated by Postman version:\n\n- **v10** — For APIs created or migrated in Postman v10 and higher only. When using these endpoints, you must pass an `Accept` header with the `application/vnd.api.v10+json` value.\n- **v9** — For APIs created in Postman v9 and earlier only."},{"name":"Collections","item":[{"name":"Items","item":[{"name":"Folders","item":[{"name":"Get a folder","id":"e310731e-01aa-406b-80b0-75ce1f5742d2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/{{collectionId}}/folders/{{folderId}}","protocol":"https","host":["api","getpostman","com"],"path":["collections","{{collectionId}}","folders","{{folderId}}"],"query":[{"key":"ids","value":"{{boolean}}","description":"If true, returns only the folder properties that contain ID values.","disabled":true},{"key":"uid","value":"{{boolean}}","description":"If true, returns all IDs in UID format (`userId`-`id`).","disabled":true},{"key":"populate","value":"{{boolean}}","description":"If true, returns all of a folder's contents.","disabled":true}]},"description":"Gets information about a folder in a collection."},"response":[{"id":"4e7198ff-be91-4fc1-adbf-2a905a512179","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","folders","65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:33:56 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"987964"},{"key":"X-RateLimit-Remaining-Month","value":"977029"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"262"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"262"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"4"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=d245c5c6a357a2ae"},{"key":"x-srv-span","value":"v=1;s=4aad2f8314926f59"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"21e-lNxUZsSAo40FhZOmzxzakA\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"51"},{"key":"X-Kong-Proxy-Latency","value":"149"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n    \"meta\": {\n        \"model\": \"folder\",\n        \"populate\": false,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"folder\": null,\n        \"id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n        \"name\": \"Test Folder\",\n        \"description\": \"This is a test collection folder.\",\n        \"variables\": null,\n        \"auth\": {\n            \"type\": \"apikey\",\n            \"apikey\": [\n                {\n                    \"key\": \"value\",\n                    \"value\": \"XXX\"\n                },\n                {\n                    \"key\": \"key\",\n                    \"value\": \"x-api-key\"\n                }\n            ]\n        },\n        \"events\": null,\n        \"order\": [\n            \"81b49e05-0b87-4ca4-ac8c-091aaedafea3\",\n            \"929acf24-4234-45e1-59cf-dc2b27ea7603\",\n            \"3cfc2ac8-00a9-47d2-415d-049773f23268\"\n        ],\n        \"folders_order\": [\n            \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n            \"5c341de9-5751-461f-b7bd-af86bbae740c\"\n        ],\n        \"createdAt\": \"2022-08-29T16:49:19.964Z\",\n        \"updatedAt\": \"2022-08-29T16:49:19.964Z\"\n    }\n}"},{"id":"195029ba-9b22-4b99-8c35-445d98646c75","name":"Response with populate Parameter","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa?populate=true","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","folders","65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"],"query":[{"key":"populate","value":"true"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:33:56 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"987964"},{"key":"X-RateLimit-Remaining-Month","value":"977029"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"262"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"262"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"4"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=d245c5c6a357a2ae"},{"key":"x-srv-span","value":"v=1;s=4aad2f8314926f59"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"21e-lNxUZsSAo40FhZOmzxzakA\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"51"},{"key":"X-Kong-Proxy-Latency","value":"149"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n    \"meta\": {\n        \"model\": \"folder\",\n        \"populate\": true,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 32546182786,\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"folder\": null,\n        \"id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n        \"name\": \"Test Folder\",\n        \"description\": \"This is a test collection folder.\",\n        \"variables\": null,\n        \"auth\": {\n            \"type\": \"apikey\",\n            \"apikey\": [\n                {\n                    \"key\": \"value\",\n                    \"value\": \"XXX\"\n                },\n                {\n                    \"key\": \"key\",\n                    \"value\": \"x-api-key\"\n                }\n            ]\n        },\n        \"events\": null,\n        \"order\": [\n            \"81b49e05-0b87-4ca4-ac8c-091aaedafea3\",\n            \"929acf24-4234-45e1-59cf-dc2b27ea7603\",\n            \"3cfc2ac8-00a9-47d2-415d-049773f23268\"\n        ],\n        \"folders_order\": [\n            \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n            \"5c341de9-5751-461f-b7bd-af86bbae740c\"\n        ],\n        \"createdAt\": \"2022-08-29T16:49:19.964Z\",\n        \"updatedAt\": \"2022-08-29T16:49:19.964Z\",\n        \"folders\": [\n            {\n                \"owner\": \"12345678\",\n                \"lastUpdatedBy\": \"12345678\",\n                \"lastRevision\": 32588211132,\n                \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"folder\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n                \"id\": \"5c341de9-5751-461f-b7bd-af86bbae740c\",\n                \"name\": \"Test Folder\",\n                \"description\": \"This is a test collection folder.\",\n                \"variables\": null,\n                \"auth\": null,\n                \"events\": null,\n                \"order\": [\n                    \"d924b1a5-6cf7-4dcf-a326-37dc9b91e295\",\n                    \"f0dd54db-8ad7-4b32-9e0b-5a0b5b52f78b\"\n                ],\n                \"folders_order\": [],\n                \"createdAt\": \"2023-09-13T21:56:35.000Z\",\n                \"updatedAt\": \"2023-09-15T16:26:54.000Z\"\n            },\n            {\n                \"owner\": \"12345678\",\n                \"lastUpdatedBy\": \"12345678\",\n                \"lastRevision\": 32588208043,\n                \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"folder\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n                \"id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n                \"name\": \"Test Folder 2\",\n                \"description\": \"This is another test collection folder.\",\n                \"variables\": null,\n                \"auth\": null,\n                \"events\": null,\n                \"order\": [\n                    \"6e5b9306-9e22-4d27-8a70-50692c19ad75\"\n                ],\n                \"folders_order\": [],\n                \"createdAt\": \"2023-09-13T21:54:44.000Z\",\n                \"updatedAt\": \"2023-09-15T16:26:42.000Z\"\n            }\n        ],\n        \"requests\": [\n            {\n                \"owner\": \"12345678\",\n                \"lastUpdatedBy\": \"12345678\",\n                \"lastRevision\": 32545633807,\n                \"folder\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n                \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"id\": \"3ac0e7be-86d9-443b-895d-2c2d959942d7\",\n                \"name\": \"Test A\",\n                \"dataMode\": \"raw\",\n                \"data\": null,\n                \"auth\": null,\n                \"events\": null,\n                \"rawModeData\": \"{\\n    \\\"name\\\": \\\"Test\\\",\\n    \\\"description\\\": \\\"This is a test.\\\"\\n}\",\n                \"descriptionFormat\": null,\n                \"description\": null,\n                \"variables\": null,\n                \"headers\": \"\",\n                \"method\": \"PUT\",\n                \"pathVariables\": {},\n                \"url\": \"http://postman-echo.com/v1/request\",\n                \"preRequestScript\": null,\n                \"tests\": null,\n                \"currentHelper\": null,\n                \"helperAttributes\": null,\n                \"queryParams\": [],\n                \"headerData\": [],\n                \"pathVariableData\": [],\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"dataDisabled\": false,\n                \"responses_order\": [\n                    \"6d9ec96b-1fec-4455-a9cc-f50d6ceb4997\"\n                ],\n                \"createdAt\": \"2022-10-05T13:16:49.000Z\",\n                \"updatedAt\": \"2023-09-13T14:08:04.000Z\",\n                \"dataOptions\": {\n                    \"raw\": {\n                        \"language\": \"json\"\n                    }\n                },\n                \"responses\": [\n                    {\n                        \"owner\": \"12345678\",\n                        \"lastUpdatedBy\": \"12345678\",\n                        \"lastRevision\": 32545778004,\n                        \"request\": \"3ac0e7be-86d9-443b-895d-2c2d959942d7\",\n                        \"id\": \"6d9ec96b-1fec-4455-a9cc-f50d6ceb4997\",\n                        \"name\": \"Test B\",\n                        \"status\": null,\n                        \"responseCode\": {\n                            \"code\": 200,\n                            \"name\": \"OK\"\n                        },\n                        \"time\": null,\n                        \"headers\": [\n                            {\n                                \"key\": \"Content-Type\",\n                                \"name\": \"Content-Type\",\n                                \"value\": \"application/json\",\n                                \"description\": \"\",\n                                \"type\": \"text\"\n                            }\n                        ],\n                        \"cookies\": null,\n                        \"mime\": null,\n                        \"text\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                        \"language\": \"json\",\n                        \"rawDataType\": null,\n                        \"requestObject\": \"{\\\"data\\\":null,\\\"dataMode\\\":\\\"raw\\\",\\\"dataOptions\\\":{\\\"raw\\\":{\\\"language\\\":\\\"json\\\"}},\\\"headerData\\\":[{\\\"key\\\":\\\"Content-Type\\\",\\\"name\\\":\\\"Content-Type\\\",\\\"value\\\":\\\"application/json\\\",\\\"description\\\":\\\"\\\",\\\"type\\\":\\\"text\\\"}],\\\"method\\\":\\\"PUT\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[],\\\"url\\\":\\\"https://postman-echo.com/v1/request\\\",\\\"headers\\\":\\\"Content-Type: application/json\\\\n\\\",\\\"pathVariables\\\":{},\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true},\\\"rawModeData\\\":\\\"{\\\\n    \\\\\\\"firstName\\\\\\\": \\\\\\\"Test\\\\\\\",\\\\n    \\\\\\\"lastName\\\\\\\": \\\\\\\"User\\\\\\\"\\\\n}\\\",\\\"graphqlModeData\\\":{}}\",\n                        \"createdAt\": \"2023-09-12T15:20:20.000Z\",\n                        \"updatedAt\": \"2023-09-13T14:13:44.000Z\"\n                    }\n                ]\n            },\n            {\n                \"owner\": \"12345678\",\n                \"lastUpdatedBy\": \"12345678\",\n                \"lastRevision\": 32546060484,\n                \"folder\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n                \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"id\": \"929acf24-4234-45e1-59cf-dc2b27ea7603\",\n                \"name\": \"Test B\",\n                \"dataMode\": \"raw\",\n                \"data\": null,\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"events\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"a8608e1a-ce4b-4129-8c89-930d26ae0f6a\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ],\n                            \"type\": \"text/javascript\"\n                        }\n                    },\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"id\": \"5b4bb273-5878-4bd7-a296-94a256783a66\",\n                            \"exec\": [\n                                \"\"\n                            ],\n                            \"type\": \"text/javascript\"\n                        }\n                    }\n                ],\n                \"rawModeData\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                \"descriptionFormat\": null,\n                \"description\": null,\n                \"variables\": null,\n                \"headers\": \"\",\n                \"method\": \"POST\",\n                \"pathVariables\": {},\n                \"url\": \"https://postman-echo.com/v1/post\",\n                \"preRequestScript\": null,\n                \"tests\": \"pm.test(\\\"Status code is 200\\\", function () {\\n    pm.response.to.have.status(200);\\n});\",\n                \"currentHelper\": \"apikeyAuth\",\n                \"helperAttributes\": \"{\\\"id\\\":\\\"apikey\\\",\\\"key\\\":\\\"api-key\\\",\\\"value\\\":\\\"XXX\\\"}\",\n                \"queryParams\": [],\n                \"headerData\": [],\n                \"pathVariableData\": [],\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"dataDisabled\": false,\n                \"responses_order\": [\n                    \"3c36a13f-2785-49ff-a969-1520769b28f5\"\n                ],\n                \"createdAt\": \"2023-09-07T14:03:52.000Z\",\n                \"updatedAt\": \"2023-09-13T14:26:58.000Z\",\n                \"dataOptions\": {\n                    \"raw\": {\n                        \"language\": \"json\"\n                    }\n                },\n                \"responses\": [\n                    {\n                        \"owner\": \"12345678\",\n                        \"lastUpdatedBy\": \"12345678\",\n                        \"lastRevision\": 32546199268,\n                        \"request\": \"929acf24-4234-45e1-59cf-dc2b27ea7603\",\n                        \"id\": \"3c36a13f-2785-49ff-a969-1520769b28f5\",\n                        \"name\": \"Successful Response\",\n                        \"status\": null,\n                        \"responseCode\": null,\n                        \"time\": null,\n                        \"headers\": [\n                            {\n                                \"key\": \"Content-Type\",\n                                \"name\": \"Content-Type\",\n                                \"value\": \"application/json\",\n                                \"description\": \"\",\n                                \"type\": \"text\"\n                            }\n                        ],\n                        \"cookies\": null,\n                        \"mime\": null,\n                        \"text\": \"{\\n    \\\"id\\\": \\\"test-api\\\",\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\",\\n    \\\"is_public\\\": false,\\n    \\\"created_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"updated_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"performance\\\": {\\n        \\\"collection\\\": \\\"12ece9e1-2abf-4edc-8e34-de66e74114d2\\\",\\n        \\\"environment\\\": \\\"12ece9e1-2abf-4edc-8e34-de66e74114d2\\\"\\n    }\\n}\",\n                        \"language\": \"json\",\n                        \"rawDataType\": null,\n                        \"requestObject\": \"{\\\"data\\\":null,\\\"dataMode\\\":\\\"raw\\\",\\\"dataOptions\\\":{\\\"raw\\\":{\\\"language\\\":\\\"json\\\"}},\\\"headerData\\\":[],\\\"method\\\":\\\"POST\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[],\\\"url\\\":\\\"https://postman-echo.com/post\\\",\\\"headers\\\":\\\"\\\",\\\"pathVariables\\\":{},\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true},\\\"rawModeData\\\":\\\"{\\\\n    \\\\\\\"name\\\\\\\": \\\\\\\"Test API\\\\\\\",\\\\n    \\\\\\\"description\\\\\\\": \\\\\\\"This is a test API.\\\\\\\"\\\\n}\\\",\\\"graphqlModeData\\\":{}}\",\n                        \"createdAt\": \"2023-09-12T15:21:55.000Z\",\n                        \"updatedAt\": \"2023-09-13T14:33:26.000Z\"\n                    }\n                ]\n            },\n            {\n                \"owner\": \"12345678\",\n                \"lastUpdatedBy\": \"12345678\",\n                \"lastRevision\": 32545561759,\n                \"folder\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n                \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"id\": \"fb620884-9745-4244-b875-6c33a8acc771\",\n                \"name\": \"Test A\",\n                \"dataMode\": \"raw\",\n                \"data\": null,\n                \"auth\": {\n                    \"type\": \"bearer\",\n                    \"bearer\": [\n                        {\n                            \"key\": \"token\",\n                            \"value\": \"TEST\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"events\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"b12101c5-fe85-4722-adf0-a1e900eab708\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ],\n                            \"type\": \"text/javascript\"\n                        }\n                    },\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"id\": \"7b34bf6b-f440-4768-a486-4ce96e997cb7\",\n                            \"exec\": [\n                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                \"    console.log(response.json());\",\n                                \"});\"\n                            ],\n                            \"type\": \"text/javascript\"\n                        }\n                    }\n                ],\n                \"rawModeData\": \"\",\n                \"descriptionFormat\": \"markdown\",\n                \"description\": \"This is a test API.\",\n                \"variables\": null,\n                \"headers\": \"Accept: application/vnd.example.v1+json\\n\",\n                \"method\": \"GET\",\n                \"pathVariables\": {},\n                \"url\": \"https://postman-echo.com/v1/request?id={{id}}\",\n                \"preRequestScript\": \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\\n    console.log(response.json());\\n});\",\n                \"tests\": \"pm.test(\\\"Status code is 200\\\", function () {\\n    pm.response.to.have.status(200);\\n});\",\n                \"currentHelper\": \"bearerAuth\",\n                \"helperAttributes\": \"{\\\"id\\\":\\\"bearer\\\",\\\"token\\\":\\\"TEST\\\"}\",\n                \"queryParams\": [\n                    {\n                        \"key\": \"id\",\n                        \"value\": \"{{id}}\",\n                        \"equals\": true,\n                        \"description\": \"The API's ID.\",\n                        \"enabled\": true\n                    }\n                ],\n                \"headerData\": [\n                    {\n                        \"key\": \"Accept\",\n                        \"value\": \"application/vnd.example.v1+json\",\n                        \"description\": null,\n                        \"type\": \"text\",\n                        \"enabled\": true\n                    }\n                ],\n                \"pathVariableData\": [],\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"dataDisabled\": false,\n                \"responses_order\": [\n                    \"ee4ab273-1f36-f8de-adfc-02ad1cd126dc\",\n                    \"33745d7c-0cb3-4097-b038-6d9a08886ae1\"\n                ],\n                \"createdAt\": \"2022-10-05T13:09:24.000Z\",\n                \"updatedAt\": \"2023-09-13T14:04:37.000Z\",\n                \"dataOptions\": {\n                    \"raw\": {\n                        \"language\": \"json\"\n                    }\n                },\n                \"responses\": [\n                    {\n                        \"owner\": \"12345678\",\n                        \"lastUpdatedBy\": \"12345678\",\n                        \"lastRevision\": 32545559961,\n                        \"request\": \"fb620884-9745-4244-b875-6c33a8acc771\",\n                        \"id\": \"33745d7c-0cb3-4097-b038-6d9a08886ae1\",\n                        \"name\": \"Not Found\",\n                        \"status\": null,\n                        \"responseCode\": {\n                            \"name\": \"Not Found\",\n                            \"code\": 404\n                        },\n                        \"time\": null,\n                        \"headers\": [\n                            {\n                                \"key\": \"Content-Type\",\n                                \"name\": \"Content-Type\",\n                                \"value\": \"application/json\",\n                                \"description\": \"\",\n                                \"type\": \"text\"\n                            }\n                        ],\n                        \"cookies\": null,\n                        \"mime\": null,\n                        \"text\": \"{\\n    \\\"title\\\": \\\"Not Found\\\",\\n    \\\"detail\\\": \\\"Requested API does not exist\\\",\\n    \\\"type\\\": \\\"about:blank\\\"\\n}\",\n                        \"language\": \"json\",\n                        \"rawDataType\": null,\n                        \"requestObject\": \"{\\\"data\\\":null,\\\"dataMode\\\":\\\"raw\\\",\\\"dataOptions\\\":{\\\"raw\\\":{\\\"language\\\":\\\"json\\\"}},\\\"headerData\\\":[{\\\"key\\\":\\\"Accept\\\",\\\"value\\\":\\\"application/vnd.example.v1+json\\\",\\\"description\\\":\\\"\\\",\\\"type\\\":\\\"text\\\",\\\"enabled\\\":true}],\\\"method\\\":\\\"GET\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[{\\\"key\\\":\\\"id\\\",\\\"value\\\":\\\"test-api\\\",\\\"equals\\\":true,\\\"description\\\":null,\\\"enabled\\\":true}],\\\"url\\\":\\\"https://postman-echo.com/v1/request?id=test-api\\\",\\\"headers\\\":\\\"Accept: application/vnd.example.v1+json\\\\n\\\",\\\"pathVariables\\\":{},\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true},\\\"rawModeData\\\":\\\"\\\",\\\"graphqlModeData\\\":{}}\",\n                        \"createdAt\": \"2023-08-22T12:53:12.000Z\",\n                        \"updatedAt\": \"2023-09-13T14:04:32.000Z\"\n                    },\n                    {\n                        \"owner\": \"12345678\",\n                        \"lastUpdatedBy\": \"12345678\",\n                        \"lastRevision\": 32545561807,\n                        \"request\": \"fb620884-9745-4244-b875-6c33a8acc771\",\n                        \"id\": \"ee4ab273-1f36-f8de-adfc-02ad1cd126dc\",\n                        \"name\": \"Successful Response\",\n                        \"status\": null,\n                        \"responseCode\": {\n                            \"code\": 200,\n                            \"name\": \"OK\"\n                        },\n                        \"time\": null,\n                        \"headers\": [\n                            {\n                                \"key\": \"date\",\n                                \"value\": \"Thu, 07 Sep 2023 12:41:59 GMT\"\n                            },\n                            {\n                                \"key\": \"content-type\",\n                                \"value\": \"application/json; charset=utf-8\"\n                            },\n                            {\n                                \"key\": \"content-length\",\n                                \"value\": \"468\"\n                            },\n                            {\n                                \"key\": \"etag\",\n                                \"value\": \"W/\\\"1d4-JuAIw8ssoFCtGzk/UwITxaiSbrc\\\"\"\n                            },\n                            {\n                                \"key\": \"set-cookie\",\n                                \"value\": \"sails.sid=s%3A6p_NXpI3OZeGE35bI6i5Uq3XgHHxcsdJ.dQVpBE%2BJ9wHWainkqe6F6dkdv7UKoshSZY7sdZ5sbzo; Path=/ HttpOnly\"\n                            }\n                        ],\n                        \"cookies\": null,\n                        \"mime\": null,\n                        \"text\": \"{\\n  \\\"args\\\": {},\\n  \\\"data\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"files\\\": {},\\n  \\\"form\\\": {},\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9c517-36db304817c774d740619baa\\\",\\n    \\\"content-length\\\": \\\"22\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"json\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\\n\",\n                        \"language\": \"json\",\n                        \"rawDataType\": null,\n                        \"requestObject\": \"{\\n  \\\"name\\\": \\\"Request\\\",\\n  \\\"description\\\": \\\"\\\",\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\",\\n  \\\"method\\\": \\\"POST\\\",\\n  \\\"headers\\\": [\\n    {\\n      \\\"key\\\": \\\"Host\\\",\\n      \\\"value\\\": \\\"postman-echo.com\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"user-agent\\\",\\n      \\\"value\\\": \\\"curl/7.88.1\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"accept\\\",\\n      \\\"value\\\": \\\"*/*\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"content-type\\\",\\n      \\\"value\\\": \\\"application/json\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"content-length\\\",\\n      \\\"value\\\": \\\"22\\\"\\n    }\\n  ],\\n  \\\"dataMode\\\": \\\"raw\\\",\\n  \\\"rawModeData\\\": \\\"{\\\\n  \\\\\\\"field\\\\\\\": \\\\\\\"Value\\\\\\\"\\\\n}\\\",\\n  \\\"dataOptions\\\": {\\n    \\\"raw\\\": {\\n      \\\"language\\\": \\\"json\\\"\\n    }\\n  }\\n}\",\n                        \"createdAt\": \"2023-09-12T18:34:27.000Z\",\n                        \"updatedAt\": \"2023-09-13T14:04:37.000Z\"\n                    }\n                ]\n            },\n            {\n                \"owner\": \"12345678\",\n                \"lastUpdatedBy\": \"12345678\",\n                \"lastRevision\": 32545799957,\n                \"folder\": \"35cda0a4-23fb-4add-a352-fc1b0f96fbd1\",\n                \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"id\": \"b0e4627a-f359-415e-8f2e-4a86b2506fb5\",\n                \"name\": \"Test E\",\n                \"dataMode\": \"raw\",\n                \"data\": null,\n                \"auth\": {\n                    \"type\": \"bearer\",\n                    \"bearer\": [\n                        {\n                            \"key\": \"token\",\n                            \"value\": \"TEST\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"events\": null,\n                \"rawModeData\": \"{\\n    \\\"username\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                \"descriptionFormat\": null,\n                \"description\": \"This is an example PATCH request.\",\n                \"variables\": null,\n                \"headers\": \"\",\n                \"method\": \"PATCH\",\n                \"pathVariables\": {},\n                \"url\": \"https://postman-echo.com/get?id={{id}}\",\n                \"preRequestScript\": null,\n                \"tests\": null,\n                \"currentHelper\": \"bearerAuth\",\n                \"helperAttributes\": \"{\\\"id\\\":\\\"bearer\\\",\\\"token\\\":\\\"TEST\\\"}\",\n                \"queryParams\": [\n                    {\n                        \"key\": \"id\",\n                        \"value\": \"{{id}}\",\n                        \"equals\": true,\n                        \"description\": \"The user's ID.\",\n                        \"enabled\": true\n                    }\n                ],\n                \"headerData\": [],\n                \"pathVariableData\": [],\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"dataDisabled\": false,\n                \"responses_order\": [\n                    \"d47ba091-90b3-4f3a-9e33-09000784bc8f\"\n                ],\n                \"createdAt\": \"2023-09-13T14:05:22.000Z\",\n                \"updatedAt\": \"2023-09-13T14:14:41.000Z\",\n                \"dataOptions\": {\n                    \"raw\": {\n                        \"language\": \"json\"\n                    }\n                },\n                \"responses\": [\n                    {\n                        \"owner\": \"12345678\",\n                        \"lastUpdatedBy\": \"12345678\",\n                        \"lastRevision\": 32545769906,\n                        \"request\": \"b0e4627a-f359-415e-8f2e-4a86b2506fb5\",\n                        \"id\": \"d47ba091-90b3-4f3a-9e33-09000784bc8f\",\n                        \"name\": \"Successful Response\",\n                        \"status\": null,\n                        \"responseCode\": {\n                            \"code\": 200,\n                            \"name\": \"OK\"\n                        },\n                        \"time\": null,\n                        \"headers\": [\n                            {\n                                \"key\": \"Content-Type\",\n                                \"name\": \"Content-Type\",\n                                \"value\": \"application/json\",\n                                \"description\": \"\",\n                                \"type\": \"text\"\n                            }\n                        ],\n                        \"cookies\": null,\n                        \"mime\": null,\n                        \"text\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                        \"language\": \"json\",\n                        \"rawDataType\": null,\n                        \"requestObject\": \"{\\\"data\\\":null,\\\"dataMode\\\":\\\"raw\\\",\\\"dataOptions\\\":{\\\"raw\\\":{\\\"language\\\":\\\"json\\\"}},\\\"headerData\\\":[{\\\"key\\\":\\\"Content-Type\\\",\\\"name\\\":\\\"Content-Type\\\",\\\"value\\\":\\\"application/json\\\",\\\"description\\\":\\\"\\\",\\\"type\\\":\\\"text\\\"}],\\\"method\\\":\\\"GET\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[{\\\"key\\\":\\\"id\\\",\\\"value\\\":\\\"1234\\\",\\\"equals\\\":true,\\\"description\\\":\\\"Optional. The user's ID.\\\",\\\"enabled\\\":true}],\\\"url\\\":\\\"https://postman-echo.com/get?id=1234\\\",\\\"headers\\\":\\\"Content-Type: application/json\\\\n\\\",\\\"pathVariables\\\":{},\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true},\\\"rawModeData\\\":\\\"{\\\\n    \\\\\\\"firstName\\\\\\\": \\\\\\\"Test\\\\\\\",\\\\n    \\\\\\\"lastName\\\\\\\": \\\\\\\"User\\\\\\\"\\\\n}\\\",\\\"graphqlModeData\\\":{}}\",\n                        \"createdAt\": \"2023-09-13T14:05:22.000Z\",\n                        \"updatedAt\": \"2023-09-13T14:13:21.000Z\"\n                    }\n                ]\n            },\n            {\n                \"owner\": \"12345678\",\n                \"lastUpdatedBy\": \"12345678\",\n                \"lastRevision\": 32546157840,\n                \"folder\": \"35cda0a4-23fb-4add-a352-fc1b0f96fbd1\",\n                \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"id\": \"f9805781-69c1-4332-be32-bda89eb765aa\",\n                \"name\": \"Test D\",\n                \"dataMode\": null,\n                \"data\": null,\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"events\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"id\": \"120f2410-edbf-45b2-a21e-1e76335a3c71\",\n                            \"exec\": [\n                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                \"    console.log(response.json());\",\n                                \"});\"\n                            ],\n                            \"type\": \"text/javascript\"\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"3300c158-1bdd-4d99-a532-191a037a4d4a\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ],\n                            \"type\": \"text/javascript\"\n                        }\n                    }\n                ],\n                \"rawModeData\": null,\n                \"descriptionFormat\": null,\n                \"description\": \"This is an example GET request.\",\n                \"variables\": null,\n                \"headers\": \"\",\n                \"method\": \"GET\",\n                \"pathVariables\": {},\n                \"url\": \"https://postman-echo.com/get?id={{id}}\",\n                \"preRequestScript\": \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\\n    console.log(response.json());\\n});\",\n                \"tests\": \"pm.test(\\\"Status code is 200\\\", function () {\\n    pm.response.to.have.status(200);\\n});\",\n                \"currentHelper\": \"apikeyAuth\",\n                \"helperAttributes\": \"{\\\"id\\\":\\\"apikey\\\",\\\"key\\\":\\\"api-key\\\",\\\"value\\\":\\\"XXX\\\"}\",\n                \"queryParams\": [\n                    {\n                        \"key\": \"id\",\n                        \"value\": \"{{id}}\",\n                        \"equals\": true,\n                        \"description\": \"Optional. The user's ID.\",\n                        \"enabled\": true\n                    }\n                ],\n                \"headerData\": [],\n                \"pathVariableData\": [],\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"dataDisabled\": false,\n                \"responses_order\": [\n                    \"e4eda8a5-eef0-4fb7-b2c6-dd5bd3d67dd3\"\n                ],\n                \"createdAt\": \"2023-08-22T12:52:01.000Z\",\n                \"updatedAt\": \"2023-09-13T14:31:25.000Z\",\n                \"responses\": [\n                    {\n                        \"owner\": \"12345678\",\n                        \"lastUpdatedBy\": \"12345678\",\n                        \"lastRevision\": 32545767296,\n                        \"request\": \"f9805781-69c1-4332-be32-bda89eb765aa\",\n                        \"id\": \"e4eda8a5-eef0-4fb7-b2c6-dd5bd3d67dd3\",\n                        \"name\": \"Successful Response\",\n                        \"status\": null,\n                        \"responseCode\": {\n                            \"code\": 200,\n                            \"name\": \"OK\"\n                        },\n                        \"time\": null,\n                        \"headers\": [\n                            {\n                                \"key\": \"Content-Type\",\n                                \"name\": \"Content-Type\",\n                                \"value\": \"application/json\",\n                                \"description\": \"\",\n                                \"type\": \"text\"\n                            }\n                        ],\n                        \"cookies\": null,\n                        \"mime\": null,\n                        \"text\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                        \"language\": \"json\",\n                        \"rawDataType\": null,\n                        \"requestObject\": \"{\\\"data\\\":null,\\\"dataMode\\\":null,\\\"dataOptions\\\":{\\\"raw\\\":{\\\"language\\\":\\\"json\\\"}},\\\"headerData\\\":[{\\\"key\\\":\\\"Content-Type\\\",\\\"name\\\":\\\"Content-Type\\\",\\\"value\\\":\\\"application/json\\\",\\\"description\\\":\\\"\\\",\\\"type\\\":\\\"text\\\"}],\\\"method\\\":\\\"GET\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[{\\\"key\\\":\\\"id\\\",\\\"value\\\":\\\"1234\\\",\\\"equals\\\":true,\\\"description\\\":\\\"Optional. The user's ID.\\\",\\\"enabled\\\":true}],\\\"url\\\":\\\"https://postman-echo.com/get?id=1234\\\",\\\"headers\\\":\\\"Content-Type: application/json\\\\n\\\",\\\"pathVariables\\\":{},\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true}}\",\n                        \"createdAt\": \"2023-09-07T14:39:52.000Z\",\n                        \"updatedAt\": \"2023-09-13T14:13:08.000Z\"\n                    }\n                ]\n            }\n        ]\n    }\n}"},{"id":"e70c1f3c-c024-47c9-8834-c502cccdcda8","name":"Response with ids Parameter","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa?ids=true","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","folders","65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"],"query":[{"key":"ids","value":"true"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:33:56 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"987964"},{"key":"X-RateLimit-Remaining-Month","value":"977029"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"262"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"262"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"4"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=d245c5c6a357a2ae"},{"key":"x-srv-span","value":"v=1;s=4aad2f8314926f59"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"21e-lNxUZsSAo40FhZOmzxzakA\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"51"},{"key":"X-Kong-Proxy-Latency","value":"149"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n    \"meta\": {\n        \"model\": \"folder\",\n        \"action\": \"find\",\n        \"populate\": false,\n        \"changeset\": false\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 24994132707,\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"folder\": null,\n        \"id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n        \"name\": \"Test Folder\",\n        \"description\": \"This is a test collection folder.\",\n        \"variables\": null,\n        \"auth\": {\n            \"type\": \"apikey\",\n            \"apikey\": [\n                {\n                    \"key\": \"value\",\n                    \"value\": \"XXX\"\n                },\n                {\n                    \"key\": \"key\",\n                    \"value\": \"x-api-key\"\n                }\n            ]\n        },\n        \"events\": null,\n        \"order\": [\n            \"81b49e05-0b87-4ca4-ac8c-091aaedafea3\",\n            \"929acf24-4234-45e1-59cf-dc2b27ea7603\",\n            \"3cfc2ac8-00a9-47d2-415d-049773f23268\"\n        ],\n        \"createdAt\": \"2022-08-29T16:49:19.964Z\",\n        \"updatedAt\": \"2022-08-29T16:49:19.964Z\",\n        \"folders_order\": [\n            \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n            \"5c341de9-5751-461f-b7bd-af86bbae740c\"\n        ]\n    }\n}"},{"id":"ae73929a-3646-4716-af1c-4a431e250d5b","name":"Response with uid Parameter","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa?uid=true","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","folders","65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"],"query":[{"key":"uid","value":"true"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:33:56 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"987964"},{"key":"X-RateLimit-Remaining-Month","value":"977029"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"262"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"262"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"4"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=d245c5c6a357a2ae"},{"key":"x-srv-span","value":"v=1;s=4aad2f8314926f59"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"21e-lNxUZsSAo40FhZOmzxzakA\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"51"},{"key":"X-Kong-Proxy-Latency","value":"149"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n    \"meta\": {\n        \"model\": \"folder\",\n        \"populate\": false,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 24994132707,\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"folder\": null,\n        \"id\": \"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n        \"name\": \"Test Folder\",\n        \"description\": \"This is a test collection folder.\",\n        \"variables\": null,\n        \"auth\": {\n            \"type\": \"apikey\",\n            \"apikey\": [\n                {\n                    \"key\": \"value\",\n                    \"value\": \"XXX\"\n                },\n                {\n                    \"key\": \"key\",\n                    \"value\": \"x-api-key\"\n                }\n            ]\n        },\n        \"events\": null,\n        \"order\": [\n            \"12345678-81b49e05-0b87-4ca4-ac8c-091aaedafea3\",\n            \"12345678-929acf24-4234-45e1-59cf-dc2b27ea7603\",\n            \"12345678-3cfc2ac8-00a9-47d2-415d-049773f23268\"\n        ],\n        \"folders_order\": [\n            \"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n            \"12345678-5c341de9-5751-461f-b7bd-af86bbae740c\"\n        ],\n        \"createdAt\": \"2022-08-29T16:49:19.964Z\",\n        \"updatedAt\": \"2022-08-29T16:49:19.964Z\"\n    }\n}"},{"id":"6ee3b229-cd83-4d0c-8486-eb6f83dafca1","name":"Not Found","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","folders","65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:33:56 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"987964"},{"key":"X-RateLimit-Remaining-Month","value":"977029"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"262"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"262"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"4"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=d245c5c6a357a2ae"},{"key":"x-srv-span","value":"v=1;s=4aad2f8314926f59"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"21e-lNxUZsSAo40FhZOmzxzakA\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"51"},{"key":"X-Kong-Proxy-Latency","value":"149"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the folder you are looking for\",\n        \"details\": {\n            \"model\": \"folder\",\n            \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"},{"id":"5d2d4726-ebbd-4e1c-a689-74f11ea82f24","name":"Unauthorized","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","folders","65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:33:56 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"987964"},{"key":"X-RateLimit-Remaining-Month","value":"977029"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"262"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"262"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"4"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=d245c5c6a357a2ae"},{"key":"x-srv-span","value":"v=1;s=4aad2f8314926f59"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"21e-lNxUZsSAo40FhZOmzxzakA\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"51"},{"key":"X-Kong-Proxy-Latency","value":"149"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"Unauthorized\",\n        \"message\": \"Unauthorized\",\n        \"details\": {\n            \"model\": \"folder\",\n            \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"}]},{"name":"Create a folder","id":"0c0e1519-4f4b-4dcf-98fe-c84df5069245","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"{{folderName}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/{{collectionId}}/folders","protocol":"https","host":["api","getpostman","com"],"path":["collections","{{collectionId}}","folders"]},"description":"Creates a folder in a collection. For a complete list of properties, refer to \"Folder\" in the [collection.json schema file](https://schema.postman.com/collection/json/v2.1.0/draft-07/collection.json).\n\nYou can use this endpoint to to import requests and responses into a newly-created folder. To do this, include the `requests` field and the list of request objects in the request body. For more information, see the provided examples.\n\n**Note:**\n\nIt is recommended that you pass the `name` property in the request body. If you do not, the system uses a null value. As a result, this creates a folder with a blank name."},"response":[{"id":"7df0163a-bce4-4fee-9a97-13f693f0b06b","name":"Create a Folder","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"Test Folder\",\n    \"description\": \"This is a test collection folder.\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","folders"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:17:56 GMT"},{"key":"Content-Type","value":"application/json","description":""},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"988924"},{"key":"X-RateLimit-Remaining-Month","value":"977044"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"263"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"263"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"4"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=fc60a19470f7b10a"},{"key":"x-srv-span","value":"v=1;s=1192f8fdfba416a4"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"1e9-6QXPHszx60/RU45DZjZ/sA\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"398"},{"key":"X-Kong-Proxy-Latency","value":"181"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"data\": {\n        \"id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n        \"name\": \"Test Folder\",\n        \"order\": [],\n        \"owner\": \"12345678\",\n        \"folder\": null,\n        \"folders\": [],\n        \"requests\": [],\n        \"createdAt\": \"2022-08-29T16:49:19.964Z\",\n        \"updatedAt\": \"2022-08-29T16:49:19.964Z\",\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"description\": \"This is a test collection folder.\",\n        \"folders_order\": [],\n        \"lastUpdatedBy\": \"12345678\"\n    },\n    \"meta\": {\n        \"model\": \"folder\",\n        \"action\": \"import\"\n    },\n    \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n    \"revision\": 24994132707\n}"},{"id":"f638fd30-c422-40d0-82dd-c281706ab55e","name":"Create a Child Folder","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"Child Folder\",\n    \"description\": \"This is a child folder of Test Folder.\",\n    \"folder\": \"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","folders"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 26 May 2022 09:23:31 GMT"},{"key":"Content-Type","value":"application/json","description":""},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"977887"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"398190"},{"key":"RateLimit-Remaining","value":"281"},{"key":"RateLimit-Reset","value":"30"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"281"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=c3cfeaccd09e6708"},{"key":"x-srv-span","value":"v=1;s=9c40f272d1a3ccd6"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"e47-qYjFBZxCW7Czr4jj8r5XlQ\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n    \"meta\": {\n        \"model\": \"folder\",\n        \"action\": \"import\"\n    },\n    \"data\": {\n        \"name\": \"Child Folder\",\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"description\": \"This is a child folder of Test Folder.\",\n        \"folder\": \"4249383d-2af6-4ac6-9a2b-0930e8f639e3\",\n        \"order\": [],\n        \"folders_order\": [],\n        \"id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"createdAt\": \"2023-08-16T13:47:47.474Z\",\n        \"updatedAt\": \"2023-08-16T13:47:47.474Z\",\n        \"requests\": [],\n        \"folders\": []\n    },\n    \"revision\": 32117045490\n}"},{"id":"808ed63c-ff11-4581-a05b-e753ae83c321","name":"Create a Folder with Requests and Responses","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"Test Folder\",\n    \"order\": [\n        \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"c0160fa6-c38a-4589-ba74-92dcf59fde03\"\n    ],\n    \"requests\": [\n        {\n            \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n            \"url\": \"https://postman-echo.com/v1/request\",\n            \"data\": [\n                {\n                    \"key\": \"id\",\n                    \"type\": \"text\",\n                    \"value\": \"3f14c9c7-e71c-4094-b90e-ac9edb232c2e\",\n                    \"enabled\": true\n                },\n                {\n                    \"key\": \"collection\",\n                    \"type\": \"text\",\n                    \"value\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                    \"enabled\": true\n                }\n            ],\n            \"name\": \"Example POST request\",\n            \"tests\": \"var data = JSON.parse(responseBody);\",\n            \"method\": \"POST\",\n            \"headers\": \"\",\n            \"dataMode\": \"params\",\n            \"responses\": [\n                {\n                    \"id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n                    \"mime\": \"abc\",\n                    \"name\": \"Success\",\n                    \"text\": \"[21,22,23,24]\",\n                    \"time\": 45,\n                    \"state\": \"{\\\"size\\\":\\\"normal\\\"}\",\n                    \"status\": \"xyz\",\n                    \"cookies\": [\n                        {\n                            \"name\": \"undefined\",\n                            \"path\": \"/\",\n                            \"value\": \"0\",\n                            \"domain\": \"localhost\",\n                            \"secure\": false,\n                            \"expires\": \"11/1/2023 18:57:34\",\n                            \"session\": false,\n                            \"storeId\": \"0\",\n                            \"hostOnly\": true,\n                            \"httpOnly\": false,\n                            \"expirationDate\": 1452535054\n                        },\n                        {\n                            \"name\": \"_ga\",\n                            \"path\": \"/\",\n                            \"value\": \"GA1.1.1111420724.142<br/>2561371\",\n                            \"domain\": \"localhost\",\n                            \"secure\": false,\n                            \"expires\": \"28/1/2023 20:56:10\",\n                            \"session\": false,\n                            \"storeId\": \"0\",\n                            \"hostOnly\": true,\n                            \"httpOnly\": false,\n                            \"expirationDate\": 1485633370\n                        }\n                    ],\n                    \"headers\": [\n                        {\n                            \"key\": \"Access-Control-Allow-Credentials\",\n                            \"name\": \"Access-Control-Allow-Credentials\",\n                            \"value\": \"\",\n                            \"description\": \"\"\n                        },\n                        {\n                            \"key\": \"Access-Control-Allow-Headers\",\n                            \"name\": \"Access-Control-Allow-Headers\",\n                            \"value\": \"\",\n                            \"description\": \"\"\n                        }\n                    ],\n                    \"language\": \"html\",\n                    \"previewType\": \"html\",\n                    \"rawDataType\": \"text\",\n                    \"responseCode\": {\n                        \"code\": 200,\n                        \"name\": \"OK\"\n                    },\n                    \"requestObject\": \"{\\\"name\\\": \\\"Postman Signup API\\\", \\\"description\\\":\\\"To sign up for Postman\\\"}\"\n                }\n            ],\n            \"description\": \"This is an example POST request.\",\n            \"preRequestScript\": \"\",\n            \"pathVariables\": {}\n        },\n        {\n            \"id\": \"c0160fa6-c38a-4589-ba74-92dcf59fde03\",\n            \"name\": \"Example GET request\",\n            \"description\": \"This is an example GET request.\",\n            \"headers\": \"\",\n            \"url\": \"https://postman-echo.com/v1/request\",\n            \"data\": [\n                {\n                    \"key\": \"id\",\n                    \"type\": \"text\",\n                    \"value\": \"3f14c9c7-e71c-4094-b90e-ac9edb232c2e\",\n                    \"enabled\": true\n                },\n                {\n                    \"key\": \"collection\",\n                    \"type\": \"text\",\n                    \"value\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                    \"enabled\": true\n                }\n            ],\n            \"tests\": \"var data = JSON.parse(responseBody);\",\n            \"method\": \"GET\",\n            \"dataMode\": \"params\",\n            \"pathVariables\": {},\n            \"preRequestScript\": \"\"\n        }\n    ],\n    \"description\": \"This is a test collection folder.\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","folders"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 26 May 2022 09:23:31 GMT"},{"key":"Content-Type","value":"application/json","description":""},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"977887"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"398190"},{"key":"RateLimit-Remaining","value":"281"},{"key":"RateLimit-Reset","value":"30"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"281"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=c3cfeaccd09e6708"},{"key":"x-srv-span","value":"v=1;s=9c40f272d1a3ccd6"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"e47-qYjFBZxCW7Czr4jj8r5XlQ\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"data\": {\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"order\": [\n            \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n            \"c0160fa6-c38a-4589-ba74-92dcf59fde03\"\n        ],\n        \"name\": \"Test Folder\",\n        \"description\": \"This is a test collection folder.\",\n        \"folder\": null,\n        \"folders_order\": [],\n        \"id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"createdAt\": \"2022-08-29T16:49:19.891Z\",\n        \"updatedAt\": \"2022-08-29T16:49:20.052Z\",\n        \"transactionId\": \"2039363d-2fe4-4c2f-9e06-347242d0e805\",\n        \"requests\": [\n            {\n                \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n                \"method\": \"POST\",\n                \"dataMode\": \"params\",\n                \"tests\": \"var data = JSON.parse(responseBody);\",\n                \"description\": \"This is an example POST request.\",\n                \"headers\": \"\",\n                \"preRequestScript\": null,\n                \"name\": \"Example POST request\",\n                \"pathVariables\": {},\n                \"url\": \"https://postman-echo.com/v1/request\",\n                \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"folder\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n                \"responses_order\": [\n                    \"cc364734-7dfd-4bfc-897d-be763dcdbb07\"\n                ],\n                \"owner\": \"12345678\",\n                \"lastUpdatedBy\": \"12345678\",\n                \"events\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"exec\": [\n                                \"var data = JSON.parse(responseBody);\"\n                            ],\n                            \"type\": \"text/javascript\"\n                        }\n                    }\n                ],\n                \"createdAt\": \"2022-08-29T16:49:19.961Z\",\n                \"updatedAt\": \"2022-08-29T16:49:19.961Z\",\n                \"data\": [\n                    {\n                        \"key\": \"id\",\n                        \"type\": \"text\",\n                        \"value\": \"3f14c9c7-e71c-4094-b90e-ac9edb232c2e\",\n                        \"enabled\": true\n                    },\n                    {\n                        \"key\": \"collection\",\n                        \"type\": \"text\",\n                        \"value\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                        \"enabled\": true\n                    }\n                ],\n                \"dataOptions\": {\n                    \"params\": null\n                },\n                \"responses\": [\n                    {\n                        \"id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n                        \"data\": [\n                            {\n                                \"key\": \"id\",\n                                \"type\": \"text\",\n                                \"value\": \"3f14c9c7-e71c-4094-b90e-ac9edb232c2e\",\n                                \"enabled\": true\n                            },\n                            {\n                                \"key\": \"collection\",\n                                \"type\": \"text\",\n                                \"value\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                                \"enabled\": true\n                            }\n                        ],\n                        \"mime\": \"abc\",\n                        \"name\": \"Success\",\n                        \"text\": \"[21,22,23,24]\",\n                        \"time\": \"45\",\n                        \"owner\": \"12345678\",\n                        \"status\": \"xyz\",\n                        \"cookies\": [\n                            {\n                                \"hostOnly\": true,\n                                \"httpOnly\": false,\n                                \"domain\": \"localhost\",\n                                \"storeId\": \"0\",\n                                \"secure\": false,\n                                \"name\": \"undefined\",\n                                \"path\": \"/\",\n                                \"session\": false,\n                                \"value\": \"0\",\n                                \"expires\": \"11/1/2023 18:57:34\",\n                                \"expirationDate\": 1452535054\n                            },\n                            {\n                                \"hostOnly\": true,\n                                \"httpOnly\": false,\n                                \"domain\": \"localhost\",\n                                \"storeId\": \"0\",\n                                \"secure\": false,\n                                \"name\": \"_ga\",\n                                \"path\": \"/\",\n                                \"session\": false,\n                                \"value\": \"GA1.1.1111420724.142<br/>2561371\",\n                                \"expires\": \"11/1/2023 18:57:34\",\n                                \"expirationDate\": 1485633370\n                            }\n                        ],\n                        \"headers\": [\n                            {\n                                \"name\": \"Access-Control-Allow-Credentials\",\n                                \"key\": \"Access-Control-Allow-Credentials\",\n                                \"value\": \"\",\n                                \"description\": \"\"\n                            },\n                            {\n                                \"name\": \"Access-Control-Allow-Headers\",\n                                \"key\": \"Access-Control-Allow-Headers\",\n                                \"value\": \"\",\n                                \"description\": \"\"\n                            }\n                        ],\n                        \"request\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n                        \"dataMode\": \"params\",\n                        \"language\": \"html\",\n                        \"createdAt\": \"2022-08-29T16:49:20.029Z\",\n                        \"updatedAt\": \"2022-08-29T16:49:20.029Z\",\n                        \"rawDataType\": \"text\",\n                        \"responseCode\": {\n                            \"code\": 200,\n                            \"name\": \"OK\"\n                        },\n                        \"lastUpdatedBy\": \"12345678\",\n                        \"requestObject\": \"{\\\"name\\\": \\\"Postman Signup API\\\", \\\"description\\\":\\\"To sign up for Postman\\\"}\"\n                    }\n                ]\n            },\n            {\n                \"id\": \"c0160fa6-c38a-4589-ba74-92dcf59fde03\",\n                \"url\": \"https://postman-echo.com/v1/request\",\n                \"data\": [\n                    {\n                        \"enabled\": true,\n                        \"key\": \"id\",\n                        \"value\": \"3f14c9c7-e71c-4094-b90e-ac9edb232c2e\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"enabled\": true,\n                        \"key\": \"collection\",\n                        \"value\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                        \"type\": \"text\"\n                    }\n                ],\n                \"name\": \"Example GET request\",\n                \"owner\": \"12345678\",\n                \"tests\": \"var data = JSON.parse(responseBody);\",\n                \"events\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"var data = JSON.parse(responseBody);\"\n                            ]\n                        }\n                    }\n                ],\n                \"folder\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n                \"method\": \"GET\",\n                \"headers\": \"\",\n                \"dataMode\": \"params\",\n                \"createdAt\": \"2022-08-29T16:49:19.964Z\",\n                \"responses\": [],\n                \"updatedAt\": \"2022-08-29T16:49:19.964Z\",\n                \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"dataOptions\": {\n                    \"params\": null\n                },\n                \"description\": \"This is an example GET request.\",\n                \"lastUpdatedBy\": \"12345678\",\n                \"pathVariables\": {},\n                \"responses_order\": [],\n                \"preRequestScript\": null\n            }\n        ],\n        \"folders\": []\n    },\n    \"meta\": {\n        \"model\": \"folder\",\n        \"action\": \"import\"\n    },\n    \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n    \"revision\": 26532147542\n}"},{"id":"9d042878-6341-424a-a0da-184639948515","name":"Bad Request","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"Test Folder\",\n    \"description\": \"This is a test collection folder.\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","folders"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:34:48 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"193"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"977025"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"987912"},{"key":"RateLimit-Remaining","value":"270"},{"key":"RateLimit-Reset","value":"12"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"270"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=c57243e6c37d6812"},{"key":"x-srv-span","value":"v=1;s=86743ce9ef99d1b8"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"c1-GeXq5XeA1IqXx0LQWIElag\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"X-Kong-Upstream-Latency","value":"47"},{"key":"X-Kong-Proxy-Latency","value":"65"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceFoundError\",\n        \"message\": \"This folder already exists in the database.\",\n        \"details\": {\n            \"model\": \"folder\",\n            \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"},{"id":"a0f3758d-793b-40a5-bb62-9aa0418a5f72","name":"Unauthorized","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"Test Folder\",\n    \"description\": \"This is a test collection folder.\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","folders"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:34:48 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"193"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"977025"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"987912"},{"key":"RateLimit-Remaining","value":"270"},{"key":"RateLimit-Reset","value":"12"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"270"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=c57243e6c37d6812"},{"key":"x-srv-span","value":"v=1;s=86743ce9ef99d1b8"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"c1-GeXq5XeA1IqXx0LQWIElag\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"X-Kong-Upstream-Latency","value":"47"},{"key":"X-Kong-Proxy-Latency","value":"65"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"Unauthorized\",\n        \"message\": \"Unauthorized\",\n        \"details\": {\n            \"model\": \"folder\",\n            \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"}]},{"name":"Update a folder","id":"1e3c819c-c317-40e0-94e6-c32d7ed7434c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"{{folderName}}\",\n    \"description\": \"{{folderDescription}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/{{collectionId}}/folders/{{folderId}}","protocol":"https","host":["api","getpostman","com"],"path":["collections","{{collectionId}}","folders","{{folderId}}"]},"description":"Updates a folder in a collection. For a complete list of properties, refer to \"Folder\" in the [collection.json schema file](https://schema.postman.com/collection/json/v2.1.0/draft-07/collection.json).\n\n**Note:**\n\nThis endpoint acts like a PATCH method. It only updates the values that you pass in the request body (for example, the `name` property). The endpoint does **not** update the entire resource."},"response":[{"id":"4dffd21f-d6e5-40ac-b19c-b33a1a6a5dab","name":"Successful Response","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"Test Folder\",\n    \"description\": \"This is a test folder.\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","folders","65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Wed, 18 May 2022 17:48:27 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"1059094"},{"key":"X-RateLimit-Remaining-Month","value":"980752"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"282"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"282"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"34"},{"key":"Vary","value":"Origin"},{"key":"Access-Control-Allow-Credentials","value":"true"},{"key":"X-DNS-Prefetch-Control","value":"off"},{"key":"X-Frame-Options","value":"DENY"},{"key":"Strict-Transport-Security","value":"max-age=15552000; includeSubDomains"},{"key":"X-Download-Options","value":"noopen"},{"key":"X-Content-Type-Options","value":"nosniff"},{"key":"Referrer-Policy","value":"same-origin"},{"key":"X-XSS-Protection","value":"1; mode=block"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"332"},{"key":"X-Kong-Proxy-Latency","value":"49"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"data\": {\n        \"id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n        \"auth\": null,\n        \"name\": \"Test Folder\",\n        \"order\": [],\n        \"owner\": \"12345678\",\n        \"events\": null,\n        \"folder\": null,\n        \"updatedAt\": \"2022-08-29T16:49:19.964Z\",\n        \"createdAt\": \"2022-08-29T16:49:19.964Z\",\n        \"variables\": null,\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"description\": \"This is a test folder.\",\n        \"lastRevision\": 24977100955,\n        \"folders_order\": [],\n        \"lastUpdatedBy\": \"12345678\"\n    },\n    \"meta\": {\n        \"model\": \"folder\",\n        \"action\": \"update\"\n    },\n    \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n    \"revision\": 24977103385\n}"},{"id":"e91eebda-1138-4190-a292-3d3c10488e5b","name":"Sort Requests in Folder","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"order\": [\n        \"66c7fe01-2c7e-4149-9de1-1143592f7bad\",\n        \"3def345e-b4b3-4319-8e2c-65d2630c0345\",\n        \"c089bf09-c679-4116-9654-9a561276634d\",\n        \"eb82f2b7-0478-4068-8e8a-c277e25ba0d3\"\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","folders","65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Wed, 18 May 2022 17:48:27 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"1059094"},{"key":"X-RateLimit-Remaining-Month","value":"980752"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"282"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"282"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"34"},{"key":"Vary","value":"Origin"},{"key":"Access-Control-Allow-Credentials","value":"true"},{"key":"X-DNS-Prefetch-Control","value":"off"},{"key":"X-Frame-Options","value":"DENY"},{"key":"Strict-Transport-Security","value":"max-age=15552000; includeSubDomains"},{"key":"X-Download-Options","value":"noopen"},{"key":"X-Content-Type-Options","value":"nosniff"},{"key":"Referrer-Policy","value":"same-origin"},{"key":"X-XSS-Protection","value":"1; mode=block"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"332"},{"key":"X-Kong-Proxy-Latency","value":"49"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"data\": {\n        \"order\": [\n            \"66c7fe01-2c7e-4149-9de1-1143592f7bad\",\n            \"3def345e-b4b3-4319-8e2c-65d2630c0345\",\n            \"c089bf09-c679-4116-9654-9a561276634d\",\n            \"eb82f2b7-0478-4068-8e8a-c277e25ba0d3\"\n        ],\n        \"id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n        \"auth\": null,\n        \"name\": \"Test Folder\",        \n        \"owner\": \"12345678\",\n        \"events\": null,\n        \"folder\": null,\n        \"updatedAt\": \"2022-08-29T16:49:19.964Z\",\n        \"createdAt\": \"2022-08-29T16:49:19.964Z\",\n        \"variables\": null,\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"description\": \"This is a test folder.\",\n        \"lastRevision\": 24977100955,\n        \"folders_order\": [],\n        \"lastUpdatedBy\": \"12345678\"\n    },\n    \"meta\": {\n        \"model\": \"folder\",\n        \"action\": \"update\"\n    },\n    \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n    \"revision\": 24977103385\n}"},{"id":"4c135cce-931f-4892-9f73-0d6a9e4ced03","name":"Sort Folders in Folder","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"folders_order\": [\n        \"b73b4c0c-881b-47e6-8887-6dabab1fd2d1\",\n        \"abcc80b2-8a1c-45e5-ab1b-becc385b4dbd\"\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","folders","65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Wed, 18 May 2022 17:48:27 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"1059094"},{"key":"X-RateLimit-Remaining-Month","value":"980752"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"282"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"282"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"34"},{"key":"Vary","value":"Origin"},{"key":"Access-Control-Allow-Credentials","value":"true"},{"key":"X-DNS-Prefetch-Control","value":"off"},{"key":"X-Frame-Options","value":"DENY"},{"key":"Strict-Transport-Security","value":"max-age=15552000; includeSubDomains"},{"key":"X-Download-Options","value":"noopen"},{"key":"X-Content-Type-Options","value":"nosniff"},{"key":"Referrer-Policy","value":"same-origin"},{"key":"X-XSS-Protection","value":"1; mode=block"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"332"},{"key":"X-Kong-Proxy-Latency","value":"49"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"data\": {\n        \"folders_order\": [\n            \"b73b4c0c-881b-47e6-8887-6dabab1fd2d1\",\n            \"abcc80b2-8a1c-45e5-ab1b-becc385b4dbd\"\n        ],\n        \"id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n        \"auth\": null,\n        \"name\": \"Test Folder\",\n        \"order\": [],\n        \"owner\": \"12345678\",\n        \"events\": null,\n        \"folder\": null,\n        \"updatedAt\": \"2022-08-29T16:49:19.964Z\",\n        \"createdAt\": \"2022-08-29T16:49:19.964Z\",\n        \"variables\": null,\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"description\": \"This is a test folder.\",\n        \"lastRevision\": 24977100955,\n        \"lastUpdatedBy\": \"12345678\"\n    },\n    \"meta\": {\n        \"model\": \"folder\",\n        \"action\": \"update\"\n    },\n    \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n    \"revision\": 24977103385\n}"},{"id":"964f4db5-1142-4496-91b6-9cf7f64da69f","name":"Not Found","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"Test Folder\",\n    \"description\": \"This is a test folder.\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","folders","65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Wed, 18 May 2022 17:52:54 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"1058826"},{"key":"X-RateLimit-Remaining-Month","value":"980745"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"265"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"265"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"6"},{"key":"Vary","value":"Origin"},{"key":"Access-Control-Allow-Credentials","value":"true"},{"key":"X-DNS-Prefetch-Control","value":"off"},{"key":"X-Frame-Options","value":"DENY"},{"key":"Strict-Transport-Security","value":"max-age=15552000; includeSubDomains"},{"key":"X-Download-Options","value":"noopen"},{"key":"X-Content-Type-Options","value":"nosniff"},{"key":"Referrer-Policy","value":"same-origin"},{"key":"X-XSS-Protection","value":"1; mode=block"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"87"},{"key":"X-Kong-Proxy-Latency","value":"139"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the folder you are looking for\",\n        \"details\": {\n            \"model\": \"folder\",\n            \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"},{"id":"88cf4189-1851-4713-ae55-6e1c671476e6","name":"Change Parent Error","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"Test Folder\",\n    \"description\": \"This is a test folder.\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","folders","65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:28:35 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"287"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"977035"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"988285"},{"key":"RateLimit-Remaining","value":"275"},{"key":"RateLimit-Reset","value":"25"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"275"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=f7ca71a7c5f59306"},{"key":"x-srv-span","value":"v=1;s=8c9a21c1cd288314"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"11f-5s4LZRbXNeX+zx9FhS3ytg\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"X-Kong-Upstream-Latency","value":"70"},{"key":"X-Kong-Proxy-Latency","value":"284"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"changeParentError\",\n        \"message\": \"You can't update the parent. Use transfer instead.\",\n        \"details\": {\n            \"server\": {\n                \"model\": \"collection\",\n                \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\"\n            },\n            \"request\": {\n                \"model\": \"collection\",\n                \"model_id\": \"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\"\n            }\n        }\n    }\n}"},{"id":"d61ce723-2813-482a-be20-68cdc0194379","name":"Order Update Error","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"order\": [\n        \"12345678-66c7fe01-2c7e-4149-9de1-1143592f7bad\",\n        \"12345678-3def345e-b4b3-4319-8e2c-65d2630c0345\",\n        \"12345678-c089bf09-c679-4116-9654-9a561276634d\",\n        \"12345678-eb82f2b7-0478-4068-8e8a-c277e25ba0d3\"\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","folders","65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:28:35 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"287"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"977035"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"988285"},{"key":"RateLimit-Remaining","value":"275"},{"key":"RateLimit-Reset","value":"25"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"275"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=f7ca71a7c5f59306"},{"key":"x-srv-span","value":"v=1;s=8c9a21c1cd288314"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"11f-5s4LZRbXNeX+zx9FhS3ytg\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"X-Kong-Upstream-Latency","value":"70"},{"key":"X-Kong-Proxy-Latency","value":"284"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"orderUpdateError\",\n        \"message\": \"You can only reorder the requests.\",\n        \"details\": {\n            \"order\": [\n                \"66c7fe01-2c7e-4149-9de1-1143592f7bad\",\n                \"3def345e-b4b3-4319-8e2c-65d2630c0345\",\n                \"c089bf09-c679-4116-9654-9a561276634d\",\n                \"eb82f2b7-0478-4068-8e8a-c277e25ba0d3\"\n            ]\n        }\n    }\n}"},{"id":"791f2594-890d-4f42-ad88-6e97f155bfc0","name":"Unauthorized","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"Test Folder\",\n    \"description\": \"This is a test folder.\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","folders","65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:28:35 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"287"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"977035"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"988285"},{"key":"RateLimit-Remaining","value":"275"},{"key":"RateLimit-Reset","value":"25"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"275"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=f7ca71a7c5f59306"},{"key":"x-srv-span","value":"v=1;s=8c9a21c1cd288314"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"11f-5s4LZRbXNeX+zx9FhS3ytg\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"X-Kong-Upstream-Latency","value":"70"},{"key":"X-Kong-Proxy-Latency","value":"284"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"Unauthorized\",\n        \"message\": \"Unauthorized\",\n        \"details\": {\n            \"model\": \"folder\",\n            \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"}]},{"name":"Delete a folder","id":"25652652-2166-491b-bf4a-6af33e1bae22","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/collections/{{collectionId}}/folders/{{folderId}}","protocol":"https","host":["api","getpostman","com"],"path":["collections","{{collectionId}}","folders","{{folderId}}"]},"description":"Deletes a folder in a collection."},"response":[{"id":"57e999d8-da69-48ad-803c-573824c28efb","name":"Successful Response","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","folders","65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:35:44 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"987856"},{"key":"X-RateLimit-Remaining-Month","value":"977019"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"272"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"272"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"16"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=102d9b8d042c09b7"},{"key":"x-srv-span","value":"v=1;s=96be4607ab8bb1c1"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"ac-2OmLHoyozzUBNczBP5llVw\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"418"},{"key":"X-Kong-Proxy-Latency","value":"146"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n    \"meta\": {\n        \"model\": \"folder\",\n        \"action\": \"destroy\"\n    },\n    \"data\": {\n        \"id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n        \"owner\": \"12345678\"\n    },\n    \"revision\": 24994562696\n}"},{"id":"a554d219-c347-48e4-987c-e1fa9c6cb43f","name":"Not Found","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","folders","65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:36:05 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"977018"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"987835"},{"key":"RateLimit-Remaining","value":"296"},{"key":"RateLimit-Reset","value":"55"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"296"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=fa9930632a963cd7"},{"key":"x-srv-span","value":"v=1;s=0321b34a675c30c4"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"c9-7hd0I9XFjJqgHyoxDKS/eg\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"28"},{"key":"X-Kong-Proxy-Latency","value":"97"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the folder you are looking for\",\n        \"details\": {\n            \"model\": \"folder\",\n            \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"},{"id":"c03f54ba-803a-458b-bd31-aad85c0761cb","name":"Unauthorized","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","folders","65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:36:05 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"977018"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"987835"},{"key":"RateLimit-Remaining","value":"296"},{"key":"RateLimit-Reset","value":"55"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"296"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=fa9930632a963cd7"},{"key":"x-srv-span","value":"v=1;s=0321b34a675c30c4"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"c9-7hd0I9XFjJqgHyoxDKS/eg\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"28"},{"key":"X-Kong-Proxy-Latency","value":"97"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"Unauthorized\",\n        \"message\": \"Unauthorized\",\n        \"details\": {\n            \"model\": \"folder\",\n            \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"}]}],"id":"37036df6-697d-4bcc-8ec1-a26ad0e348ef","description":"These endpoints let you manage collection folders."},{"name":"Requests","item":[{"name":"Get a request","id":"7acbda40-455e-4cd1-9608-e36d2ef426ae","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/{{collectionId}}/requests/{{requestId}}","protocol":"https","host":["api","getpostman","com"],"path":["collections","{{collectionId}}","requests","{{requestId}}"],"query":[{"key":"ids","value":"{{boolean}}","description":"If true, returns only the request properties that contain ID values.","disabled":true},{"key":"uid","value":"{{boolean}}","description":"If true, returns all IDs in UID format (`userId`-`id`).","disabled":true},{"key":"populate","value":"{{boolean}}","description":"If true, returns all of a request's contents.","disabled":true}]},"description":"Gets information about a request in a collection."},"response":[{"id":"70d377f4-cf46-4585-bbbc-a6127f487076","name":"GET Request","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","requests","e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:47:58 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"976978"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"987123"},{"key":"RateLimit-Remaining","value":"262"},{"key":"RateLimit-Reset","value":"3"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"262"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=6291beb729799ff7"},{"key":"x-srv-span","value":"v=1;s=3a17bde7c1ab287c"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"49d-PaaOpgnq6QlpwY1iuH0MiQ\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"98"},{"key":"X-Kong-Proxy-Latency","value":"241"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"populate\": false,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 32206434799,\n        \"folder\": null,\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"name\": \"Example GET Request\",\n        \"dataMode\": null,\n        \"data\": null,\n        \"auth\": null,\n        \"events\": null,\n        \"rawModeData\": null,\n        \"descriptionFormat\": null,\n        \"description\": \"This is an example GET request.\",\n        \"variables\": null,\n        \"headers\": null,\n        \"method\": \"GET\",\n        \"pathVariables\": {},\n        \"url\": \"https://postman-echo.com/get\",\n        \"preRequestScript\": null,\n        \"tests\": \"var data = JSON.parse(responseBody);\",\n        \"currentHelper\": null,\n        \"helperAttributes\": null,\n        \"queryParams\": [\n            {\n                \"key\": \"id\",\n                \"value\": \"{{id}}\",\n                \"equals\": true,\n                \"description\": \"Optional. The user's ID.\",\n                \"enabled\": true\n            }\n        ],\n        \"headerData\": [],\n        \"pathVariableData\": [],\n        \"protocolProfileBehavior\": {\n            \"disableBodyPruning\": true\n        },\n        \"dataDisabled\": false,\n        \"responses_order\": [],\n        \"createdAt\": \"2023-08-22T12:52:01.000Z\",\n        \"updatedAt\": \"2023-08-22T12:52:11.000Z\"\n    }\n}"},{"id":"54ac3b8f-e7c5-404d-8d5a-90b21b675199","name":"POST Request","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","requests","e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"populate\": false,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 24994863800,\n        \"folder\": null,\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"name\": \"Example POST request\",\n        \"dataMode\": \"raw\",\n        \"data\": null,\n        \"auth\": null,\n        \"events\": null,\n        \"rawModeData\": \"{\\n    \\\"field\\\": \\\"Value\\\"\\n}\",\n        \"descriptionFormat\": null,\n        \"description\": null,\n        \"variables\": null,\n        \"headers\": \"\",\n        \"method\": \"POST\",\n        \"pathVariables\": {},\n        \"url\": \"https://postman-echo.com/post\",\n        \"preRequestScript\": null,\n        \"tests\": null,\n        \"currentHelper\": null,\n        \"helperAttributes\": null,\n        \"queryParams\": [],\n        \"headerData\": [],\n        \"pathVariableData\": [],\n        \"protocolProfileBehavior\": {\n            \"disableBodyPruning\": true\n        },\n        \"dataDisabled\": false,\n        \"responses_order\": [\n            \"cc364734-7dfd-4bfc-897d-be763dcdbb07\"\n        ],\n        \"createdAt\": \"2023-09-01T07:29:17.000Z\",\n        \"updatedAt\": \"2023-09-01T07:36:30.000Z\",\n        \"dataOptions\": {\n            \"raw\": {\n                \"language\": \"json\"\n            }\n        }\n    }\n}"},{"id":"f892a278-3556-4bc7-b28a-3e93f73106f3","name":"Request with Inherit Parent Auth","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","requests","e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:47:58 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"976978"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"987123"},{"key":"RateLimit-Remaining","value":"262"},{"key":"RateLimit-Reset","value":"3"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"262"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=6291beb729799ff7"},{"key":"x-srv-span","value":"v=1;s=3a17bde7c1ab287c"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"49d-PaaOpgnq6QlpwY1iuH0MiQ\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"98"},{"key":"X-Kong-Proxy-Latency","value":"241"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"populate\": false,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 24994863800,\n        \"folder\": null,\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"name\": \"Example POST request\",\n        \"dataMode\": \"params\",\n        \"data\": [\n            {\n                \"enabled\": true,\n                \"value\": \"3f14c9c7-e71c-4094-b90e-ac9edb232c2e\",\n                \"type\": \"text\",\n                \"key\": \"id\"\n            },\n            {\n                \"enabled\": true,\n                \"value\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"type\": \"text\",\n                \"key\": \"collection\"\n            }\n        ],\n        \"auth\": {\n            \"type\": \"bearer\",\n            \"bearer\": [\n                {\n                    \"key\": \"token\",\n                    \"value\": \"xxx\",\n                    \"type\": \"string\"\n                }\n            ]\n        },\n        \"events\": [\n            {\n                \"listen\": \"test\",\n                \"script\": {\n                    \"type\": \"text/javascript\",\n                    \"exec\": [\n                        \"var data = JSON.parse(responseBody);\"\n                    ]\n                }\n            }\n        ],\n        \"rawModeData\": null,\n        \"descriptionFormat\": null,\n        \"description\": \"This is an example POST request.\",\n        \"variables\": null,\n        \"headers\": \"\",\n        \"method\": \"POST\",\n        \"pathVariables\": {},\n        \"url\": \"https://api.getpostman.com/v1/request\",\n        \"preRequestScript\": null,\n        \"tests\": \"var data = JSON.parse(responseBody);\",\n        \"currentHelper\": \"bearerAuth\",\n        \"helperAttributes\": \"{\\\"id\\\":\\\"bearer\\\",\\\"token\\\":\\\"xxx\\\"}\",\n        \"queryParams\": [],\n        \"headerData\": [],\n        \"pathVariableData\": [],\n        \"protocolProfileBehavior\": null,\n        \"dataDisabled\": null,\n        \"responses_order\": [],\n        \"createdAt\": \"2022-08-29T16:49:19.964Z\",\n        \"updatedAt\": \"2022-08-29T16:49:19.964Z\",\n        \"dataOptions\": {\n            \"params\": null\n        }\n    }\n}"},{"id":"2de1b96e-b8d4-4063-b02b-427c909076e4","name":"Response with populate Parameter","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958?populate=true","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","requests","e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"],"query":[{"key":"populate","value":"true"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:47:58 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"976978"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"987123"},{"key":"RateLimit-Remaining","value":"262"},{"key":"RateLimit-Reset","value":"3"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"262"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=6291beb729799ff7"},{"key":"x-srv-span","value":"v=1;s=3a17bde7c1ab287c"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"49d-PaaOpgnq6QlpwY1iuH0MiQ\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"98"},{"key":"X-Kong-Proxy-Latency","value":"241"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"fb620884-9745-4244-b875-6c33a8acc771\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"populate\": true,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"20891195\",\n        \"lastUpdatedBy\": \"20891195\",\n        \"lastRevision\": 32545561759,\n        \"folder\": \"adb40f20-deec-4cc6-b1a2-a5591f469c60\",\n        \"collection\": \"b75dfb85-9209-4212-8f3d-a9d5e28167e5\",\n        \"id\": \"fb620884-9745-4244-b875-6c33a8acc771\",\n        \"name\": \"Test A\",\n        \"dataMode\": \"raw\",\n        \"data\": null,\n        \"auth\": {\n            \"type\": \"bearer\",\n            \"bearer\": [\n                {\n                    \"key\": \"token\",\n                    \"value\": \"TEST\",\n                    \"type\": \"string\"\n                }\n            ]\n        },\n        \"events\": [\n            {\n                \"listen\": \"test\",\n                \"script\": {\n                    \"id\": \"b12101c5-fe85-4722-adf0-a1e900eab708\",\n                    \"exec\": [\n                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                        \"    pm.response.to.have.status(200);\",\n                        \"});\"\n                    ],\n                    \"type\": \"text/javascript\"\n                }\n            },\n            {\n                \"listen\": \"prerequest\",\n                \"script\": {\n                    \"id\": \"7b34bf6b-f440-4768-a486-4ce96e997cb7\",\n                    \"exec\": [\n                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                        \"    console.log(response.json());\",\n                        \"});\"\n                    ],\n                    \"type\": \"text/javascript\"\n                }\n            }\n        ],\n        \"rawModeData\": \"\",\n        \"descriptionFormat\": \"markdown\",\n        \"description\": \"This is a test API.\",\n        \"variables\": null,\n        \"headers\": \"Accept: application/vnd.example.v1+json\\n\",\n        \"method\": \"GET\",\n        \"pathVariables\": {},\n        \"url\": \"https://postman-echo.com/v1/request?id={{id}}\",\n        \"preRequestScript\": \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\\n    console.log(response.json());\\n});\",\n        \"tests\": \"pm.test(\\\"Status code is 200\\\", function () {\\n    pm.response.to.have.status(200);\\n});\",\n        \"currentHelper\": \"bearerAuth\",\n        \"helperAttributes\": \"{\\\"id\\\":\\\"bearer\\\",\\\"token\\\":\\\"TEST\\\"}\",\n        \"queryParams\": [\n            {\n                \"key\": \"id\",\n                \"value\": \"{{id}}\",\n                \"equals\": true,\n                \"description\": \"The API's ID.\",\n                \"enabled\": true\n            }\n        ],\n        \"headerData\": [\n            {\n                \"key\": \"Accept\",\n                \"value\": \"application/vnd.example.v1+json\",\n                \"description\": null,\n                \"type\": \"text\",\n                \"enabled\": true\n            }\n        ],\n        \"pathVariableData\": [],\n        \"protocolProfileBehavior\": {\n            \"disableBodyPruning\": true\n        },\n        \"dataDisabled\": false,\n        \"responses_order\": [\n            \"ee4ab273-1f36-f8de-adfc-02ad1cd126dc\"\n        ],\n        \"createdAt\": \"2022-10-05T13:09:24.000Z\",\n        \"updatedAt\": \"2023-09-13T14:04:37.000Z\",\n        \"dataOptions\": {\n            \"raw\": {\n                \"language\": \"json\"\n            }\n        },\n        \"responses\": [\n            {\n                \"owner\": \"12345678\",\n                \"lastUpdatedBy\": \"12345678\",\n                \"lastRevision\": 32545561807,\n                \"request\": \"fb620884-9745-4244-b875-6c33a8acc771\",\n                \"id\": \"ee4ab273-1f36-f8de-adfc-02ad1cd126dc\",\n                \"name\": \"Successful Response\",\n                \"status\": null,\n                \"responseCode\": {\n                    \"code\": 200,\n                    \"name\": \"OK\"\n                },\n                \"time\": null,\n                \"headers\": [\n                    {\n                        \"key\": \"date\",\n                        \"value\": \"Thu, 07 Sep 2023 12:41:59 GMT\"\n                    },\n                    {\n                        \"key\": \"content-type\",\n                        \"value\": \"application/json; charset=utf-8\"\n                    },\n                    {\n                        \"key\": \"content-length\",\n                        \"value\": \"468\"\n                    },\n                    {\n                        \"key\": \"etag\",\n                        \"value\": \"W/\\\"1d4-JuAIw8ssoFCtGzk/UwITxaiSbrc\\\"\"\n                    },\n                    {\n                        \"key\": \"set-cookie\",\n                        \"value\": \"sails.sid=s%3A6p_NXpI3OZeGE35bI6i5Uq3XgHHxcsdJ.dQVpBE%2BJ9wHWainkqe6F6dkdv7UKoshSZY7sdZ5sbzo; Path=/ HttpOnly\"\n                    }\n                ],\n                \"cookies\": null,\n                \"mime\": null,\n                \"text\": \"{\\n  \\\"args\\\": {},\\n  \\\"data\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"files\\\": {},\\n  \\\"form\\\": {},\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9c517-36db304817c774d740619baa\\\",\\n    \\\"content-length\\\": \\\"22\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"json\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\\n\",\n                \"language\": \"json\",\n                \"rawDataType\": null,\n                \"requestObject\": \"{\\n  \\\"name\\\": \\\"Request\\\",\\n  \\\"description\\\": \\\"\\\",\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\",\\n  \\\"method\\\": \\\"POST\\\",\\n  \\\"headers\\\": [\\n    {\\n      \\\"key\\\": \\\"Host\\\",\\n      \\\"value\\\": \\\"postman-echo.com\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"user-agent\\\",\\n      \\\"value\\\": \\\"curl/7.88.1\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"accept\\\",\\n      \\\"value\\\": \\\"*/*\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"content-type\\\",\\n      \\\"value\\\": \\\"application/json\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"content-length\\\",\\n      \\\"value\\\": \\\"22\\\"\\n    }\\n  ],\\n  \\\"dataMode\\\": \\\"raw\\\",\\n  \\\"rawModeData\\\": \\\"{\\\\n  \\\\\\\"field\\\\\\\": \\\\\\\"Value\\\\\\\"\\\\n}\\\",\\n  \\\"dataOptions\\\": {\\n    \\\"raw\\\": {\\n      \\\"language\\\": \\\"json\\\"\\n    }\\n  }\\n}\",\n                \"createdAt\": \"2023-09-12T18:34:27.000Z\",\n                \"updatedAt\": \"2023-09-13T14:04:37.000Z\"\n            }\n        ]\n    }\n}"},{"id":"ffd4bd34-e509-478a-962f-c91aada2499b","name":"Response with ids Parameter","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958?ids=true","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","requests","e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"],"query":[{"key":"ids","value":"true"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:47:58 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"976978"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"987123"},{"key":"RateLimit-Remaining","value":"262"},{"key":"RateLimit-Reset","value":"3"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"262"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=6291beb729799ff7"},{"key":"x-srv-span","value":"v=1;s=3a17bde7c1ab287c"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"49d-PaaOpgnq6QlpwY1iuH0MiQ\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"98"},{"key":"X-Kong-Proxy-Latency","value":"241"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"populate\": false,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"folder\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"responses_order\": [\n            \"773e5707-4a56-45de-b31d-c68a6f74d1c6\",\n            \"3ce18318-9d74-4805-956e-7fda0b830bea\"\n        ]\n    }\n}"},{"id":"b19deada-ad31-4c7a-bb0b-c0308864fab8","name":"Response with uid Parameter","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958?uid=true","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","requests","e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"],"query":[{"key":"uid","value":"true"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:47:58 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"976978"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"987123"},{"key":"RateLimit-Remaining","value":"262"},{"key":"RateLimit-Reset","value":"3"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"262"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=6291beb729799ff7"},{"key":"x-srv-span","value":"v=1;s=3a17bde7c1ab287c"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"49d-PaaOpgnq6QlpwY1iuH0MiQ\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"98"},{"key":"X-Kong-Proxy-Latency","value":"241"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"populate\": false,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 32206434799,\n        \"folder\": null,\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"id\": \"12345678-c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"name\": \"Example GET Request\",\n        \"dataMode\": null,\n        \"data\": null,\n        \"auth\": null,\n        \"events\": null,\n        \"rawModeData\": null,\n        \"descriptionFormat\": null,\n        \"description\": \"This is an example GET request.\",\n        \"variables\": null,\n        \"headers\": null,\n        \"method\": \"GET\",\n        \"pathVariables\": {},\n        \"url\": \"https://postman-echo.com/get\",\n        \"preRequestScript\": null,\n        \"tests\": \"var data = JSON.parse(responseBody);\",\n        \"currentHelper\": null,\n        \"helperAttributes\": null,\n        \"queryParams\": [\n            {\n                \"key\": \"id\",\n                \"value\": \"{{id}}\",\n                \"equals\": true,\n                \"description\": \"Optional. The user's ID.\",\n                \"enabled\": true\n            }\n        ],\n        \"headerData\": [],\n        \"pathVariableData\": [],\n        \"protocolProfileBehavior\": {\n            \"disableBodyPruning\": true\n        },\n        \"dataDisabled\": false,\n        \"responses_order\": [],\n        \"createdAt\": \"2023-08-22T12:52:01.000Z\",\n        \"updatedAt\": \"2023-08-22T12:52:11.000Z\"\n    }\n}"},{"id":"1c87f0c5-536e-427d-ad07-a4b93d667943","name":"Not Found","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","requests","e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:47:58 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"976978"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"987123"},{"key":"RateLimit-Remaining","value":"262"},{"key":"RateLimit-Reset","value":"3"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"262"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=6291beb729799ff7"},{"key":"x-srv-span","value":"v=1;s=3a17bde7c1ab287c"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"49d-PaaOpgnq6QlpwY1iuH0MiQ\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"98"},{"key":"X-Kong-Proxy-Latency","value":"241"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceFoundError\",\n        \"message\": \"We could not find the request you are looking for\",\n        \"details\": {\n            \"model\": \"request\",\n            \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"},{"id":"9138144d-12f4-4b40-b263-c4332b99fea4","name":"Unauthorized","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","requests","e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:47:58 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"976978"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"987123"},{"key":"RateLimit-Remaining","value":"262"},{"key":"RateLimit-Reset","value":"3"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"262"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=6291beb729799ff7"},{"key":"x-srv-span","value":"v=1;s=3a17bde7c1ab287c"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"49d-PaaOpgnq6QlpwY1iuH0MiQ\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"98"},{"key":"X-Kong-Proxy-Latency","value":"241"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"Unauthorized\",\n        \"message\": \"Unauthorized\",\n        \"details\": {\n            \"model\": \"request\",\n            \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"}]},{"name":"Create a request","id":"0cc2ca94-4dbc-4c38-a06a-993e239b00f4","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"{{requestName}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/{{collectionId}}/requests","protocol":"https","host":["api","getpostman","com"],"path":["collections","{{collectionId}}","requests"],"query":[{"key":"folder","value":"{{folderId}}","description":"The folder ID in which to create the request.\n\nBy default, the system will create the request at the collection level.","disabled":true}]},"description":"Creates a request in a collection. For a complete list of properties, see the [Collection Format Request documentation](https://learning.postman.com/collection-format/reference/request/).\n\n**Note:**\n\nIt is recommended that you pass the `name` property in the request body. If you do not, the system uses a null value. As a result, this creates a request with a blank name."},"response":[{"id":"789b55bb-dbdb-47ce-a43b-9106180a4ef2","name":"GET Request","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"Example GET Request\",\n    \"description\": \"This is an example GET request.\",\n    \"url\": \"https://postman-echo.com/get?param=value\",\n    \"method\": \"GET\",\n    \"headers\": [\n        {\n            \"key\": \"Host\",\n            \"value\": \"postman-echo.com\"\n        },\n        {\n            \"key\": \"user-agent\",\n            \"value\": \"curl/7.88.1\"\n        },\n        {\n            \"key\": \"accept\",\n            \"value\": \"*/*\"\n        },\n        {\n            \"key\": \"content-type\",\n            \"value\": \"application/json\"\n        }\n    ],\n    \"queryParams\": [\n        {\n            \"key\": \"id\",\n            \"value\": \"{{id}}\",\n            \"equals\": true,\n            \"description\": \"Optional. The user's ID.\",\n            \"enabled\": true\n        }\n    ],\n    \"dataMode\": \"raw\",\n    \"rawModeData\": null,\n    \"dataOptions\": {\n        \"raw\": {\n            \"language\": \"json\"\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","requests"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:43:00 GMT"},{"key":"Content-Type","value":"application/json","description":""},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"976990"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"987421"},{"key":"RateLimit-Remaining","value":"260"},{"key":"RateLimit-Reset","value":"1"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"260"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=2f9f2f3a2c905423"},{"key":"x-srv-span","value":"v=1;s=5d8ae748e9cf71c7"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"3a7-z+hWMiyS26oLfi34cwirGw\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"491"},{"key":"X-Kong-Proxy-Latency","value":"74"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"action\": \"import\"\n    },\n    \"data\": {\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"method\": \"GET\",\n        \"headers\": [\n            {\n                \"key\": \"Host\",\n                \"value\": \"postman-echo.com\"\n            },\n            {\n                \"key\": \"user-agent\",\n                \"value\": \"curl/7.88.1\"\n            },\n            {\n                \"key\": \"accept\",\n                \"value\": \"*/*\"\n            },\n            {\n                \"key\": \"content-type\",\n                \"value\": \"application/json\"\n            }\n        ],\n        \"dataMode\": \"raw\",\n        \"url\": \"https://postman-echo.com/get?param=value\",\n        \"name\": \"Example GET Request\",\n        \"description\": \"This is an example GET request.\",\n        \"owner\": \"12345678\",\n        \"folder\": null,\n        \"responses_order\": [],\n        \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"queryParams\": [\n            {\n                \"key\": \"id\",\n                \"value\": \"{{id}}\",\n                \"equals\": true,\n                \"description\": \"Optional. The user's ID.\",\n                \"enabled\": true\n            }\n        ],\n        \"headerData\": [],\n        \"createdAt\": \"2023-09-07T13:33:17.912Z\",\n        \"updatedAt\": \"2023-09-07T13:33:17.912Z\",\n        \"rawModeData\": null,\n        \"dataOptions\": {\n            \"raw\": {\n                \"language\": \"json\"\n            }\n        },\n        \"responses\": []\n    },\n    \"revision\": 32456338071\n}"},{"id":"542c250f-71a3-4d51-945c-3afb27a8a592","name":"POST Request","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"Example POST Request\",\n    \"url\": \"https://postman-echo.com/post\",\n    \"method\": \"POST\",\n    \"headers\": [\n        {\n            \"key\": \"Host\",\n            \"value\": \"postman-echo.com\"\n        },\n        {\n            \"key\": \"user-agent\",\n            \"value\": \"curl/7.88.1\"\n        },\n        {\n            \"key\": \"accept\",\n            \"value\": \"*/*\"\n        },\n        {\n            \"key\": \"content-type\",\n            \"value\": \"application/json\"\n        },\n        {\n            \"key\": \"content-length\",\n            \"value\": \"22\"\n        }\n    ],\n    \"dataMode\": \"raw\",\n    \"rawModeData\": \"{\\n  \\\"field\\\": \\\"Value\\\"\\n}\",\n    \"dataOptions\": {\n        \"raw\": {\n            \"language\": \"json\"\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","requests"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"action\": \"import\"\n    },\n    \"data\": {\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"method\": \"POST\",\n        \"headers\": [\n            {\n                \"key\": \"Host\",\n                \"value\": \"postman-echo.com\"\n            },\n            {\n                \"key\": \"user-agent\",\n                \"value\": \"curl/7.88.1\"\n            },\n            {\n                \"key\": \"accept\",\n                \"value\": \"*/*\"\n            },\n            {\n                \"key\": \"content-type\",\n                \"value\": \"application/json\"\n            },\n            {\n                \"key\": \"content-length\",\n                \"value\": \"22\"\n            }\n        ],\n        \"dataMode\": \"raw\",\n        \"url\": \"https://postman-echo.com/post\",\n        \"name\": \"Example POST Request\",\n        \"owner\": \"12345678\",\n        \"folder\": null,\n        \"responses_order\": [],\n        \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"headerData\": [],\n        \"createdAt\": \"2023-09-07T13:35:33.691Z\",\n        \"updatedAt\": \"2023-09-07T13:35:33.691Z\",\n        \"rawModeData\": null,\n        \"dataOptions\": {\n            \"raw\": {\n                \"language\": \"json\"\n            }\n        },\n        \"responses\": []\n    },\n    \"revision\": 32456382272\n}"},{"id":"ba3cb113-fbe2-4b7b-8694-b91ff10054df","name":"Request in a Folder","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"Example GET Request\",\n    \"description\": \"This is an example GET request.\",\n    \"url\": \"https://postman-echo.com/get?param=value\",\n    \"method\": \"GET\",\n    \"headers\": [\n        {\n            \"key\": \"Host\",\n            \"value\": \"postman-echo.com\"\n        },\n        {\n            \"key\": \"user-agent\",\n            \"value\": \"curl/7.88.1\"\n        },\n        {\n            \"key\": \"accept\",\n            \"value\": \"*/*\"\n        },\n        {\n            \"key\": \"content-type\",\n            \"value\": \"application/json\"\n        }\n    ],\n    \"queryParams\": [\n        {\n            \"key\": \"id\",\n            \"value\": \"{{id}}\",\n            \"equals\": true,\n            \"description\": \"Optional. The user's ID.\",\n            \"enabled\": true\n        }\n    ],\n    \"dataMode\": \"raw\",\n    \"rawModeData\": null,\n    \"dataOptions\": {\n        \"raw\": {\n            \"language\": \"json\"\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests?folder=4249383d-2af6-4ac6-9a2b-0930e8f639e3","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","requests"],"query":[{"key":"folder","value":"4249383d-2af6-4ac6-9a2b-0930e8f639e3"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:43:00 GMT"},{"key":"Content-Type","value":"application/json","description":""},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"976990"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"987421"},{"key":"RateLimit-Remaining","value":"260"},{"key":"RateLimit-Reset","value":"1"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"260"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=2f9f2f3a2c905423"},{"key":"x-srv-span","value":"v=1;s=5d8ae748e9cf71c7"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"3a7-z+hWMiyS26oLfi34cwirGw\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"491"},{"key":"X-Kong-Proxy-Latency","value":"74"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"action\": \"import\"\n    },\n    \"data\": {\n        \"folder\": \"4249383d-2af6-4ac6-9a2b-0930e8f639e3\",\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"method\": \"GET\",\n        \"queryParams\": [\n            {\n                \"value\": \"{{id}}\",\n                \"key\": \"id\",\n                \"equals\": true,\n                \"description\": \"Optional. The user's ID.\",\n                \"enabled\": false\n            }\n        ],\n        \"description\": \"This is an example GET request.\",\n        \"url\": \"https://postman-echo.com/get?param=value\",\n        \"name\": \"Example\",\n        \"headers\": [\n            {\n                \"key\": \"Host\",\n                \"value\": \"postman-echo.com\"\n            },\n            {\n                \"key\": \"user-agent\",\n                \"value\": \"curl/7.88.1\"\n            },\n            {\n                \"key\": \"accept\",\n                \"value\": \"*/*\"\n            },\n            {\n                \"key\": \"content-type\",\n                \"value\": \"application/json\"\n            }\n        ],\n        \"dataMode\": \"raw\",\n        \"responses_order\": [],\n        \"id\": \"389f1640-7996-b519-4747-9f3c6a350a19\",\n        \"owner\": \"20891195\",\n        \"lastUpdatedBy\": \"20891195\",\n        \"headerData\": [],\n        \"createdAt\": \"2023-09-13T18:03:16.957Z\",\n        \"updatedAt\": \"2023-09-13T18:03:16.957Z\",\n        \"rawModeData\": null,\n        \"dataOptions\": {\n            \"raw\": {\n                \"language\": \"json\"\n            }\n        },\n        \"responses\": []\n    },\n    \"revision\": 32549528635\n}"},{"id":"a2e046fc-8ad5-4d1b-b976-51fb58c2a465","name":"Request with Auth","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"Example GET Request\",\n    \"description\": \"This is an example GET request.\",\n    \"url\": \"https://postman-echo.com/get?param=value\",\n    \"method\": \"GET\",\n    \"auth\": {\n        \"type\": \"apikey\",\n        \"apikey\": [\n            {\n                \"key\": \"value\",\n                \"value\": \"XXX\",\n                \"type\": \"string\"\n            },\n            {\n                \"key\": \"key\",\n                \"value\": \"api-key\",\n                \"type\": \"string\"\n            }\n        ]\n    },\n    \"headers\": [\n        {\n            \"key\": \"Host\",\n            \"value\": \"postman-echo.com\"\n        },\n        {\n            \"key\": \"user-agent\",\n            \"value\": \"curl/7.88.1\"\n        },\n        {\n            \"key\": \"accept\",\n            \"value\": \"*/*\"\n        },\n        {\n            \"key\": \"content-type\",\n            \"value\": \"application/json\"\n        }\n    ],\n    \"queryParams\": [\n        {\n            \"key\": \"id\",\n            \"value\": \"{{id}}\",\n            \"equals\": true,\n            \"description\": \"Optional. The user's ID.\",\n            \"enabled\": true\n        }\n    ],\n    \"currentHelper\": \"apikeyAuth\",\n    \"helperAttributes\": \"{\\\"id\\\":\\\"apikey\\\",\\\"key\\\":\\\"api-key\\\",\\\"value\\\":\\\"XXX\\\"}\",\n    \"dataMode\": \"raw\",\n    \"rawModeData\": null,\n    \"dataOptions\": {\n        \"raw\": {\n            \"language\": \"json\"\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","requests"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:43:00 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"976990"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"987421"},{"key":"RateLimit-Remaining","value":"260"},{"key":"RateLimit-Reset","value":"1"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"260"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=2f9f2f3a2c905423"},{"key":"x-srv-span","value":"v=1;s=5d8ae748e9cf71c7"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"3a7-z+hWMiyS26oLfi34cwirGw\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"491"},{"key":"X-Kong-Proxy-Latency","value":"74"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"action\": \"import\"\n    },\n    \"data\": {\n        \"folder\": \"4ec7de35-cc87-4e2f-ab01-6fd351371ad3\",\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"auth\": {\n            \"type\": \"apikey\",\n            \"apikey\": [\n                {\n                    \"key\": \"value\",\n                    \"value\": \"XXX\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"key\": \"key\",\n                    \"value\": \"api-key\",\n                    \"type\": \"string\"\n                }\n            ]\n        },\n        \"currentHelper\": \"apikeyAuth\",\n        \"helperAttributes\": \"{\\\"id\\\":\\\"apikey\\\",\\\"key\\\":\\\"api-key\\\",\\\"value\\\":\\\"XXX\\\"}\",\n        \"description\": \"This is an example GET request.\",\n        \"url\": \"https://postman-echo.com/get?param=value\",\n        \"dataMode\": \"raw\",\n        \"name\": \"Example GET Request\",\n        \"method\": \"GET\",\n        \"headers\": \"[object Object],[object Object],[object Object],[object Object]\",\n        \"responses_order\": [],\n        \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"queryParams\": [\n            {\n                \"key\": \"id\",\n                \"value\": \"{{id}}\",\n                \"equals\": true,\n                \"description\": \"Optional. The user's ID.\",\n                \"enabled\": true\n            }\n        ],\n        \"headerData\": [],\n        \"createdAt\": \"2022-10-07T13:57:54.145Z\",\n        \"updatedAt\": \"2022-10-07T13:57:54.145Z\",\n        \"rawModeData\": null,\n        \"dataOptions\": {\n            \"raw\": {\n                \"language\": \"json\"\n            }\n        },\n        \"responses\": []\n    },\n    \"revision\": 27134451973\n}"},{"id":"93783f83-7121-4aae-a046-384c306098be","name":"Request with Tests","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"Example POST Request\",\n    \"url\": \"https://postman-echo.com/post\",\n    \"method\": \"POST\",\n    \"headers\": [\n        {\n            \"key\": \"Host\",\n            \"value\": \"postman-echo.com\"\n        },\n        {\n            \"key\": \"user-agent\",\n            \"value\": \"curl/7.88.1\"\n        },\n        {\n            \"key\": \"accept\",\n            \"value\": \"*/*\"\n        },\n        {\n            \"key\": \"content-type\",\n            \"value\": \"application/json\"\n        },\n        {\n            \"key\": \"content-length\",\n            \"value\": \"22\"\n        }\n    ],\n    \"events\": [\n        {\n            \"listen\": \"test\",\n            \"script\": {\n                \"id\": \"a8608e1a-ce4b-4129-8c89-930d26ae0f6a\",\n                \"exec\": [\n                    \"pm.test(\\\"Status code is 200\\\", function () {\",\n                    \"    pm.response.to.have.status(200);\",\n                    \"});\"\n                ],\n                \"type\": \"text/javascript\"\n            }\n        },\n        {\n            \"listen\": \"prerequest\",\n            \"script\": {\n                \"id\": \"5b4bb273-5878-4bd7-a296-94a256783a66\",\n                \"exec\": [\n                    \"\"\n                ],\n                \"type\": \"text/javascript\"\n            }\n        }\n    ],\n    \"dataMode\": \"raw\",\n    \"rawModeData\": \"{\\n  \\\"field\\\": \\\"Value\\\"\\n}\",\n    \"dataOptions\": {\n        \"raw\": {\n            \"language\": \"json\"\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","requests"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"action\": \"import\"\n    },\n    \"data\": {\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"method\": \"POST\",\n        \"headers\": [\n            {\n                \"key\": \"Host\",\n                \"value\": \"postman-echo.com\"\n            },\n            {\n                \"key\": \"user-agent\",\n                \"value\": \"curl/7.88.1\"\n            },\n            {\n                \"key\": \"accept\",\n                \"value\": \"*/*\"\n            },\n            {\n                \"key\": \"content-type\",\n                \"value\": \"application/json\"\n            },\n            {\n                \"key\": \"content-length\",\n                \"value\": \"22\"\n            }\n        ],\n        \"events\": [\n            {\n                \"listen\": \"test\",\n                \"script\": {\n                    \"id\": \"a8608e1a-ce4b-4129-8c89-930d26ae0f6a\",\n                    \"exec\": [\n                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                        \"    pm.response.to.have.status(200);\",\n                        \"});\"\n                    ],\n                    \"type\": \"text/javascript\"\n                }\n            },\n            {\n                \"listen\": \"prerequest\",\n                \"script\": {\n                    \"id\": \"5b4bb273-5878-4bd7-a296-94a256783a66\",\n                    \"exec\": [\n                        \"\"\n                    ],\n                    \"type\": \"text/javascript\"\n                }\n            }\n        ],\n        \"dataMode\": \"raw\",\n        \"url\": \"https://postman-echo.com/post\",\n        \"name\": \"Example POST Request\",\n        \"owner\": \"12345678\",\n        \"folder\": null,\n        \"responses_order\": [],\n        \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"headerData\": [],\n        \"createdAt\": \"2023-09-07T13:35:33.691Z\",\n        \"updatedAt\": \"2023-09-07T13:35:33.691Z\",\n        \"rawModeData\": null,\n        \"dataOptions\": {\n            \"raw\": {\n                \"language\": \"json\"\n            }\n        },\n        \"responses\": []\n    },\n    \"revision\": 32456382272\n}"},{"id":"88a03bcb-51f9-4f93-89f8-ea7d4f07f122","name":"Bad Request","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"Test Request\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","requests"],"query":[{"key":"folder","value":"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa","description":"(Optional) The folder ID in which to create the request.\n\nIf you do not provide this query parameter, the request is created at the collection level.","disabled":true}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:46:34 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"195"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"987206"},{"key":"X-RateLimit-Remaining-Month","value":"976979"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"277"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"277"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"26"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=71e7fa2e10227b07"},{"key":"x-srv-span","value":"v=1;s=34b5233bc33613bc"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"c3-tPgeE37fnuvSHpIsHTCerA\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"X-Kong-Upstream-Latency","value":"25"},{"key":"X-Kong-Proxy-Latency","value":"52"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceFoundError\",\n        \"message\": \"This request already exists in the database.\",\n        \"details\": {\n            \"model\": \"request\",\n            \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"},{"id":"51e9438b-1e9e-42af-9b94-2df472cd7276","name":"Unauthorized","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"Test Request\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","requests"],"query":[{"key":"folder","value":"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa","description":"(Optional) The folder ID in which to create the request.\n\nIf you do not provide this query parameter, the request is created at the collection level.","disabled":true}]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:46:34 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"195"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"987206"},{"key":"X-RateLimit-Remaining-Month","value":"976979"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"277"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"277"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"26"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=71e7fa2e10227b07"},{"key":"x-srv-span","value":"v=1;s=34b5233bc33613bc"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"c3-tPgeE37fnuvSHpIsHTCerA\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"X-Kong-Upstream-Latency","value":"25"},{"key":"X-Kong-Proxy-Latency","value":"52"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"Unauthorized\",\n        \"message\": \"Unauthorized\",\n        \"details\": {\n            \"model\": \"request\",\n            \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"}]},{"name":"Update a request","id":"725ee08e-c2ea-4768-b6ee-94e25ae01db7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"{{requestName}}\",\n    \"method\": \"{{requestMethod}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/{{collectionId}}/requests/{{requestId}}","protocol":"https","host":["api","getpostman","com"],"path":["collections","{{collectionId}}","requests","{{requestId}}"]},"description":"Updates a request in a collection. For a complete list of properties, see the [Collection Format Request documentation](https://learning.postman.com/collection-format/reference/request/).\n\n**Note:**\n\n- You must pass a collection ID (`12ece9e1-2abf-4edc-8e34-de66e74114d2`), not a collection UID (`12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2`), in this endpoint.\n- This endpoint acts like a PATCH method. It only updates the values that you pass in the request body (for example, the `name` property). The endpoint does **not** update the entire resource.\n- This endpoint does not support changing the folder of a request."},"response":[{"id":"0a3fb402-c38b-46c8-a52d-eba1d254931d","name":"Successful Response","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"auth\": \"noauth\",\n    \"currentHelper\": null,\n    \"helperAttributes\": null,\n    \"owner\": \"12345678\",\n    \"lastUpdatedBy\": \"12345678\",\n    \"lastRevision\": 32368133476,\n    \"folder\": null,\n    \"collection\": \"c05fb60e-bb28-4e7b-9cf7-55ada6ab320c\",\n    \"name\": \"Example POST Request\",\n    \"dataMode\": \"raw\",\n    \"data\": null,\n    \"events\": null,\n    \"rawModeData\": \"{\\n    \\\"field\\\": \\\"Value\\\"\\n}\",\n    \"descriptionFormat\": null,\n    \"description\": \"This is an example POST request.\",\n    \"variables\": null,\n    \"headers\": null,\n    \"method\": \"POST\",\n    \"pathVariables\": null,\n    \"url\": \"https://postman-echo.com/post\",\n    \"preRequestScript\": null,\n    \"tests\": null,\n    \"queryParams\": [],\n    \"headerData\": [],\n    \"pathVariableData\": [],\n    \"protocolProfileBehavior\": null,\n    \"dataDisabled\": false,\n    \"responses_order\": [],\n    \"createdAt\": \"2023-09-01T07:59:25.000Z\",\n    \"updatedAt\": \"2023-09-01T09:29:54.000Z\",\n    \"dataOptions\": {\n        \"raw\": {\n            \"language\": \"json\"\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","requests","e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:49:55 GMT"},{"key":"Content-Type","value":"application/json","description":""},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"987006"},{"key":"X-RateLimit-Remaining-Month","value":"976977"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"264"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"264"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"6"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=a47a9a1bb5b56694"},{"key":"x-srv-span","value":"v=1;s=a2219fc46d3890f9"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"491-XtGj0sHQvh+IkXX8TPY1pQ\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"506"},{"key":"X-Kong-Proxy-Latency","value":"270"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"action\": \"update\"\n    },\n    \"data\": {\n        \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"name\": \"Example POST Request\",\n        \"dataMode\": \"raw\",\n        \"data\": null,\n        \"auth\": \"noauth\",\n        \"events\": null,\n        \"rawModeData\": \"{\\n    \\\"field\\\": \\\"Value\\\"\\n}\",\n        \"descriptionFormat\": null,\n        \"description\": \"This is an example POST request.\",\n        \"variables\": null,\n        \"headers\": null,\n        \"method\": \"POST\",\n        \"pathVariables\": null,\n        \"url\": \"https://postman-echo.com/post\",\n        \"preRequestScript\": null,\n        \"tests\": null,\n        \"currentHelper\": null,\n        \"helperAttributes\": null,\n        \"queryParams\": [],\n        \"headerData\": [],\n        \"pathVariableData\": [],\n        \"protocolProfileBehavior\": null,\n        \"dataDisabled\": false,\n        \"responses_order\": [],\n        \"createdAt\": \"2023-09-01T07:59:25.000Z\",\n        \"updatedAt\": \"2023-09-08T12:30:29.000Z\",\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 32473087936,\n        \"folder\": null,\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"dataOptions\": {\n            \"raw\": {\n                \"language\": \"json\"\n            }\n        }\n    },\n    \"revision\": 32473098909\n}"},{"id":"fa068682-ed96-4362-b78b-c2db7d77ecf6","name":"Update to Inherit Parent Auth","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"auth\": null,\n    \"currentHelper\": null,\n    \"helperAttributes\": null,\n    \"folder\": null,\n    \"collection\": \"c05fb60e-bb28-4e7b-9cf7-55ada6ab320c\",\n    \"name\": \"Example POST Request\",\n    \"dataMode\": \"raw\",\n    \"data\": [\n        {\n            \"enabled\": true,\n            \"value\": \"3f14c9c7-e71c-4094-b90e-ac9edb232c2e\",\n            \"type\": \"text\",\n            \"key\": \"id\"\n        },\n        {\n            \"enabled\": true,\n            \"value\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"type\": \"text\",\n            \"key\": \"collection\"\n        }\n    ],\n    \"events\": [\n        {\n            \"listen\": \"test\",\n            \"script\": {\n                \"type\": \"text/javascript\",\n                \"exec\": [\n                    \"var data = JSON.parse(responseBody);\"\n                ]\n            }\n        }\n    ],\n    \"rawModeData\": \"{\\n    \\\"field\\\": \\\"Value\\\"\\n}\",\n    \"descriptionFormat\": null,\n    \"description\": \"This is an example POST request.\",\n    \"variables\": null,\n    \"headers\": null,\n    \"method\": \"POST\",\n    \"pathVariables\": null,\n    \"url\": \"https://postman-echo.com/post\",\n    \"preRequestScript\": null,\n    \"tests\": \"var data = JSON.parse(responseBody);\",\n    \"queryParams\": [],\n    \"headerData\": [],\n    \"pathVariableData\": [],\n    \"protocolProfileBehavior\": null,\n    \"dataDisabled\": false,\n    \"responses_order\": [],\n    \"dataOptions\": {\n        \"raw\": {\n            \"language\": \"json\"\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","requests","e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:49:55 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"987006"},{"key":"X-RateLimit-Remaining-Month","value":"976977"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"264"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"264"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"6"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=a47a9a1bb5b56694"},{"key":"x-srv-span","value":"v=1;s=a2219fc46d3890f9"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"491-XtGj0sHQvh+IkXX8TPY1pQ\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"506"},{"key":"X-Kong-Proxy-Latency","value":"270"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"action\": \"update\"\n    },\n    \"data\": {\n        \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"name\": \"Example POST Request\",\n        \"dataMode\": \"params\",\n        \"data\": [\n            {\n                \"enabled\": true,\n                \"value\": \"3f14c9c7-e71c-4094-b90e-ac9edb232c2e\",\n                \"type\": \"text\",\n                \"key\": \"id\"\n            },\n            {\n                \"enabled\": true,\n                \"value\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"type\": \"text\",\n                \"key\": \"collection\"\n            }\n        ],\n        \"auth\": null,\n        \"events\": [\n            {\n                \"listen\": \"test\",\n                \"script\": {\n                    \"type\": \"text/javascript\",\n                    \"exec\": [\n                        \"var data = JSON.parse(responseBody);\"\n                    ]\n                }\n            }\n        ],\n        \"rawModeData\": \"{\\n    \\\"field\\\": \\\"Value\\\"\\n}\",\n        \"descriptionFormat\": null,\n        \"description\": \"This is an example POST request.\",\n        \"variables\": null,\n        \"headers\": \"\",\n        \"method\": \"POST\",\n        \"pathVariables\": {},\n        \"url\": \"https://postman-echo.com/post\",\n        \"preRequestScript\": null,\n        \"tests\": \"var data = JSON.parse(responseBody);\",\n        \"currentHelper\": null,\n        \"helperAttributes\": null,\n        \"queryParams\": [],\n        \"headerData\": [],\n        \"pathVariableData\": [],\n        \"protocolProfileBehavior\": null,\n        \"dataDisabled\": false,\n        \"responses_order\": [],\n        \"createdAt\": \"2022-08-29T16:49:19.964Z\",\n        \"updatedAt\": \"2022-08-29T16:49:19.964Z\",\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 24994863800,\n        \"folder\": null,\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"dataOptions\": {\n            \"raw\": {\n                \"language\": \"json\"\n            }\n        }\n    },\n    \"revision\": 24994954828\n}"},{"id":"fca18846-d8ac-4aae-b533-b53714d3ae5a","name":"Disable Query Params","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"owner\": \"12345678\",\n    \"lastUpdatedBy\": \"12345678\",\n    \"lastRevision\": 33437203713,\n    \"folder\": null,\n    \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"id\": \"42d13443-2f50-47f0-b417-03081a97bf45\",\n    \"name\": \"GET Request with headers and query params\",\n    \"dataMode\": null,\n    \"data\": null,\n    \"auth\": null,\n    \"events\": null,\n    \"rawModeData\": null,\n    \"descriptionFormat\": null,\n    \"description\": null,\n    \"variables\": null,\n    \"headers\": \"// x-api-key: apikey\",\n    \"method\": \"GET\",\n    \"pathVariables\": null,\n    \"url\": \"https://postman-echo.com/get?param1=value1\",\n    \"preRequestScript\": null,\n    \"tests\": null,\n    \"currentHelper\": null,\n    \"helperAttributes\": null,\n    \"queryParams\": [\n        {\n            \"key\": \"param1\",\n            \"value\": \"value1\",\n            \"description\": null,\n            \"enabled\": true\n        },\n        {\n            \"key\": \"param2\",\n            \"value\": \"value2\",\n            \"description\": null,\n            \"enabled\": false\n        }\n    ],\n    \"headerData\": [\n        {\n            \"key\": \"x-api-key\",\n            \"value\": \"apikey\",\n            \"type\": \"text\",\n            \"description\": null,\n            \"enabled\": false\n        }\n    ],\n    \"pathVariableData\": [],\n    \"protocolProfileBehavior\": {\n        \"disableBodyPruning\": true\n    },\n    \"dataDisabled\": false,\n    \"responses_order\": [],\n    \"createdAt\": \"2023-10-27T08:48:42.000Z\",\n    \"updatedAt\": \"2023-11-02T11:05:19.000Z\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","requests","e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:49:55 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"987006"},{"key":"X-RateLimit-Remaining-Month","value":"976977"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"264"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"264"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"6"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=a47a9a1bb5b56694"},{"key":"x-srv-span","value":"v=1;s=a2219fc46d3890f9"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"491-XtGj0sHQvh+IkXX8TPY1pQ\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"506"},{"key":"X-Kong-Proxy-Latency","value":"270"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"action\": \"update\"\n    },\n    \"data\": {\n        \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"name\": \"Example POST Request\",\n        \"dataMode\": \"params\",\n        \"data\": [\n            {\n                \"enabled\": true,\n                \"value\": \"3f14c9c7-e71c-4094-b90e-ac9edb232c2e\",\n                \"type\": \"text\",\n                \"key\": \"id\"\n            },\n            {\n                \"enabled\": true,\n                \"value\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"type\": \"text\",\n                \"key\": \"collection\"\n            }\n        ],\n        \"auth\": null,\n        \"events\": [\n            {\n                \"listen\": \"test\",\n                \"script\": {\n                    \"type\": \"text/javascript\",\n                    \"exec\": [\n                        \"var data = JSON.parse(responseBody);\"\n                    ]\n                }\n            }\n        ],\n        \"rawModeData\": \"{\\n    \\\"field\\\": \\\"Value\\\"\\n}\",\n        \"descriptionFormat\": null,\n        \"description\": \"This is an example POST request.\",\n        \"variables\": null,\n        \"headers\": \"\",\n        \"method\": \"POST\",\n        \"pathVariables\": {},\n        \"url\": \"https://postman-echo.com/post\",\n        \"preRequestScript\": null,\n        \"tests\": \"var data = JSON.parse(responseBody);\",\n        \"currentHelper\": null,\n        \"helperAttributes\": null,\n        \"queryParams\": [],\n        \"headerData\": [],\n        \"pathVariableData\": [],\n        \"protocolProfileBehavior\": null,\n        \"dataDisabled\": false,\n        \"responses_order\": [],\n        \"createdAt\": \"2022-08-29T16:49:19.964Z\",\n        \"updatedAt\": \"2022-08-29T16:49:19.964Z\",\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 24994863800,\n        \"folder\": null,\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"dataOptions\": {\n            \"raw\": {\n                \"language\": \"json\"\n            }\n        }\n    },\n    \"revision\": 24994954828\n}"},{"id":"9343d1ea-0a85-4f92-995b-110b315aba2f","name":"Not Found","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"Example GET request\",\n    \"method\": \"GET\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","requests","e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:56:24 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"976969"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"986616"},{"key":"RateLimit-Remaining","value":"283"},{"key":"RateLimit-Reset","value":"36"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"283"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=02d2c4cbfb3f6b5b"},{"key":"x-srv-span","value":"v=1;s=e1ec7d69b21e4573"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"cb-KyQ1Nr6GgxL5vlCC6jP1CQ\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"40"},{"key":"X-Kong-Proxy-Latency","value":"192"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the request you are looking for\",\n        \"details\": {\n            \"model\": \"request\",\n            \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"},{"id":"417c7be4-e6a7-4365-af52-a5de1df9bf35","name":"Change Parent Error","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"Example GET request\",\n    \"method\": \"GET\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958","protocol":"https","host":["api","getpostman","com"],"path":["collections","12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2","requests","e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:56:24 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"976969"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"986616"},{"key":"RateLimit-Remaining","value":"283"},{"key":"RateLimit-Reset","value":"36"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"283"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=02d2c4cbfb3f6b5b"},{"key":"x-srv-span","value":"v=1;s=e1ec7d69b21e4573"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"cb-KyQ1Nr6GgxL5vlCC6jP1CQ\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"40"},{"key":"X-Kong-Proxy-Latency","value":"192"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"changeParentError\",\n        \"message\": \"You can't update the parent. Use transfer instead.\",\n        \"details\": {\n            \"server\": {\n                \"model\": \"collection\",\n                \"model_id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            },\n            \"request\": {\n                \"model\": \"collection\",\n                \"model_id\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        }\n    }\n}"},{"id":"bca3e9c9-2dc1-4c57-b96d-cab508b440ab","name":"Unauthorized","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"Example GET request\",\n    \"method\": \"GET\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","requests","e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:56:24 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"976969"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"986616"},{"key":"RateLimit-Remaining","value":"283"},{"key":"RateLimit-Reset","value":"36"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"283"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=02d2c4cbfb3f6b5b"},{"key":"x-srv-span","value":"v=1;s=e1ec7d69b21e4573"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"cb-KyQ1Nr6GgxL5vlCC6jP1CQ\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"40"},{"key":"X-Kong-Proxy-Latency","value":"192"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"Unauthorized\",\n        \"message\": \"Unauthorized\",\n        \"details\": {\n            \"model\": \"request\",\n            \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"}]},{"name":"Delete a request","id":"b3c094a9-c0f6-4d2d-99dc-f00de74b466a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"Accept","value":"application/vnd.postman.v2+json","description":"You must include this header to use this endpoint."}],"url":{"raw":"https://api.getpostman.com/collections/{{collectionId}}/requests/{{requestId}}","protocol":"https","host":["api","getpostman","com"],"path":["collections","{{collectionId}}","requests","{{requestId}}"]},"description":"Deletes a request in a collection."},"response":[{"id":"52f8bf3d-131a-455e-8fd3-ffacc32992ed","name":"Successful Response","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","requests","e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:58:20 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"986501"},{"key":"X-RateLimit-Remaining-Month","value":"976968"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"288"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"288"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"41"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=c653b0b730dc49bb"},{"key":"x-srv-span","value":"v=1;s=cbb5f6c312d65df9"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"ad-xWWbyY7KdeE29OchZs8nbA\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"644"},{"key":"X-Kong-Proxy-Latency","value":"165"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"action\": \"destroy\"\n    },\n    \"data\": {\n        \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"owner\": \"12345678\"\n    },\n    \"revision\": 24995158577\n}"},{"id":"e2a2c945-7f1f-4ea2-ba4b-220408263b21","name":"Not Found","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","requests","e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:58:41 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"976967"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"986479"},{"key":"RateLimit-Remaining","value":"275"},{"key":"RateLimit-Reset","value":"19"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"275"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=bef26b296c7c8c89"},{"key":"x-srv-span","value":"v=1;s=c90a250793c31a3d"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"cb-zT1pQTNtRYuFcuAb63UipA\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"23"},{"key":"X-Kong-Proxy-Latency","value":"95"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the request you are looking for\",\n        \"details\": {\n            \"model\": \"request\",\n            \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"},{"id":"a96ed8ca-867c-4cc5-91d3-3d9458a17088","name":"Unauthorized","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","requests","e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 13:58:41 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"976967"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"986479"},{"key":"RateLimit-Remaining","value":"275"},{"key":"RateLimit-Reset","value":"19"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"275"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=bef26b296c7c8c89"},{"key":"x-srv-span","value":"v=1;s=c90a250793c31a3d"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"cb-zT1pQTNtRYuFcuAb63UipA\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"23"},{"key":"X-Kong-Proxy-Latency","value":"95"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"Unauthorized\",\n        \"message\": \"Unauthorized\",\n        \"details\": {\n            \"model\": \"request\",\n            \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"}]}],"id":"d3e3fc76-f58a-4d7b-a94f-e657b770ed6d","description":"These endpoint let you manage collection requests."},{"name":"Responses","item":[{"name":"Get a response","id":"84121e26-c4b3-4834-b4bd-4d99ce0573fb","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/{{collectionId}}/responses/{{responseId}}","protocol":"https","host":["api","getpostman","com"],"path":["collections","{{collectionId}}","responses","{{responseId}}"],"query":[{"key":"ids","value":"{{boolean}}","description":"If true, returns only the response properties that contain ID values.","disabled":true},{"key":"uid","value":"{{boolean}}","description":"If true, returns all IDs in UID format (`userId`-`id`).","disabled":true},{"key":"populate","value":"{{boolean}}","description":"If true, returns all of a response's contents.","disabled":true}]},"description":"Gets information about a response in a collection."},"response":[{"id":"41ff8205-f20b-49bc-8367-3625440d7967","name":"GET Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/cc364734-7dfd-4bfc-897d-be763dcdbb07","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","responses","cc364734-7dfd-4bfc-897d-be763dcdbb07"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 15:09:03 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"982258"},{"key":"X-RateLimit-Remaining-Month","value":"976881"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"298"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"298"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"58"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=d30dd747422681a7"},{"key":"x-srv-span","value":"v=1;s=5d9a59c2e5981f78"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"51e-9ZUc/fkmzrO5kT9Jc4y9eg\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"151"},{"key":"X-Kong-Proxy-Latency","value":"228"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n    \"meta\": {\n        \"model\": \"response\",\n        \"populate\": false,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 32528384460,\n        \"request\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n        \"name\": \"Not Found\",\n        \"status\": null,\n        \"responseCode\": {\n            \"code\": 404,\n            \"name\": \"Not Found\"\n        },\n        \"time\": null,\n        \"headers\": [\n            {\n                \"key\": \"Content-Type\",\n                \"name\": \"Content-Type\",\n                \"value\": \"application/json\",\n                \"description\": \"\",\n                \"type\": \"text\"\n            }\n        ],\n        \"cookies\": null,\n        \"mime\": null,\n        \"text\": \"{\\n    \\\"title\\\": \\\"Not Found\\\",\\n    \\\"detail\\\": \\\"Requested API does not exist\\\",\\n    \\\"type\\\": \\\"about:blank\\\"\\n}\",\n        \"language\": \"json\",\n        \"rawDataType\": null,\n        \"requestObject\": \"{\\\"data\\\":null,\\\"dataMode\\\":\\\"raw\\\",\\\"dataOptions\\\":{\\\"raw\\\":{\\\"language\\\":\\\"json\\\"}},\\\"headerData\\\":[{\\\"key\\\":\\\"Accept\\\",\\\"value\\\":\\\"application/vnd.example.v1+json\\\",\\\"description\\\":\\\"\\\",\\\"type\\\":\\\"text\\\",\\\"enabled\\\":true}],\\\"method\\\":\\\"GET\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[{\\\"key\\\":\\\"id\\\",\\\"value\\\":\\\"test-api\\\",\\\"equals\\\":true,\\\"description\\\":null,\\\"enabled\\\":true}],\\\"url\\\":\\\"http://api.getpostman.com/v1/request?id=test-api\\\",\\\"headers\\\":\\\"Accept: application/vnd.example.v1+json\\\\n\\\",\\\"pathVariables\\\":{},\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true},\\\"rawModeData\\\":\\\"\\\",\\\"graphqlModeData\\\":{}}\",\n        \"createdAt\": \"2023-08-22T12:53:12.000Z\",\n        \"updatedAt\": \"2023-09-12T18:23:42.000Z\"\n    }\n}"},{"id":"0c9f219a-980b-4a75-af3c-a97fb4d2e837","name":"POST Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/cc364734-7dfd-4bfc-897d-be763dcdbb07","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","responses","cc364734-7dfd-4bfc-897d-be763dcdbb07"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n    \"meta\": {\n        \"model\": \"response\",\n        \"populate\": false,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 32366010334,\n        \"request\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n        \"name\": \"Example POST response\",\n        \"status\": null,\n        \"responseCode\": {\n            \"code\": 200,\n            \"name\": \"OK\"\n        },\n        \"time\": null,\n        \"headers\": [\n            {\n                \"key\": \"Date\",\n                \"value\": \"Fri, 01 Sep 2023 07:36:18 GMT\"\n            },\n            {\n                \"key\": \"Content-Type\",\n                \"value\": \"application/json; charset=utf-8\"\n            },\n            {\n                \"key\": \"Content-Length\",\n                \"value\": \"607\"\n            },\n            {\n                \"key\": \"Connection\",\n                \"value\": \"keep-alive\"\n            },\n            {\n                \"key\": \"ETag\",\n                \"value\": \"W/\\\"25f-fXeI1ntSNPOD7sOol6cMrRL0DYk\\\"\"\n            },\n            {\n                \"key\": \"set-cookie\",\n                \"value\": \"sails.sid=s%3A4o6OiKlJvAK5dTEKRnH-ZMOU7jHTwNB-.owD6JTABpH6H6rH8gY09Z7ATvkr2elxL4iGyWnJkBPg; Path=/; HttpOnly\"\n            }\n        ],\n        \"cookies\": null,\n        \"mime\": null,\n        \"text\": \"{\\n    \\\"args\\\": {},\\n    \\\"data\\\": {\\n        \\\"field\\\": \\\"Value\\\"\\n    },\\n    \\\"files\\\": {},\\n    \\\"form\\\": {},\\n    \\\"headers\\\": {\\n        \\\"x-forwarded-proto\\\": \\\"https\\\",\\n        \\\"x-forwarded-port\\\": \\\"123\\\",\\n        \\\"host\\\": \\\"postman-echo.com\\\",\\n        \\\"x-amzn-trace-id\\\": \\\"Root=1-71bdd0e4-2ad8-45ab-be3c-3dde999711a6\\\",\\n        \\\"content-length\\\": \\\"24\\\",\\n        \\\"content-type\\\": \\\"application/json\\\",\\n        \\\"x-api-key\\\": \\\"xxx\\\",\\n        \\\"user-agent\\\": \\\"PostmanRuntime/7.32.3\\\",\\n        \\\"accept\\\": \\\"*/*\\\",\\n        \\\"postman-token\\\": \\\"XXXX\\\",\\n        \\\"accept-encoding\\\": \\\"gzip, deflate, br\\\"\\n    },\\n    \\\"json\\\": {\\n        \\\"field\\\": \\\"Value\\\"\\n    },\\n    \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\",\n        \"language\": \"json\",\n        \"rawDataType\": null,\n        \"requestObject\": \"{\\\"data\\\":null,\\\"dataMode\\\":\\\"raw\\\",\\\"dataOptions\\\":{\\\"raw\\\":{\\\"language\\\":\\\"json\\\"}},\\\"headerData\\\":[],\\\"method\\\":\\\"POST\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[],\\\"url\\\":\\\"https://postman-echo.com/post\\\",\\\"headers\\\":\\\"\\\",\\\"pathVariables\\\":{},\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true},\\\"rawModeData\\\":\\\"{\\\\n    \\\\\\\"field\\\\\\\": \\\\\\\"Value\\\\\\\"\\\\n}\\\",\\\"graphqlModeData\\\":{}}\",\n        \"createdAt\": \"2023-09-12T15:21:55.000Z\",\n        \"updatedAt\": \"2023-09-12T18:27:57.000Z\"\n    }\n}"},{"id":"588f0e1b-9a7a-4a74-9df6-19704bd3cdca","name":"Response with populate Parameter","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/cc364734-7dfd-4bfc-897d-be763dcdbb07?populate=true","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","responses","cc364734-7dfd-4bfc-897d-be763dcdbb07"],"query":[{"key":"populate","value":"true"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 15:09:03 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"982258"},{"key":"X-RateLimit-Remaining-Month","value":"976881"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"298"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"298"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"58"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=d30dd747422681a7"},{"key":"x-srv-span","value":"v=1;s=5d9a59c2e5981f78"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"51e-9ZUc/fkmzrO5kT9Jc4y9eg\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"151"},{"key":"X-Kong-Proxy-Latency","value":"228"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n    \"meta\": {\n        \"model\": \"response\",\n        \"populate\": false,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 32528384460,\n        \"request\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n        \"name\": \"Not Found\",\n        \"status\": null,\n        \"responseCode\": {\n            \"code\": 404,\n            \"name\": \"Not Found\"\n        },\n        \"time\": null,\n        \"headers\": [\n            {\n                \"key\": \"Content-Type\",\n                \"name\": \"Content-Type\",\n                \"value\": \"application/json\",\n                \"description\": \"\",\n                \"type\": \"text\"\n            }\n        ],\n        \"cookies\": null,\n        \"mime\": null,\n        \"text\": \"{\\n    \\\"title\\\": \\\"Not Found\\\",\\n    \\\"detail\\\": \\\"Requested API does not exist\\\",\\n    \\\"type\\\": \\\"about:blank\\\"\\n}\",\n        \"language\": \"json\",\n        \"rawDataType\": null,\n        \"requestObject\": \"{\\\"data\\\":null,\\\"dataMode\\\":\\\"raw\\\",\\\"dataOptions\\\":{\\\"raw\\\":{\\\"language\\\":\\\"json\\\"}},\\\"headerData\\\":[{\\\"key\\\":\\\"Accept\\\",\\\"value\\\":\\\"application/vnd.example.v1+json\\\",\\\"description\\\":\\\"\\\",\\\"type\\\":\\\"text\\\",\\\"enabled\\\":true}],\\\"method\\\":\\\"GET\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[{\\\"key\\\":\\\"id\\\",\\\"value\\\":\\\"test-api\\\",\\\"equals\\\":true,\\\"description\\\":null,\\\"enabled\\\":true}],\\\"url\\\":\\\"https://postman-echo.com/v1/request?id=test-api\\\",\\\"headers\\\":\\\"Accept: application/vnd.example.v1+json\\\\n\\\",\\\"pathVariables\\\":{},\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true},\\\"rawModeData\\\":\\\"\\\",\\\"graphqlModeData\\\":{}}\",\n        \"createdAt\": \"2023-08-22T12:53:12.000Z\",\n        \"updatedAt\": \"2023-09-12T18:23:42.000Z\"\n    }\n}"},{"id":"6681a3fc-ee4b-401b-9c6b-5b26f4dd4322","name":"Response with ids Parameter","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/cc364734-7dfd-4bfc-897d-be763dcdbb07?ids=true","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","responses","cc364734-7dfd-4bfc-897d-be763dcdbb07"],"query":[{"key":"ids","value":"true"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 15:09:03 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"982258"},{"key":"X-RateLimit-Remaining-Month","value":"976881"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"298"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"298"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"58"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=d30dd747422681a7"},{"key":"x-srv-span","value":"v=1;s=5d9a59c2e5981f78"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"51e-9ZUc/fkmzrO5kT9Jc4y9eg\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"151"},{"key":"X-Kong-Proxy-Latency","value":"228"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n    \"meta\": {\n        \"model\": \"response\",\n        \"populate\": false,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"request\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\"\n    }\n}"},{"id":"8dbb9d0e-934f-4d88-987a-2239d50a3270","name":"Response with uid Parameter","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/cc364734-7dfd-4bfc-897d-be763dcdbb07?uid=true","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","responses","cc364734-7dfd-4bfc-897d-be763dcdbb07"],"query":[{"key":"uid","value":"true"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 15:09:03 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"982258"},{"key":"X-RateLimit-Remaining-Month","value":"976881"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"298"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"298"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"58"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=d30dd747422681a7"},{"key":"x-srv-span","value":"v=1;s=5d9a59c2e5981f78"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"51e-9ZUc/fkmzrO5kT9Jc4y9eg\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"151"},{"key":"X-Kong-Proxy-Latency","value":"228"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n    \"meta\": {\n        \"model\": \"response\",\n        \"populate\": false,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 32528384460,\n        \"request\": \"12345678-c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"id\": \"12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n        \"name\": \"Not Found\",\n        \"status\": null,\n        \"responseCode\": {\n            \"code\": 404,\n            \"name\": \"Not Found\"\n        },\n        \"time\": null,\n        \"headers\": [\n            {\n                \"key\": \"Content-Type\",\n                \"name\": \"Content-Type\",\n                \"value\": \"application/json\",\n                \"description\": \"\",\n                \"type\": \"text\"\n            }\n        ],\n        \"cookies\": null,\n        \"mime\": null,\n        \"text\": \"{\\n    \\\"title\\\": \\\"Not Found\\\",\\n    \\\"detail\\\": \\\"Requested API does not exist\\\",\\n    \\\"type\\\": \\\"about:blank\\\"\\n}\",\n        \"language\": \"json\",\n        \"rawDataType\": null,\n        \"requestObject\": \"{\\\"data\\\":null,\\\"dataMode\\\":\\\"raw\\\",\\\"dataOptions\\\":{\\\"raw\\\":{\\\"language\\\":\\\"json\\\"}},\\\"headerData\\\":[{\\\"key\\\":\\\"Accept\\\",\\\"value\\\":\\\"application/vnd.example.v1+json\\\",\\\"description\\\":\\\"\\\",\\\"type\\\":\\\"text\\\",\\\"enabled\\\":true}],\\\"method\\\":\\\"GET\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[{\\\"key\\\":\\\"id\\\",\\\"value\\\":\\\"test-api\\\",\\\"equals\\\":true,\\\"description\\\":null,\\\"enabled\\\":true}],\\\"url\\\":\\\"https://postman-echo.com/v1/request?id=test-api\\\",\\\"headers\\\":\\\"Accept: application/vnd.example.v1+json\\\\n\\\",\\\"pathVariables\\\":{},\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true},\\\"rawModeData\\\":\\\"\\\",\\\"graphqlModeData\\\":{}}\",\n        \"createdAt\": \"2023-08-22T12:53:12.000Z\",\n        \"updatedAt\": \"2023-09-12T18:23:42.000Z\"\n    }\n}"},{"id":"dd1247bc-06a7-453c-b031-0abd3bc00593","name":"Not Found","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/cc364734-7dfd-4bfc-897d-be763dcdbb07","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","responses","cc364734-7dfd-4bfc-897d-be763dcdbb07"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 15:09:03 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"982258"},{"key":"X-RateLimit-Remaining-Month","value":"976881"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"298"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"298"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"58"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=d30dd747422681a7"},{"key":"x-srv-span","value":"v=1;s=5d9a59c2e5981f78"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"51e-9ZUc/fkmzrO5kT9Jc4y9eg\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"151"},{"key":"X-Kong-Proxy-Latency","value":"228"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the response you are looking for\",\n        \"details\": {\n            \"model\": \"response\",\n            \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"},{"id":"8b537347-f9fc-413a-96d1-6c21ff3dbafd","name":"Unauthorized","originalRequest":{"method":"GET","header":[{"key":"Accept","value":"application/vnd.postman.v2+json","description":"You must include this header to use this endpoint."}],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/cc364734-7dfd-4bfc-897d-be763dcdbb07","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","responses","cc364734-7dfd-4bfc-897d-be763dcdbb07"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 15:09:03 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"982258"},{"key":"X-RateLimit-Remaining-Month","value":"976881"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"298"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"298"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"58"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=d30dd747422681a7"},{"key":"x-srv-span","value":"v=1;s=5d9a59c2e5981f78"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"51e-9ZUc/fkmzrO5kT9Jc4y9eg\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"151"},{"key":"X-Kong-Proxy-Latency","value":"228"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"Unauthorized\",\n        \"message\": \"Unauthorized\",\n        \"details\": {\n            \"model\": \"response\",\n            \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"}]},{"name":"Create a response","id":"edcbcb81-65d0-49de-8d64-db204299f9bb","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"{{responseName}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/{{collectionId}}/responses?request={{requestId}}","protocol":"https","host":["api","getpostman","com"],"path":["collections","{{collectionId}}","responses"],"query":[{"key":"request","value":"{{requestId}}","description":"(Required) The parent request's ID."}]},"description":"Creates a request response in a collection. For a complete list of properties, see the [Collection Format Response documentation](https://learning.postman.com/collection-format/reference/response/#reference-diagram).\n\n**Note:**\n\nIt is recommended that you pass the `name` property in the request body. If you do not, the system uses a null value. As a result, this creates a response with a blank name."},"response":[{"id":"0d8c6d13-ee19-460d-9962-3aa2b01a5149","name":"GET Response","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"Example GET Response\",\n    \"responseCode\": {\n        \"code\": 200,\n        \"name\": \"OK\"\n    },\n    \"headers\": [\n        {\n            \"key\": \"content-type\",\n            \"value\": \"application/json; charset=utf-8\"\n        },\n        {\n            \"key\": \"content-length\",\n            \"value\": \"370\"\n        },\n        {\n            \"key\": \"etag\",\n            \"value\": \"W/\\\"172-GDbDAS2r5X4Ypw2ia9AUhtyIyhk\\\"\"\n        },\n        {\n            \"key\": \"set-cookie\",\n            \"value\": \"sails.sid=s%3A23szD8Az12345Vs7dMzU4hjUHqqA1LeX.x8Jbnx4BEVHgzajknZdH%2BqxW7Pctx47m%2FlduU5Q4TAI; Path=/ HttpOnly\"\n        }\n    ],\n    \"text\": \"{\\n  \\\"args\\\": {\\n    \\\"param\\\": \\\"value\\\"\\n  },\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9cd12-62f18f3a048796d345508073\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/get?param=value\\\"\\n}\\n\",\n    \"language\": \"json\",\n    \"requestObject\": \"{\\n  \\\"name\\\": \\\"Request\\\",\\n  \\\"description\\\": \\\"\\\",\\n  \\\"url\\\": \\\"https://postman-echo.com/get?param=value\\\",\\n  \\\"method\\\": \\\"GET\\\",\\n  \\\"headers\\\": [\\n    {\\n      \\\"key\\\": \\\"Host\\\",\\n      \\\"value\\\": \\\"postman-echo.com\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"user-agent\\\",\\n      \\\"value\\\": \\\"curl/7.88.1\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"accept\\\",\\n      \\\"value\\\": \\\"*/*\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"content-type\\\",\\n      \\\"value\\\": \\\"application/json\\\"\\n    }\\n  ],\\n  \\\"dataMode\\\": \\\"raw\\\",\\n  \\\"rawModeData\\\": null,\\n  \\\"dataOptions\\\": {\\n    \\\"raw\\\": {\\n      \\\"language\\\": \\\"json\\\"\\n    }\\n  }\\n}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses?request=c82dd02c-4870-4907-8fcb-593a876cf05b","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","responses"],"query":[{"key":"request","value":"c82dd02c-4870-4907-8fcb-593a876cf05b"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 16:14:11 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"978349"},{"key":"X-RateLimit-Remaining-Month","value":"976805"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"RateLimit-Remaining","value":"295"},{"key":"RateLimit-Reset","value":"49"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"295"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=0079b2481a90fae6"},{"key":"x-srv-span","value":"v=1;s=d62d7d42e01140cf"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"4f9-FyInoRb9cSWCJf4DYXd5TQ\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"420"},{"key":"X-Kong-Proxy-Latency","value":"56"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n  \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n  \"meta\": {\n    \"model\": \"response\",\n    \"action\": \"create\"\n  },\n  \"data\": {\n    \"request\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"headers\": [\n      {\n        \"key\": \"content-type\",\n        \"value\": \"application/json; charset=utf-8\"\n      },\n      {\n        \"key\": \"content-length\",\n        \"value\": \"370\"\n      },\n      {\n        \"key\": \"etag\",\n        \"value\": \"W/\\\"172-GDbDAS2r5X4Ypw2ia9AUhtyIyhk\\\"\"\n      },\n      {\n        \"key\": \"set-cookie\",\n        \"value\": \"sails.sid=s%3A23szD8Az12345Vs7dMzU4hjUHqqA1LeX.x8Jbnx4BEVHgzajknZdH%2BqxW7Pctx47m%2FlduU5Q4TAI; Path=/ HttpOnly\"\n      }\n    ],\n    \"name\": \"Example GET Response\",\n    \"text\": \"{\\n  \\\"args\\\": {\\n    \\\"param\\\": \\\"value\\\"\\n  },\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9cd12-62f18f3a048796d345508073\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/get?param=value\\\"\\n}\\n\",\n    \"requestObject\": \"{\\n  \\\"name\\\": \\\"Request\\\",\\n  \\\"description\\\": \\\"\\\",\\n  \\\"url\\\": \\\"https://postman-echo.com/get?param=value\\\",\\n  \\\"method\\\": \\\"GET\\\",\\n  \\\"headers\\\": [\\n    {\\n      \\\"key\\\": \\\"Host\\\",\\n      \\\"value\\\": \\\"postman-echo.com\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"user-agent\\\",\\n      \\\"value\\\": \\\"curl/7.88.1\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"accept\\\",\\n      \\\"value\\\": \\\"*/*\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"content-type\\\",\\n      \\\"value\\\": \\\"application/json\\\"\\n    }\\n  ],\\n  \\\"dataMode\\\": \\\"raw\\\",\\n  \\\"rawModeData\\\": null,\\n  \\\"dataOptions\\\": {\\n    \\\"raw\\\": {\\n      \\\"language\\\": \\\"json\\\"\\n    }\\n  }\\n}\",\n    \"responseCode\": {\n      \"code\": 200,\n      \"name\": \"OK\"\n    },\n    \"language\": \"json\",\n    \"id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n    \"owner\": \"12345678\",\n    \"lastUpdatedBy\": \"12345678\",\n    \"createdAt\": \"2023-09-07T13:33:18.700Z\",\n    \"updatedAt\": \"2023-09-07T13:33:18.700Z\"\n  },\n  \"revision\": 32456338262\n}"},{"id":"99eadfe6-f641-4370-98d4-420af846a944","name":"POST Response","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n  \"name\": \"POST response\",\n  \"responseCode\": {\n    \"code\": 200,\n    \"name\": \"OK\"\n  },\n  \"headers\": [\n    {\n      \"key\": \"date\",\n      \"value\": \"Thu, 07 Sep 2023 12:41:59 GMT\"\n    },\n    {\n      \"key\": \"content-type\",\n      \"value\": \"application/json; charset=utf-8\"\n    },\n    {\n      \"key\": \"content-length\",\n      \"value\": \"468\"\n    },\n    {\n      \"key\": \"etag\",\n      \"value\": \"W/\\\"1d4-JuAIw8ssoFCtGzk/UwITxaiSbrc\\\"\"\n    },\n    {\n      \"key\": \"set-cookie\",\n      \"value\": \"sails.sid=s%3A6p_NXpI3OZeGE35bI6i5Uq3XgHHxcsdJ.dQVpBE%2BJ9wHWainkqe6F6dkdv7UKoshSZY7sdZ5sbzo; Path=/; HttpOnly\"\n    }\n  ],\n  \"text\": \"{\\n  \\\"args\\\": {},\\n  \\\"data\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"files\\\": {},\\n  \\\"form\\\": {},\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9c517-36db304817c774d740619baa\\\",\\n    \\\"content-length\\\": \\\"22\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"json\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\\n\",\n  \"language\": \"json\",\n  \"requestObject\": \"{\\n  \\\"name\\\": \\\"Request\\\",\\n  \\\"description\\\": \\\"\\\",\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\",\\n  \\\"method\\\": \\\"POST\\\",\\n  \\\"headers\\\": [\\n    {\\n      \\\"key\\\": \\\"Host\\\",\\n      \\\"value\\\": \\\"postman-echo.com\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"user-agent\\\",\\n      \\\"value\\\": \\\"curl/7.88.1\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"accept\\\",\\n      \\\"value\\\": \\\"*/*\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"content-type\\\",\\n      \\\"value\\\": \\\"application/json\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"content-length\\\",\\n      \\\"value\\\": \\\"22\\\"\\n    }\\n  ],\\n  \\\"dataMode\\\": \\\"raw\\\",\\n  \\\"rawModeData\\\": \\\"{\\\\n  \\\\\\\"field\\\\\\\": \\\\\\\"Value\\\\\\\"\\\\n}\\\",\\n  \\\"dataOptions\\\": {\\n    \\\"raw\\\": {\\n      \\\"language\\\": \\\"json\\\"\\n    }\\n  }\\n}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses?request=c82dd02c-4870-4907-8fcb-593a876cf05b","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","responses"],"query":[{"key":"request","value":"c82dd02c-4870-4907-8fcb-593a876cf05b"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n  \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n  \"meta\": {\n    \"model\": \"response\",\n    \"action\": \"create\"\n  },\n  \"data\": {\n    \"request\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"responseCode\": {\n      \"code\": 200,\n      \"name\": \"OK\"\n    },\n    \"requestObject\": \"{\\n  \\\"name\\\": \\\"Request\\\",\\n  \\\"description\\\": \\\"\\\",\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\",\\n  \\\"method\\\": \\\"POST\\\",\\n  \\\"headers\\\": [\\n    {\\n      \\\"key\\\": \\\"Host\\\",\\n      \\\"value\\\": \\\"postman-echo.com\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"user-agent\\\",\\n      \\\"value\\\": \\\"curl/7.88.1\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"accept\\\",\\n      \\\"value\\\": \\\"*/*\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"content-type\\\",\\n      \\\"value\\\": \\\"application/json\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"content-length\\\",\\n      \\\"value\\\": \\\"22\\\"\\n    }\\n  ],\\n  \\\"dataMode\\\": \\\"raw\\\",\\n  \\\"rawModeData\\\": null,\\n  \\\"dataOptions\\\": {\\n    \\\"raw\\\": {\\n      \\\"language\\\": \\\"json\\\"\\n    }\\n  }\\n}\",\n    \"text\": \"{\\n  \\\"args\\\": {},\\n  \\\"data\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"files\\\": {},\\n  \\\"form\\\": {},\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-71bdd0e4-2ad8-45ab-be3c-3dde999711a6\\\",\\n    \\\"content-length\\\": \\\"22\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"json\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\\n\",\n    \"name\": \"POST response\",\n    \"language\": \"json\",\n    \"headers\": [\n      {\n        \"key\": \"date\",\n        \"value\": \"Thu, 07 Sep 2023 12:41:59 GMT\"\n      },\n      {\n        \"key\": \"content-type\",\n        \"value\": \"application/json; charset=utf-8\"\n      },\n      {\n        \"key\": \"content-length\",\n        \"value\": \"468\"\n      },\n      {\n        \"key\": \"etag\",\n        \"value\": \"W/\\\"1d4-JuAIw8ssoFCtGzk/UwITxaiSbrc\\\"\"\n      },\n      {\n        \"key\": \"set-cookie\",\n        \"value\": \"sails.sid=s%3A23szD8Az12345Vs7dMzU4hjUHqqA1LeX.x8Jbnx4BEVHgzajknZdH%2BqxW7Pctx47m%2FlduU5Q4TAI; Path=/ HttpOnly\"\n      }\n    ],\n    \"id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n    \"owner\": \"12345678\",\n    \"lastUpdatedBy\": \"12345678\",\n    \"createdAt\": \"2023-09-07T13:35:34.817Z\",\n    \"updatedAt\": \"2023-09-07T13:35:34.817Z\"\n  },\n  \"revision\": 32456382761\n}"},{"id":"ea6e04c7-a79e-4d50-a358-c147905ca142","name":"Bad Request","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"Success\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses?request=c82dd02c-4870-4907-8fcb-593a876cf05b","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","responses"],"query":[{"key":"request","value":"c82dd02c-4870-4907-8fcb-593a876cf05b","description":"(Required) The parent request's ID."}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 16:17:13 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"197"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"978167"},{"key":"X-RateLimit-Remaining-Month","value":"976802"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"293"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"293"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"47"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=a4118ddf178e3760"},{"key":"x-srv-span","value":"v=1;s=27a05a55afc724e0"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"c5-K6PT1lt3OW6VV1lwhWQjPw\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"X-Kong-Upstream-Latency","value":"28"},{"key":"X-Kong-Proxy-Latency","value":"141"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceFoundError\",\n        \"message\": \"This response already exists in the database.\",\n        \"details\": {\n            \"model\": \"response\",\n            \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"},{"id":"ffdc36be-02ed-45ea-978a-45cfe3d1b46b","name":"Unauthorized","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"Success\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses?request=c82dd02c-4870-4907-8fcb-593a876cf05b","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","responses"],"query":[{"key":"request","value":"c82dd02c-4870-4907-8fcb-593a876cf05b","description":"(Required) The parent request's ID."}]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 16:17:13 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"197"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"978167"},{"key":"X-RateLimit-Remaining-Month","value":"976802"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"293"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"293"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"47"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=a4118ddf178e3760"},{"key":"x-srv-span","value":"v=1;s=27a05a55afc724e0"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"c5-K6PT1lt3OW6VV1lwhWQjPw\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"X-Kong-Upstream-Latency","value":"28"},{"key":"X-Kong-Proxy-Latency","value":"141"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"Unauthorized\",\n        \"message\": \"Unauthorized\",\n        \"details\": {\n            \"model\": \"response\",\n            \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"}]},{"name":"Update a response","id":"2c97929a-1e88-4152-833b-face9d36e9cb","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"{{responseName}}\",\n    \"responseCode\": {\n        \"code\": {{responseHTTPcode}},\n        \"name\": \"{{responseCodeName}}\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/{{collectionId}}/responses/{{responseId}}","protocol":"https","host":["api","getpostman","com"],"path":["collections","{{collectionId}}","responses","{{responseId}}"]},"description":"Updates a response in a collection. For a complete list of properties, see the [Collection Format Response documentation](https://learning.postman.com/collection-format/reference/response/#reference-diagram).\n\n**Note:**\n\n- You must pass a collection ID (`12ece9e1-2abf-4edc-8e34-de66e74114d2`), not a collection UID (`12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2`), in this endpoint.\n- This endpoint acts like a PATCH method. It only updates the values that you pass in the request body (for example, the `name` property). The endpoint does **not** update the entire resource."},"response":[{"id":"13550ca9-0dd4-446d-aed1-cb32bb52f797","name":"Successful Response","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"owner\": \"12345678\",\n    \"lastUpdatedBy\": \"12345678\",\n    \"lastRevision\": 32368133468,\n    \"request\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"name\": \"Example Response\",\n    \"status\": null,\n    \"responseCode\": {\n        \"code\": 200,\n        \"name\": \"OK\"\n    },\n    \"time\": \"50\",\n    \"headers\": [\n        {\n            \"key\": \"Date\",\n            \"value\": \"Fri, 01 Sep 2023 07:36:18 GMT\"\n        },\n        {\n            \"key\": \"Content-Type\",\n            \"value\": \"application/json; charset=utf-8\"\n        },\n        {\n            \"key\": \"Content-Length\",\n            \"value\": \"607\"\n        },\n        {\n            \"key\": \"Connection\",\n            \"value\": \"keep-alive\"\n        }\n    ],\n    \"cookies\": null,\n    \"mime\": null,\n    \"text\": \"{\\n    \\\"args\\\": {},\\n    \\\"data\\\": {\\n        \\\"field\\\": \\\"Value\\\"\\n    },\\n    \\\"files\\\": {},\\n    \\\"form\\\": {},\\n    \\\"headers\\\": {\\n        \\\"x-forwarded-proto\\\": \\\"https\\\",\\n        \\\"x-forwarded-port\\\": \\\"443\\\",\\n        \\\"host\\\": \\\"postman-echo.com\\\",\\n        \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9cd12-62f18f3a048796d345508073\\\",\\n        \\\"content-length\\\": \\\"24\\\",\\n        \\\"content-type\\\": \\\"application/json\\\",\\n        \\\"x-api-key\\\": \\\"xxx\\\",\\n        \\\"user-agent\\\": \\\"PostmanRuntime/7.32.3\\\",\\n        \\\"accept\\\": \\\"*/*\\\",\\n        \\\"postman-token\\\": \\\"XXX\\\",\\n        \\\"accept-encoding\\\": \\\"gzip, deflate, br\\\"\\n    },\\n    \\\"json\\\": {\\n        \\\"field\\\": \\\"Value\\\"\\n    },\\n    \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\",\n    \"language\": \"json\",\n    \"rawDataType\": null,\n    \"requestObject\": \"{\\\"data\\\":null,\\\"dataMode\\\":\\\"raw\\\",\\\"dataOptions\\\":{\\\"raw\\\":{\\\"language\\\":\\\"json\\\"}},\\\"headerData\\\":[],\\\"method\\\":\\\"POST\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[],\\\"url\\\":\\\"https://postman-echo.com/post\\\",\\\"headers\\\":\\\"\\\",\\\"pathVariables\\\":{},\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true},\\\"rawModeData\\\":\\\"{\\\\n    \\\\\\\"field\\\\\\\": \\\\\\\"Value\\\\\\\"\\\\n}\\\",\\\"graphqlModeData\\\":{}}\",\n    \"createdAt\": \"2023-09-01T09:29:54.000Z\",\n    \"updatedAt\": \"2023-09-01T09:29:54.000Z\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/16473433-f4a74a54-c003-c27a-8d79-e91c6ea2c5d1","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","responses","16473433-f4a74a54-c003-c27a-8d79-e91c6ea2c5d1"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 15:39:55 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"980405"},{"key":"X-RateLimit-Remaining-Month","value":"976849"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"263"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"263"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"5"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=1a6ee5c445053bc8"},{"key":"x-srv-span","value":"v=1;s=ee1c09c86c857fe9"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"521-7ksIO/VcXSMHSBAAvun4MQ\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"427"},{"key":"X-Kong-Proxy-Latency","value":"43"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"response\",\n        \"action\": \"update\"\n    },\n    \"data\": {\n        \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"name\": \"Example Response\",\n        \"status\": null,\n        \"responseCode\": {\n            \"name\": \"OK\",\n            \"code\": 200\n        },\n        \"time\": \"50\",\n        \"headers\": [\n            {\n                \"value\": \"Fri, 01 Sep 2023 07:36:18 GMT\",\n                \"key\": \"Date\"\n            },\n            {\n                \"value\": \"application/json; charset=utf-8\",\n                \"key\": \"Content-Type\"\n            },\n            {\n                \"value\": \"607\",\n                \"key\": \"Content-Length\"\n            },\n            {\n                \"value\": \"keep-alive\",\n                \"key\": \"Connection\"\n            }\n        ],\n        \"cookies\": null,\n        \"mime\": null,\n        \"text\": \"{\\n    \\\"args\\\": {},\\n    \\\"data\\\": {\\n        \\\"field\\\": \\\"Value\\\"\\n    },\\n    \\\"files\\\": {},\\n    \\\"form\\\": {},\\n    \\\"headers\\\": {\\n        \\\"x-forwarded-proto\\\": \\\"https\\\",\\n        \\\"x-forwarded-port\\\": \\\"443\\\",\\n        \\\"host\\\": \\\"postman-echo.com\\\",\\n        \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9cd12-62f18f3a048796d345508073\\\",\\n        \\\"content-length\\\": \\\"24\\\",\\n        \\\"content-type\\\": \\\"application/json\\\",\\n        \\\"x-api-key\\\": \\\"xxx\\\",\\n        \\\"user-agent\\\": \\\"PostmanRuntime/7.32.3\\\",\\n        \\\"accept\\\": \\\"*/*\\\",\\n        \\\"postman-token\\\": \\\"XXX\\\",\\n        \\\"accept-encoding\\\": \\\"gzip, deflate, br\\\"\\n    },\\n    \\\"json\\\": {\\n        \\\"field\\\": \\\"Value\\\"\\n    },\\n    \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\",\n        \"language\": \"json\",\n        \"rawDataType\": null,\n        \"requestObject\": \"{\\\"data\\\":null,\\\"dataMode\\\":\\\"raw\\\",\\\"dataOptions\\\":{\\\"raw\\\":{\\\"language\\\":\\\"json\\\"}},\\\"headerData\\\":[],\\\"method\\\":\\\"POST\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[],\\\"url\\\":\\\"https://postman-echo.com/post\\\",\\\"headers\\\":\\\"\\\",\\\"pathVariables\\\":{},\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true},\\\"rawModeData\\\":\\\"{\\\\n    \\\\\\\"field\\\\\\\": \\\\\\\"Value\\\\\\\"\\\\n}\\\",\\\"graphqlModeData\\\":{}}\",\n        \"createdAt\": \"2023-09-01T09:29:54.000Z\",\n        \"updatedAt\": \"2023-09-08T12:37:33.000Z\",\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 32368133468,\n        \"request\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\"\n    },\n    \"revision\": 32473225008\n}"},{"id":"d74ead0e-62b8-4e9d-b565-f5acc46e153a","name":"Not Found","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"Bad Request\",\n    \"responseCode\": {\n        \"code\": 400,\n        \"name\": \"Bad Request\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/cc364734-7dfd-4bfc-897d-be763dcdbb07","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","responses","cc364734-7dfd-4bfc-897d-be763dcdbb07"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 15:42:01 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"976843"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"980279"},{"key":"RateLimit-Remaining","value":"299"},{"key":"RateLimit-Reset","value":"59"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"299"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=5ab26e396e3f5bfd"},{"key":"x-srv-span","value":"v=1;s=95c64cb513218e5d"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"cd-P7fWXMAWALamLqekklo95w\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"42"},{"key":"X-Kong-Proxy-Latency","value":"150"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the response you are looking for\",\n        \"details\": {\n            \"model\": \"response\",\n            \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"},{"id":"3c98d07a-f091-4715-883c-10878d64b0a2","name":"Change Parent Error","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"Bad Request\",\n    \"responseCode\": {\n        \"code\": 400,\n        \"name\": \"Bad Request\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/cc364734-7dfd-4bfc-897d-be763dcdbb07","protocol":"https","host":["api","getpostman","com"],"path":["collections","12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2","responses","cc364734-7dfd-4bfc-897d-be763dcdbb07"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 15:42:01 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"976843"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"980279"},{"key":"RateLimit-Remaining","value":"299"},{"key":"RateLimit-Reset","value":"59"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"299"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=5ab26e396e3f5bfd"},{"key":"x-srv-span","value":"v=1;s=95c64cb513218e5d"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"cd-P7fWXMAWALamLqekklo95w\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"42"},{"key":"X-Kong-Proxy-Latency","value":"150"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"changeParentError\",\n        \"message\": \"You can't update the parent. Use transfer instead.\",\n        \"details\": {\n            \"server\": {\n                \"model\": \"request\",\n                \"model_id\": \"d35874f0-f7b3-4625-9096-2b2415444185\"\n            },\n            \"request\": {\n                \"model\": \"request\",\n                \"model_id\": \"e12d2aa6-85c8-4e6c-aad0-1adcfe05c958\"\n            }\n        }\n    }\n}"},{"id":"a745d122-26af-471e-9e80-ebc383c39053","name":"Unauthorized","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"name\": \"Bad Request\",\n    \"responseCode\": {\n        \"code\": 400,\n        \"name\": \"Bad Request\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/cc364734-7dfd-4bfc-897d-be763dcdbb07","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","responses","cc364734-7dfd-4bfc-897d-be763dcdbb07"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 15:42:01 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"976843"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"980279"},{"key":"RateLimit-Remaining","value":"299"},{"key":"RateLimit-Reset","value":"59"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"299"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=5ab26e396e3f5bfd"},{"key":"x-srv-span","value":"v=1;s=95c64cb513218e5d"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"cd-P7fWXMAWALamLqekklo95w\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"42"},{"key":"X-Kong-Proxy-Latency","value":"150"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"Unauthorized\",\n        \"message\": \"Unauthorized\",\n        \"details\": {\n            \"model\": \"response\",\n            \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"}]},{"name":"Delete a response","id":"380a1034-0c4a-4691-91a5-7c339fa575fd","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/collections/{{collectionId}}/responses/{{responseId}}","protocol":"https","host":["api","getpostman","com"],"path":["collections","{{collectionId}}","responses","{{responseId}}"]},"description":"Deletes a response in a collection."},"response":[{"id":"26e5d295-1306-469c-aa8c-67b1e812f26f","name":"Successful Response","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/cc364734-7dfd-4bfc-897d-be763dcdbb07","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","responses","cc364734-7dfd-4bfc-897d-be763dcdbb07"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 15:44:20 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Reset-Month","value":"980141"},{"key":"X-RateLimit-Remaining-Month","value":"976841"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Remaining-Minute","value":"288"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"RateLimit-Remaining","value":"288"},{"key":"RateLimit-Limit","value":"300"},{"key":"RateLimit-Reset","value":"40"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=a8179e54aceb4922"},{"key":"x-srv-span","value":"v=1;s=1e35b13e7b46ed98"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"ae-2liQ3ikb/GKgF10hjr94rw\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"454"},{"key":"X-Kong-Proxy-Latency","value":"213"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n    \"meta\": {\n        \"model\": \"response\",\n        \"action\": \"destroy\"\n    },\n    \"data\": {\n        \"id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n        \"owner\": \"12345678\"\n    },\n    \"revision\": 24997417224\n}"},{"id":"7f20aa9d-b465-40b6-9625-cfe9d91d4bc9","name":"Not Found","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/7978bfb8-fb89-42ac-8d48-cd547d96463e","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","responses","7978bfb8-fb89-42ac-8d48-cd547d96463e"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 15:44:38 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"976840"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"980123"},{"key":"RateLimit-Remaining","value":"275"},{"key":"RateLimit-Reset","value":"22"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"275"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=5369a63e0142d7e9"},{"key":"x-srv-span","value":"v=1;s=554261b4a0cced1a"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"cd-UMzzMYmXFWE4HC1k+Qxqbg\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"25"},{"key":"X-Kong-Proxy-Latency","value":"58"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the response you are looking for\",\n        \"details\": {\n            \"model\": \"response\",\n            \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"},{"id":"dbf897b4-e31f-4af0-8b6b-6248e0e313c7","name":"Unauthorized","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/7978bfb8-fb89-42ac-8d48-cd547d96463e","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","responses","7978bfb8-fb89-42ac-8d48-cd547d96463e"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Thu, 19 May 2022 15:44:38 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"X-RateLimit-Remaining-Month","value":"976840"},{"key":"X-RateLimit-Limit-Month","value":"1000000"},{"key":"X-RateLimit-Reset-Month","value":"980123"},{"key":"RateLimit-Remaining","value":"275"},{"key":"RateLimit-Reset","value":"22"},{"key":"X-RateLimit-Limit-Minute","value":"300"},{"key":"X-RateLimit-Remaining-Minute","value":"275"},{"key":"RateLimit-Limit","value":"300"},{"key":"strict-transport-security","value":"max-age=63072000; includeSubDomains"},{"key":"x-srv-trace","value":"v=1;t=5369a63e0142d7e9"},{"key":"x-srv-span","value":"v=1;s=554261b4a0cced1a"},{"key":"Access-Control-Allow-Origin","value":""},{"key":"Access-Control-Allow-Credentials","value":""},{"key":"Access-Control-Allow-Methods","value":""},{"key":"Access-Control-Allow-Headers","value":""},{"key":"Access-Control-Expose-Headers","value":""},{"key":"ETag","value":"W/\"cd-UMzzMYmXFWE4HC1k+Qxqbg\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"},{"key":"X-Kong-Upstream-Latency","value":"25"},{"key":"X-Kong-Proxy-Latency","value":"58"},{"key":"Via","value":"kong/2.7.1"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"Unauthorized\",\n        \"message\": \"Unauthorized\",\n        \"details\": {\n            \"model\": \"response\",\n            \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"}]}],"id":"ea9b8de8-0fd3-453b-afdd-b8d2b82e1a91","description":"These endpoints let you manage collection responses."}],"id":"2888bc40-d8bf-4d24-9e62-5c06774b35e4","description":"These endpoints let you manage a collection's items, such as folders and requests."},{"name":"Tags","item":[{"name":"Get a collection's tags","id":"e6b32537-c805-494e-9dec-1a02f651fd00","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/{{collectionUid}}/tags","protocol":"https","host":["api","getpostman","com"],"path":["collections","{{collectionUid}}","tags"]},"description":"Gets all the tags associated with a collection."},"response":[{"id":"045dd190-0df8-4a0a-a02c-1de89de2fab1","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags","protocol":"https","host":["api","getpostman","com"],"path":["collections","12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2","tags"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        },\n        {\n            \"slug\": \"test-api\"\n        }\n    ]\n}"},{"id":"4b8069e0-689f-41ae-b95f-3d2bb74dde35","name":"Unauthorized","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags","protocol":"https","host":["api","getpostman","com"],"path":["collections","12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2","tags"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"status\": 401\n}"},{"id":"15537608-61dd-4736-9b87-e80f5ece2f82","name":"Invalid Credentials","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags","protocol":"https","host":["api","getpostman","com"],"path":["collections","12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2","tags"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"The request lacks valid credentials.\",\n    \"status\": 401\n}"},{"id":"775f5249-7cb5-45f6-8437-f8aa354c48cd","name":"Forbidden","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags","protocol":"https","host":["api","getpostman","com"],"path":["collections","12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2","tags"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"You do not have developer role. Ask your (super)admin to grant you developer role\",\n    \"status\": 403\n}"},{"id":"cb471a5e-1c9c-4d36-935c-b365235e90fd","name":"Not Enterprise","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags","protocol":"https","host":["api","getpostman","com"],"path":["collections","12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2","tags"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"The tags feature is only available to enterprise teams\",\n    \"status\": 403\n}"},{"id":"73cde96e-4d3d-411a-a3e1-d5084c6c4a55","name":"No View Permissions","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags","protocol":"https","host":["api","getpostman","com"],"path":["collections","12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2","tags"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"status\": 403,\n    \"detail\": \"You do not have view permission\",\n    \"instance\": \"/tags/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n}"},{"id":"525b77ae-5dac-4fd0-bd49-7cd80383c1cd","name":"Internal Server Error","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags","protocol":"https","host":["api","getpostman","com"],"path":["collections","12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2","tags"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"status\": 500\n}"}]},{"name":"Update a collection's tags","id":"5c4ed953-c13c-4ae0-a90b-236b1eedccb6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"{{tagName}}\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/{{collectionUid}}/tags","protocol":"https","host":["api","getpostman","com"],"path":["collections","{{collectionUid}}","tags"]},"description":"Updates a collection's associated tags. This endpoint replaces all existing tags with those you pass in the request body.\n\n**Note:**\n\n- You can only add a maximum of five tags to a collection.\n    \n- Tags must be between `2` and `64` characters long.\n- Tags must follow the `^[a-z][a-z0-9-]\\\\\\\\*[a-z0-9]+$` pattern."},"response":[{"id":"9bfbb1e5-8952-4f7e-a9f1-c7f915c79fda","name":"Successful Response","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags","protocol":"https","host":["api","getpostman","com"],"path":["collections","12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2","tags"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}"},{"id":"5d821e80-a7f5-4cab-96ef-09196d149fd4","name":"Tag Exceeds Max Size","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"oS1Z9gHS9lDaAhX3xu0ekJRZwt0CPIikGYApohSPJVu3n3iiHxdISMqMFVo6wPf8N\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags","protocol":"https","host":["api","getpostman","com"],"path":["collections","12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2","tags"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"title\": \"Bad Request\",\n    \"detail\": \"body/tags/0/slug must NOT have more than 64 characters\",\n    \"status\": 400\n}"},{"id":"53ba9854-4e4d-4bf5-bc15-0d563e5fe03e","name":"Exceeds Max Number of Tags","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        },\n        {\n            \"slug\": \"test-api\"\n        },\n        {\n            \"slug\": \"test-collection\"\n        },\n        {\n            \"slug\": \"preview\"\n        },\n        {\n            \"slug\": \"pre-release\"\n        },\n        {\n            \"slug\": \"api-team\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags","protocol":"https","host":["api","getpostman","com"],"path":["collections","12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2","tags"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/badrequest\",\n    \"title\": \"Bad Request\",\n    \"detail\": \"body/tags must NOT have more than 5 items\",\n    \"status\": 400\n}"},{"id":"4322b4d3-7755-492a-b37f-01d281cff768","name":"Special Character Present","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"test-api!\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags","protocol":"https","host":["api","getpostman","com"],"path":["collections","12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2","tags"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"title\": \"Bad Request\",\n    \"detail\": \"body/tags/0/slug must match pattern \\\"^[a-z][a-z0-9-]*[a-z0-9]+$\\\"\",\n    \"status\": 400\n}"},{"id":"62724705-816c-4db9-abe8-e78ddd4841d8","name":"Missing tags Object","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags","protocol":"https","host":["api","getpostman","com"],"path":["collections","12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2","tags"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"statusCode\": 400,\n    \"error\": \"Bad Request\",\n    \"message\": \"body must have required property 'tags'\"\n}"},{"id":"eb8eeb9f-55ae-4e6a-bf9a-23f810b863a4","name":"Tag Does Not Start with Letter","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"1test\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags","protocol":"https","host":["api","getpostman","com"],"path":["collections","12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2","tags"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"title\": \"Bad Request\",\n    \"detail\": \"body/tags/0/slug must match pattern \\\"^[a-z][a-z0-9-]*[a-z0-9]+$\\\"\",\n    \"status\": 400\n}"},{"id":"c6ec3d83-c5c6-4175-b5b8-6678bb92d645","name":"Unauthorized","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags","protocol":"https","host":["api","getpostman","com"],"path":["collections","12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2","tags"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"status\": 401\n}"},{"id":"3633b68b-3d8c-432a-be68-35410c25cd43","name":"Invalid Credentials","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags","protocol":"https","host":["api","getpostman","com"],"path":["collections","12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2","tags"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"The request lacks valid credentials.\",\n    \"status\": 401\n}"},{"id":"b3ffe06a-47df-435b-9ff1-7690ebb1a41a","name":"Forbidden","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags","protocol":"https","host":["api","getpostman","com"],"path":["collections","12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2","tags"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"You do not have developer role. Ask your (super)admin to grant you developer role\",\n    \"status\": 403\n}"},{"id":"ed8c5bce-48af-4b95-b2c0-45f961728bd2","name":"Not Enterprise","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags","protocol":"https","host":["api","getpostman","com"],"path":["collections","12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2","tags"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"The tags feature is only available to enterprise teams\",\n    \"status\": 403\n}"},{"id":"c2040260-c327-476f-bd8d-c2c8a0186c90","name":"Internal Server Error","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags","protocol":"https","host":["api","getpostman","com"],"path":["collections","12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2","tags"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"status\": 500\n}"}]}],"id":"3f6f55e8-e03f-4ecc-bfcb-c5e61048c01e","description":"These endpoints let you manage collection tags with Postman's [tagging](https://learning.postman.com/docs/collections/using-collections/#tagging-a-collection) feature. Tagging is available on [Postman Enterprise plans](https://www.postman.com/pricing/)."},{"name":"Forks","item":[{"name":"Create a fork","id":"a8315d05-530c-4a4f-b4f3-55d3d15836a6","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n\t\"label\": \"{{collectionForkName}}\"\n}"},"url":{"raw":"https://api.getpostman.com/collections/fork/{{collectionId}}?workspace={{workspaceId}}","protocol":"https","host":["api","getpostman","com"],"path":["collections","fork","{{collectionId}}"],"query":[{"key":"workspace","value":"{{workspaceId}}","description":"Required. The workspace ID in which to fork the collection."}]},"description":"Creates a [fork](https://learning.postman.com/docs/collaborating-in-postman/version-control/#creating-a-fork) from an existing collection into a workspace. Include the following required request body properties:\n\n*   `label` — The fork's label."},"response":[{"id":"2547cbe8-a3db-4b2f-819e-2ea9ef7be4c9","name":"Successful Response","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n\t\"label\": \"Test Fork\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/fork/12ece9e1-2abf-4edc-8e34-de66e74114d2?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["collections","fork","12ece9e1-2abf-4edc-8e34-de66e74114d2"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Required. The workspace ID in which to fork the collection."}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"collection\": {\n        \"id\": \"09547fef-a9a5-4e00-998b-aa563e8db69a\",\n        \"name\": \"Test Collection\",\n        \"fork\": {\n            \"label\": \"Test Fork\",\n            \"createdAt\": \"2022-06-16T19:51:44.069Z\",\n            \"from\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        },\n        \"uid\": \"12345678-09547fef-a9a5-4e00-998b-aa563e8db69a\"\n    }\n}"},{"id":"3122f932-5cf3-4755-9157-0f1d9c114f90","name":"Not Found","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n\t\"label\": \"Test Fork\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/fork/12ece9e1-2abf-4edc-8e34-de66e74114d2?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["collections","fork","12ece9e1-2abf-4edc-8e34-de66e74114d2"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Required. The workspace ID in which to fork the collection."}]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified item does not exist.\",\n        \"details\": {\n            \"item\": \"collection\",\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"},{"id":"b3e6760e-2d37-400c-98a9-b8368ccb4475","name":"Rate Limit Exceeded","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n\t\"label\": \"Test Fork\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/fork/12ece9e1-2abf-4edc-8e34-de66e74114d2?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["collections","fork","12ece9e1-2abf-4edc-8e34-de66e74114d2"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Required. The workspace ID in which to fork the collection."}]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Merge a fork","id":"7e9f5ea3-eb3b-442f-9d44-da2998fe1633","request":{"method":"POST","header":[{"name":"Content-Type","key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"strategy\": \"{{mergeStrategy}}\",\n    \"source\": \"{{forkCollectionId}}\",\n    \"destination\": \"{{destinationCollectionId}}\"\n}"},"url":{"raw":"https://api.getpostman.com/collections/merge","protocol":"https","host":["api","getpostman","com"],"path":["collections","merge"]},"description":"Merges a forked collection back into its destination collection. Include the following required properties in the request body:\n\n*   `source` — The forked collection's ID.\n*   `destination` — The destination collection's ID.\n    \n\nYou can also include the following optional properties in the request body:\n\n*   `strategy` — The fork's merge strategy. One of:\n    *   `deleteSource` — The system **deletes** the forked collection after a successful merge into the destination collection.\n    *   `updateSourceWithDestination` — **Default.** The system only merges the forked collection into the destination collection."},"response":[{"id":"1c2c5ecf-40cd-4e5b-a994-750e9042d11f","name":"Successful Response","originalRequest":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"strategy\": \"deleteSource\",\n    \"source\": \"12345678-09547fef-a9a5-4e00-998b-aa563e8db69a\",\n    \"destination\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/merge","protocol":"https","host":["api","getpostman","com"],"path":["collections","merge"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"},{"id":"2bf7553b-24b3-4168-8b18-10f9fe6bb07b","name":"Not Found","originalRequest":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"strategy\": \"deleteSource\",\n    \"source\": \"12345678-09547fef-a9a5-4e00-998b-aa563e8db69a\",\n    \"destination\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/merge","protocol":"https","host":["api","getpostman","com"],"path":["collections","merge"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified item does not exist.\",\n        \"details\": {\n            \"item\": \"collection\",\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"},{"id":"f9004696-db48-44ca-9b91-4580d0daa540","name":"Rate Limit Exceeded","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"strategy\": \"deleteSource\",\n    \"source\": \"12345678-09547fef-a9a5-4e00-998b-aa563e8db69a\",\n    \"destination\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/merge","protocol":"https","host":["api","getpostman","com"],"path":["collections","merge"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]}],"id":"2aabaf31-3d26-48fc-b055-d91cdc1a96a0","description":"These endpoints manage collection [forks](https://learning.postman.com/docs/collaborating-in-postman/using-version-control/forking-entities/)."},{"name":"Transformations","item":[{"name":"Transform collection to OpenAPI","id":"e4c3d498-e59b-4b48-8cf2-e2c23a8b292d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/{{collectionId}}/transformations","protocol":"https","host":["api","getpostman","com"],"path":["collections","{{collectionId}}","transformations"]},"description":"Transforms an existing Postman Collection into a stringified OpenAPI definition.\n\n**Note:**\n\nThis does **not** create an API."},"response":[{"id":"87e7121b-0230-44da-83af-d92891914382","name":"Successful Response","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"}],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/transformations","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","transformations"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"output\": \"{\\n  \\\"openapi\\\": \\\"3.0.3\\\",\\n  \\\"info\\\": {\\n    \\\"title\\\": \\\"Collection to API\\\",\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"contact\\\": {}\\n  },\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://api.getpostman.com/\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {},\\n  \\\"tags\\\": []\\n}\\n\"\n}"},{"id":"e302ab74-44da-4fed-a2eb-eaa7f78d5b1e","name":"Unauthorized","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"}],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/transformations","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","transformations"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401,\n    \"instance\": \"/collections/{collectionId}/apis\"\n}"},{"id":"e85daab6-aaaf-45e2-ac74-aca07941bd44","name":"Not Found","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"}],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/transformations","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","transformations"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404,\n    \"instance\": \"/collections/{collectionId}/apis\"\n}"},{"id":"c6552111-f7cd-4a17-890d-52a4ff2b1ac1","name":"Internal Server Error","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"}],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/transformations","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2","transformations"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500,\n    \"instance\": \"/collections/{collectionId}/apis\"\n}"}]}],"id":"b2c09f01-3359-44a3-b8e4-31e7a671d9cf","description":"These endpoints enable you to transform Postman Collections to other formats, such as OpenAPI."},{"name":"Transfers","item":[{"name":"Transfer folders","id":"0c3a5e2a-3805-448c-9cc7-83bf06b8df48","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"ids\": [\n        \"{{folderUid}}\"\n    ],\n    \"target\": {\n        \"model\": \"{{modelType}}\",\n        \"id\": \"{{modelUid}}\"\n    },\n    \"location\": {\n        \"position\": \"{{position}}\",\n        \"model\": \"{{modelId}}\",\n        \"id\": \"{{modelUid}}\"\n    },\n    \"mode\": \"{{modeType}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collection-folders-transfers","protocol":"https","host":["api","getpostman","com"],"path":["collection-folders-transfers"]},"description":"Copies or moves folders into a collection or folder. Include the following in the request body:\n\n- `ids` — A list of **string** values that contain the folder UIDs to transfer.\n- `target` — An **object** that contains the transfer destination information:\n    \n    - `model` — A **string** that contains the the type of item where the items will be transferred to. Accepts the `collection` or `folder` values.\n    - `id` — The **string** that contains the UID of the destination collection or folder.\n        \n- `location` — An **object** that contains the transfered item's source information:\n    - `position` — A **string** that contains the item's position within the destination object. Accepts the `start`, `end`, `before`, and `after` values.\n    - `model` — For the `before` or `after` positions, a **string** that contains the type of item (model) that the transferred item will be positioned by.\n    - `id` — For the `before` or `after` positions, a **string** that contains the model's UID.\n- `mode` — A **string** that contains the transfer operation to perform. Accepts the `move` or `copy` value."},"response":[{"id":"c4505f4c-648d-4159-b2bb-dd0fd69f287c","name":"Copy Folder to Collection","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"ids\": [\n        \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bd1\"\n    ],\n    \"target\": {\n        \"model\": \"collection\",\n        \"id\": \"12345678-2ba6b9c4-5327-4c46-9bf3-4ec84b74b720\"\n    },\n    \"location\": {\n        \"position\": \"end\",\n        \"model\": null,\n        \"id\": null\n    },\n    \"mode\": \"copy\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collection-folders-transfers","protocol":"https","host":["api","getpostman","com"],"path":["collection-folders-transfers"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"ids\": [\n        \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bd1\"\n    ]\n}"},{"id":"27a27ce4-71da-42e4-8406-39fceb1b1c4a","name":"Move Folder to a Collection","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"ids\": [\n        \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bd1\"\n    ],\n    \"target\": {\n        \"model\": \"collection\",\n        \"id\": \"12345678-2ba6b9c4-5327-4c46-9bf3-4ec84b74b720\"\n    },\n    \"location\": {\n        \"position\": \"start\",\n        \"model\": null,\n        \"id\": null\n    },\n    \"mode\": \"move\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collection-folders-transfers","protocol":"https","host":["api","getpostman","com"],"path":["collection-folders-transfers"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"ids\": [\n        \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bd1\"\n    ]\n}"},{"id":"00fffcf4-b6fc-4e5a-9024-21c0719288c2","name":"Move Folder Before Another Folder","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"ids\": [\n        \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bd1\"\n    ],\n    \"target\": {\n        \"model\": \"collection\",\n        \"id\": \"12345678-2ba6b9c4-5327-4c46-9bf3-4ec84b74b720\"\n    },\n    \"location\": {\n        \"position\": \"before\",\n        \"model\": \"folder\",\n        \"id\": \"12345678-45499451-e894-41b8-8c66-8191ab64932a\"\n    },\n    \"mode\": \"move\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collection-folders-transfers","protocol":"https","host":["api","getpostman","com"],"path":["collection-folders-transfers"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"ids\": [\n        \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bd1\"\n    ]\n}"},{"id":"bea8ba39-5f2e-46af-8e01-5258d1c591c7","name":"Invalid ids Value","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"ids\": [\n        \"12345678\"\n    ],\n    \"target\": {\n        \"model\": \"collection\",\n        \"id\": \"12345678-2ba6b9c4-5327-4c46-9bf3-4ec84b74b720\"\n    },\n    \"location\": {\n        \"position\": \"start\",\n        \"model\": null,\n        \"id\": null\n    },\n    \"mode\": \"move\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collection-folders-transfers","protocol":"https","host":["api","getpostman","com"],"path":["collection-folders-transfers"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n  \"type\": \"Error\",\n  \"title\": \"One or more folder ids provided were not found\",\n  \"detail\": {\n        \"missing\": [\n            \"12345678\"\n        ]\n    }\n}\n"}]},{"name":"Transfer requests","id":"1fb77d18-eb4c-4c0c-98dc-ed6fd78cf586","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"ids\": [\n        \"{{folderUid}}\"\n    ],\n    \"target\": {\n        \"model\": \"{{modelType}}\",\n        \"id\": \"{{modelUid}}\"\n    },\n    \"location\": {\n        \"position\": \"{{position}}\",\n        \"model\": \"{{modelId}}\",\n        \"id\": \"{{modelUid}}\"\n    },\n    \"mode\": \"{{modeType}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collection-requests-transfers","protocol":"https","host":["api","getpostman","com"],"path":["collection-requests-transfers"]},"description":"Copies or moves requests into a collection or folder. Include the following in the request body:\n\n- `ids` — A list of **string** values that contain the request UIDs to transfer.\n- `target` — An **object** that contains the transfer destination information:\n    - `model` — A **string** that contains the the type of item where the items will be transferred to. Accepts the `collection` or `folder` values.\n    - `id` — The **string** that contains the UID of the destination collection or folder.\n- `location` — An **object** that contains the transfered item's source information:\n    - `position` — A **string** that contains the item's position within the destination object. Accepts the `start`, `end`, `before`, and `after` values.\n    - `model` — For the `before` or `after` positions, a **string** that contains the type of item (model) that the transferred item will be positioned by.\n    - `id` — For the `before` or `after` positions, a **string** that contains the model's UID.\n- `mode` — A **string** that contains the transfer operation to perform. Accepts the `move` or `copy` value."},"response":[{"id":"0c93c5e0-fa65-414a-8e2b-d30d8e670e1a","name":"Copy Request to Collection","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"ids\": [\n        \"12345678-3a2069a1-aeb6-462c-ada0-8629858199ba\"\n    ],\n    \"target\": {\n        \"model\": \"collection\",\n        \"id\": \"12345678-6ce99ba5-fd64-40d5-b4f1-3569df4554a0\"\n    },\n    \"location\": {\n        \"position\": \"start\",\n        \"model\": null,\n        \"id\": null\n    },\n    \"mode\": \"copy\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collection-requests-transfers","protocol":"https","host":["api","getpostman","com"],"path":["collection-requests-transfers"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"ids\": [\n        \"12345678-3a2069a1-aeb6-462c-ada0-8629858199ba\"\n    ]\n}"},{"id":"645e9d88-8af4-4232-8f65-a6b4a0400f39","name":"Move Request to Top of Folder","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"ids\": [\n        \"12345678-3a2069a1-aeb6-462c-ada0-8629858199ba\"\n    ],\n    \"target\": {\n        \"model\": \"folder\",\n        \"id\": \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bb9\"\n    },\n    \"location\": {\n        \"position\": \"start\",\n        \"model\": null,\n        \"id\": null\n    },\n    \"mode\": \"move\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collection-requests-transfers","protocol":"https","host":["api","getpostman","com"],"path":["collection-requests-transfers"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"ids\": [\n        \"12345678-3a2069a1-aeb6-462c-ada0-8629858199ba\"\n    ]\n}"},{"id":"64392cfb-2c7e-41d8-a3d3-32e5b6a29793","name":"Move Request After Another Request","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"ids\": [\n        \"12345678-3a2069a1-aeb6-462c-ada0-8629858199ba\"\n    ],\n    \"target\": {\n        \"model\": \"folder\",\n        \"id\": \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bb9\"\n    },\n    \"location\": {\n        \"position\": \"after\",\n        \"model\": \"request\",\n        \"id\": \"12345678-78749c26-69c7-4c07-8fca-8055d1a732db\"\n    },\n    \"mode\": \"move\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collection-requests-transfers","protocol":"https","host":["api","getpostman","com"],"path":["collection-requests-transfers"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"ids\": [\n        \"12345678-3a2069a1-aeb6-462c-ada0-8629858199ba\"\n    ]\n}"},{"id":"4c1979d8-eb72-4e87-9b73-38962d70f1e1","name":"Invalid ids Value","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"ids\": [\n        \"12345678\"\n    ],\n    \"target\": {\n        \"model\": \"folder\",\n        \"id\": \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bb9\"\n    },\n    \"location\": {\n        \"position\": \"start\",\n        \"model\": null,\n        \"id\": null\n    },\n    \"mode\": \"move\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collection-requests-transfers","protocol":"https","host":["api","getpostman","com"],"path":["collection-requests-transfers"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n  \"type\": \"Error\",\n  \"title\": \"One or more request ids provided were not found\",\n  \"detail\": {\n        \"missing\": [\n            \"12345678\"\n        ]\n    }\n}\n"},{"id":"8afb2904-80b4-41bb-9464-6ac5881b6aa1","name":"Target Folder Not Found","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"ids\": [\n        \"12345678-3a2069a1-aeb6-462c-ada0-8629858199ba\"\n    ],\n    \"target\": {\n        \"model\": \"folder\",\n        \"id\": \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bb9\"\n    },\n    \"location\": {\n        \"position\": \"start\",\n        \"model\": null,\n        \"id\": null\n    },\n    \"mode\": \"move\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collection-requests-transfers","protocol":"https","host":["api","getpostman","com"],"path":["collection-requests-transfers"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n  \"type\": \"Error\",\n  \"title\": \"Target folder 12345678-bcb5648b-eecb-4468-ade7-4efb38431bb9 not found\",\n  \"detail\": {}\n}\n"}]},{"name":"Transfer responses","id":"5ff5102b-0127-4b43-9e8d-5509ebb5e1c1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"ids\": [\n        \"{{folderUid}}\"\n    ],\n    \"target\": {\n        \"model\": \"request\",\n        \"id\": \"{{modelUid}}\"\n    },\n    \"location\": {\n        \"position\": \"{{position}}\",\n        \"model\": \"response\",\n        \"id\": \"{{modelUid}}\"\n    },\n    \"mode\": \"{{modeType}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collection-responses-transfers","protocol":"https","host":["api","getpostman","com"],"path":["collection-responses-transfers"]},"description":"Copies or moves responses into a request. Include the following in the request body:\n\n- `ids` — A list **string** values that contain the response UIDs to transfer.\n- `target` — An **object** that contains the transfer destination information:\n    \n    - `model` — A **string** that contains the the type of item where the items will be transferred to. Only accepts the `request` value.\n        \n    - `id` — The **string** that contains the UID of the destination request.\n- `location` — An **object** that contains the transfered item's source information:\n    \n    - `position` — A **string** that contains the item's position within the destination object. Accepts the `start`, `end`, `before`, and `after` values.\n    - `model` — For the `before` or `after` positions, a **string** that contains the type of item (model) that the transferred item will be positioned by. Only accepts the `response` value.\n        \n    - `id` — For the `before` or `after` positions, a **string** that contains the model's UID.\n- `mode` — A **string** that contains the transfer operation to perform. Accepts the `move` or `copy` value."},"response":[{"id":"e1a608f0-a2af-4b42-8b22-484b5259baa4","name":"Copy Response to Request","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"ids\": [\n        \"12345678-4b81b7c8-62c0-4cb0-b69d-0f256f1baddc\"\n    ],\n    \"target\": {\n        \"model\": \"request\",\n        \"id\": \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bb8\"\n    },\n    \"location\": {\n        \"position\": \"start\",\n        \"model\": null,\n        \"id\": null\n    },\n    \"mode\": \"copy\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collection-responses-transfers","protocol":"https","host":["api","getpostman","com"],"path":["collection-responses-transfers"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"ids\": [\n        \"12345678-a9b481c1-3e78-4af7-8db0-dce3f3f3c105\"\n    ]\n}"},{"id":"d2cc2a44-0ab9-4bf4-9595-026241482fa8","name":"Move Response to Request","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"ids\": [\n        \"12345678-4b81b7c8-62c0-4cb0-b69d-0f256f1baddc\"\n    ],\n    \"target\": {\n        \"model\": \"request\",\n        \"id\": \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bb8\"\n    },\n    \"location\": {\n        \"position\": \"end\",\n        \"model\": null,\n        \"id\": null\n    },\n    \"mode\": \"move\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collection-responses-transfers","protocol":"https","host":["api","getpostman","com"],"path":["collection-responses-transfers"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"ids\": [\n        \"12345678-a9b481c1-3e78-4af7-8db0-dce3f3f3c105\"\n    ]\n}"},{"id":"fb282671-9ae1-4cb4-8c98-fb2e5747cd98","name":"Move Response Before Another Response","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"ids\": [\n        \"12345678-4b81b7c8-62c0-4cb0-b69d-0f256f1baddc\"\n    ],\n    \"target\": {\n        \"model\": \"request\",\n        \"id\": \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bb8\"\n    },\n    \"location\": {\n        \"position\": \"before\",\n        \"model\": \"response\",\n        \"id\": \"12345678-80812b16-ac27-45b3-b3eb-793f78530d32\"\n    },\n    \"mode\": \"move\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collection-responses-transfers","protocol":"https","host":["api","getpostman","com"],"path":["collection-responses-transfers"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"ids\": [\n        \"12345678-a9b481c1-3e78-4af7-8db0-dce3f3f3c105\"\n    ]\n}"},{"id":"086cacbe-0ef9-4109-8a5e-68ab71427da6","name":"Invalid target Type","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"ids\": [\n        \"12345678-3a2069a1-aeb6-462c-ada0-8629858199ba\"\n    ],\n    \"target\": {\n        \"model\": \"folder\",\n        \"id\": \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bb9\"\n    },\n    \"location\": {\n        \"position\": \"start\",\n        \"model\": null,\n        \"id\": null\n    },\n    \"mode\": \"move\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collection-responses-transfers","protocol":"https","host":["api","getpostman","com"],"path":["collection-responses-transfers"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n  \"type\": \"Error\",\n  \"title\": \"Cannot transfer response to target model type folder\",\n  \"detail\": {}\n}\n"}]}],"id":"a2a12514-8e8a-46e7-856c-7eda3c049c71","description":"The Transfers endpoints enable you to move collection items between different collections or folders."},{"name":"Create a collection","event":[{"listen":"test","script":{"id":"50587065-ca6d-4e35-b5c8-dc1b9a8afd85","exec":[""],"type":"text/javascript"}}],"id":"fac58eda-d313-476c-b2a3-c07d0502b774","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"{{collectionName}}\",\n            \"schema\": \"{{collectionSchemaUrl}}\"\n        },\n        \"item\": [\n            {\n                \"request\": {}\n            }\n        ]\n    }\n}"},"url":{"raw":"https://api.getpostman.com/collections","protocol":"https","host":["api","getpostman","com"],"path":["collections"],"query":[{"key":"workspace","value":"{{workspaceId}}","description":"Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.","disabled":true}]},"description":"Creates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html). Include a `collection` object in the request body that contains the following required properties:\n\n- `info` — An **object** that contains the following properties:\n    - `name` — A **string** value that contains the collection's name.\n    - `schema` — A **string** that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/collection/v1` URL.\n- `item` — An **object** that contains the HTTP request and response information.\n    - `request` — An **object** that contains the collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.\n\nFor more information about the Collection Format, see the [Postman Collection Format documentation](https://learning.postman.com/collection-format/getting-started/overview/).\n\n**Note:**\n\n- For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n    - `info` object — Use the `definitions.info` entry.\n    - `item` object — Use the `definitions.items` entry.\n- For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json)."},"response":[{"id":"292713ea-e2bf-4a30-8fdb-7c3db1d856f6","name":"Successful Response","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections","protocol":"https","host":["api","getpostman","com"],"path":["collections"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"name\": \"Test Collection\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"},{"id":"7992192e-9745-4145-abc4-ca6c3b60f0d0","name":"Bad Request","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections","protocol":"https","host":["api","getpostman","com"],"path":["collections"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.","disabled":true}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceFoundError\",\n        \"message\": \"The specified item already exists.\",\n        \"details\": {\n            \"item\": \"collection\",\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"},{"id":"564ff946-b6b7-43ae-ad9b-57a6f85b7ad9","name":"Malformed Request","originalRequest":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections","protocol":"https","host":["api","getpostman","com"],"path":["collections"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.","disabled":true}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json; charset=utf-8"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"malformedRequestError\",\n        \"message\": \"Found 1 errors with the supplied collection.\",\n        \"details\": [\n            \": must have required property 'info'\"\n        ]\n    }\n}"},{"id":"c4f16c76-67c3-4d66-bb52-a3fade3c23c8","name":"Rate Limit Exceeded","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections","protocol":"https","host":["api","getpostman","com"],"path":["collections"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.","disabled":true}]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Get a collection","event":[{"listen":"test","script":{"id":"6eb48842-29f0-4d8d-81f8-2e098b0fcd9c","exec":[""],"type":"text/javascript"}}],"id":"79db3d26-fc56-4f56-afc6-236561e044fa","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/{{collectionId}}","protocol":"https","host":["api","getpostman","com"],"path":["collections","{{collectionId}}"],"query":[{"key":"access_key","value":"{{accessKey}}","description":"Optional. A collection's read-only access key. Using this query parameter does not require an API key to call the endpoint.","disabled":true}]},"description":"Gets information about a collection. For a complete list of this endpoint's possible values, use the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json)."},"response":[{"id":"a302e49d-c09b-40be-9d6f-cd5f3f81a784","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"},"type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"collection\": {\n        \"info\": {\n            \"_postman_id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"description\": \"This is a test.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\",\n            \"updatedAt\": \"2023-10-09T18:34:58.000Z\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Folder 1\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Test D\",\n                                \"event\": [\n                                    {\n                                        \"listen\": \"prerequest\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                                \"    console.log(response.json());\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    },\n                                    {\n                                        \"listen\": \"test\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                                \"    pm.response.to.have.status(200);\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    }\n                                ],\n                                \"id\": \"c616506e-0676-4d79-88a7-c273b70e9cea\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"apikey\",\n                                        \"apikey\": [\n                                            {\n                                                \"key\": \"value\",\n                                                \"value\": \"XXX\",\n                                                \"type\": \"string\"\n                                            },\n                                            {\n                                                \"key\": \"key\",\n                                                \"value\": \"api-key\",\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id=12345678\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"12345678\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"id\": \"d20b9562-9c85-4f25-bb2d-cfacf7dd85d1\",\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"uid\": \"12345678-d20b9562-9c85-4f25-bb2d-cfacf7dd85d1\"\n                                    }\n                                ],\n                                \"uid\": \"12345678-c616506e-0676-4d79-88a7-c273b70e9cea\"\n                            },\n                            {\n                                \"name\": \"Test E\",\n                                \"id\": \"bf6fd735-125e-486b-b7fb-9f0ae4a0bbc5\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"bearer\",\n                                        \"bearer\": [\n                                            {\n                                                \"key\": \"token\",\n                                                \"value\": \"TEST\",\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"PATCH\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"username\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id=12345678\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"12345678\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"id\": \"86447cb0-aeac-4371-a22f-9f6067fc4dd0\",\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"body\": {\n                                                \"mode\": \"raw\",\n                                                \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                                \"options\": {\n                                                    \"raw\": {\n                                                        \"language\": \"json\"\n                                                    }\n                                                }\n                                            },\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                                        \"uid\": \"12345678-86447cb0-aeac-4371-a22f-9f6067fc4dd0\"\n                                    }\n                                ],\n                                \"uid\": \"12345678-bf6fd735-125e-486b-b7fb-9f0ae4a0bbc5\"\n                            }\n                        ],\n                        \"id\": \"a7046e3e-fb60-44fc-8e32-a4578b854628\",\n                        \"auth\": {\n                            \"type\": \"apikey\",\n                            \"apikey\": [\n                                {\n                                    \"key\": \"value\",\n                                    \"value\": \"XXX\",\n                                    \"type\": \"string\"\n                                },\n                                {\n                                    \"key\": \"key\",\n                                    \"value\": \"api-key\",\n                                    \"type\": \"string\"\n                                }\n                            ]\n                        },\n                        \"event\": [\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ]\n                                }\n                            },\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ]\n                                }\n                            }\n                        ],\n                        \"uid\": \"12345678-a7046e3e-fb60-44fc-8e32-a4578b854628\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"id\": \"bb4a826b-1654-4f24-9ab1-d00e4fc2d743\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"bearer\",\n                                \"bearer\": [\n                                    {\n                                        \"key\": \"token\",\n                                        \"value\": \"TEST\",\n                                        \"type\": \"string\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"GET\",\n                            \"header\": [\n                                {\n                                    \"key\": \"Accept\",\n                                    \"value\": \"application/vnd.example.v1+json\",\n                                    \"type\": \"text\"\n                                }\n                            ],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request?id=12345678\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ],\n                                \"query\": [\n                                    {\n                                        \"key\": \"id\",\n                                        \"value\": \"12345678\",\n                                        \"description\": \"The API's ID.\"\n                                    }\n                                ]\n                            },\n                            \"description\": \"This is a test API.\"\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"5f297469-80d7-4847-a3e2-f596f2e717d8\",\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Host\",\n                                            \"value\": \"postman-echo.com\"\n                                        },\n                                        {\n                                            \"key\": \"user-agent\",\n                                            \"value\": \"curl/7.88.1\"\n                                        },\n                                        {\n                                            \"key\": \"accept\",\n                                            \"value\": \"*/*\"\n                                        },\n                                        {\n                                            \"key\": \"content-type\",\n                                            \"value\": \"application/json\"\n                                        },\n                                        {\n                                            \"key\": \"content-length\",\n                                            \"value\": \"22\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n  \\\"field\\\": \\\"Value\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"date\",\n                                        \"value\": \"Thu, 07 Sep 2023 12:41:59 GMT\"\n                                    },\n                                    {\n                                        \"key\": \"content-type\",\n                                        \"value\": \"application/json; charset=utf-8\"\n                                    },\n                                    {\n                                        \"key\": \"content-length\",\n                                        \"value\": \"468\"\n                                    },\n                                    {\n                                        \"key\": \"etag\",\n                                        \"value\": \"W/\\\"1d4-JuAIw8ssoFCtGzk/UwITxaiSbrc\\\"\"\n                                    },\n                                    {\n                                        \"key\": \"set-cookie\",\n                                        \"value\": \"sails.sid=s%3A6p_NXpI3OZeGE35bI6i5Uq3XgHHxcsdJ.dQVpBE%2BJ9wHWainkqe6F6dkdv7UKoshSZY7sdZ5sbzo; Path=/ HttpOnly\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n  \\\"args\\\": {},\\n  \\\"data\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"files\\\": {},\\n  \\\"form\\\": {},\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9c517-36db304817c774d740619baa\\\",\\n    \\\"content-length\\\": \\\"22\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"json\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\\n\",\n                                \"uid\": \"12345678-5f297469-80d7-4847-a3e2-f596f2e717d8\"\n                            },\n                            {\n                                \"id\": \"789df3cf-9362-40f7-a69e-4adde47d2bc8\",\n                                \"name\": \"Not Found\",\n                                \"originalRequest\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Accept\",\n                                            \"value\": \"application/vnd.example.v1+json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request?id=test-api\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"test-api\"\n                                            }\n                                        ]\n                                    }\n                                },\n                                \"status\": \"Not Found\",\n                                \"code\": 404,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"title\\\": \\\"Not Found\\\",\\n    \\\"detail\\\": \\\"Requested API does not exist\\\",\\n    \\\"type\\\": \\\"about:blank\\\"\\n}\",\n                                \"uid\": \"12345678-789df3cf-9362-40f7-a69e-4adde47d2bc8\"\n                            }\n                        ],\n                        \"uid\": \"12345678-bb4a826b-1654-4f24-9ab1-d00e4fc2d743\"\n                    },\n                    {\n                        \"name\": \"Test B\",\n                        \"id\": \"3e2b5890-8fb9-4a73-bf7b-f0a161502513\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"PUT\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test\\\",\\n    \\\"description\\\": \\\"This is a test.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"c7ffac80-0ab7-45da-a966-10bf469936db\",\n                                \"name\": \"Test B\",\n                                \"originalRequest\": {\n                                    \"method\": \"PUT\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"name\": \"Content-Type\",\n                                            \"value\": \"application/json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                                \"uid\": \"12345678-c7ffac80-0ab7-45da-a966-10bf469936db\"\n                            }\n                        ],\n                        \"uid\": \"12345678-3e2b5890-8fb9-4a73-bf7b-f0a161502513\"\n                    },\n                    {\n                        \"name\": \"Test C\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"id\": \"98518f83-1da1-4d27-8253-432cc923dbae\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"apikey\",\n                                \"apikey\": [\n                                    {\n                                        \"key\": \"value\",\n                                        \"value\": \"XXX\",\n                                        \"type\": \"string\"\n                                    },\n                                    {\n                                        \"key\": \"key\",\n                                        \"value\": \"api-key\",\n                                        \"type\": \"string\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"POST\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"https://postman-echo.com/post\",\n                                \"protocol\": \"https\",\n                                \"host\": [\n                                    \"postman-echo\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"post\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"bb3cb97c-619e-4c81-9a14-139efe81816c\",\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"test-api\\\",\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\",\\n    \\\"is_public\\\": false,\\n    \\\"created_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"updated_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"performance\\\": {\\n        \\\"collection\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\",\\n        \\\"environment\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\"\\n    }\\n}\",\n                                \"uid\": \"12345678-bb3cb97c-619e-4c81-9a14-139efe81816c\"\n                            }\n                        ],\n                        \"uid\": \"12345678-98518f83-1da1-4d27-8253-432cc923dbae\"\n                    }\n                ],\n                \"id\": \"c9a0e43c-6078-4fa0-8cfc-d4dc9e889817\",\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.variables.get(\\\"variable_key\\\");\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ],\n                \"uid\": \"12345678-c9a0e43c-6078-4fa0-8cfc-d4dc9e889817\"\n            },\n            {\n                \"name\": \"Folder 3\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Request 3-A\",\n                                \"id\": \"a22f41d5-32bf-4830-8731-10ad18e88874\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-a22f41d5-32bf-4830-8731-10ad18e88874\"\n                            }\n                        ],\n                        \"id\": \"07f106de-776e-4fd8-9fc1-dc72e4a06a00\",\n                        \"description\": \"Test folder user ID.\",\n                        \"uid\": \"12345678-07f106de-776e-4fd8-9fc1-dc72e4a06a00\"\n                    },\n                    {\n                        \"name\": \"User\",\n                        \"item\": [\n                            {\n                                \"name\": \"New Request\",\n                                \"id\": \"69e1ed6c-9d7b-41cd-aff7-69a468cf8252\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-69e1ed6c-9d7b-41cd-aff7-69a468cf8252\"\n                            },\n                            {\n                                \"name\": \"New Request\",\n                                \"id\": \"8b50cfc3-6af3-446e-a607-8d05e38e1ce9\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-8b50cfc3-6af3-446e-a607-8d05e38e1ce9\"\n                            }\n                        ],\n                        \"id\": \"2c9de017-885f-4c1e-99bf-d10cd870fb0b\",\n                        \"description\": \"Test folder for user information.\",\n                        \"uid\": \"12345678-2c9de017-885f-4c1e-99bf-d10cd870fb0b\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"id\": \"8b29623b-9c9c-4fed-ab9e-85f64524977b\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"GET\",\n                            \"header\": [],\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [],\n                        \"uid\": \"12345678-8b29623b-9c9c-4fed-ab9e-85f64524977b\"\n                    }\n                ],\n                \"id\": \"7d1ea228-82fc-4887-833a-caf88d3182d5\",\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                \"    console.log(response.json());\",\n                                \"});\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ],\n                \"uid\": \"12345678-7d1ea228-82fc-4887-833a-caf88d3182d5\"\n            },\n            {\n                \"name\": \"Test F\",\n                \"id\": \"ff460862-473c-41b8-8be4-a493041c3351\",\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"request\": {\n                    \"method\": \"POST\",\n                    \"header\": [],\n                    \"url\": {\n                        \"raw\": \"\"\n                    }\n                },\n                \"response\": [],\n                \"uid\": \"12345678-ff460862-473c-41b8-8be4-a493041c3351\"\n            }\n        ]\n    }\n}"},{"id":"bad5d867-a121-4584-94e9-dffe3d4e0c02","name":"Get Collection with Access Key","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2?access_key={{accessKey}}","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"],"query":[{"key":"access_key","value":"{{accessKey}}"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"collection\": {\n        \"info\": {\n            \"_postman_id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"description\": \"This is a test.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\",\n            \"updatedAt\": \"2023-10-09T18:34:58.000Z\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Folder 1\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Test D\",\n                                \"event\": [\n                                    {\n                                        \"listen\": \"prerequest\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                                \"    console.log(response.json());\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    },\n                                    {\n                                        \"listen\": \"test\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                                \"    pm.response.to.have.status(200);\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    }\n                                ],\n                                \"id\": \"c616506e-0676-4d79-88a7-c273b70e9cea\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"apikey\",\n                                        \"apikey\": [\n                                            {\n                                                \"key\": \"value\",\n                                                \"value\": \"XXX\",\n                                                \"type\": \"string\"\n                                            },\n                                            {\n                                                \"key\": \"key\",\n                                                \"value\": \"api-key\",\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id=12345678\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"12345678\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"id\": \"d20b9562-9c85-4f25-bb2d-cfacf7dd85d1\",\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"uid\": \"12345678-d20b9562-9c85-4f25-bb2d-cfacf7dd85d1\"\n                                    }\n                                ],\n                                \"uid\": \"12345678-c616506e-0676-4d79-88a7-c273b70e9cea\"\n                            },\n                            {\n                                \"name\": \"Test E\",\n                                \"id\": \"bf6fd735-125e-486b-b7fb-9f0ae4a0bbc5\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"bearer\",\n                                        \"bearer\": [\n                                            {\n                                                \"key\": \"token\",\n                                                \"value\": \"TEST\",\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"PATCH\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"username\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id=12345678\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"12345678\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"id\": \"86447cb0-aeac-4371-a22f-9f6067fc4dd0\",\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"body\": {\n                                                \"mode\": \"raw\",\n                                                \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                                \"options\": {\n                                                    \"raw\": {\n                                                        \"language\": \"json\"\n                                                    }\n                                                }\n                                            },\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                                        \"uid\": \"12345678-86447cb0-aeac-4371-a22f-9f6067fc4dd0\"\n                                    }\n                                ],\n                                \"uid\": \"12345678-bf6fd735-125e-486b-b7fb-9f0ae4a0bbc5\"\n                            }\n                        ],\n                        \"id\": \"a7046e3e-fb60-44fc-8e32-a4578b854628\",\n                        \"auth\": {\n                            \"type\": \"apikey\",\n                            \"apikey\": [\n                                {\n                                    \"key\": \"value\",\n                                    \"value\": \"XXX\",\n                                    \"type\": \"string\"\n                                },\n                                {\n                                    \"key\": \"key\",\n                                    \"value\": \"api-key\",\n                                    \"type\": \"string\"\n                                }\n                            ]\n                        },\n                        \"event\": [\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ]\n                                }\n                            },\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ]\n                                }\n                            }\n                        ],\n                        \"uid\": \"12345678-a7046e3e-fb60-44fc-8e32-a4578b854628\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"id\": \"bb4a826b-1654-4f24-9ab1-d00e4fc2d743\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"bearer\",\n                                \"bearer\": [\n                                    {\n                                        \"key\": \"token\",\n                                        \"value\": \"TEST\",\n                                        \"type\": \"string\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"GET\",\n                            \"header\": [\n                                {\n                                    \"key\": \"Accept\",\n                                    \"value\": \"application/vnd.example.v1+json\",\n                                    \"type\": \"text\"\n                                }\n                            ],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request?id=12345678\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ],\n                                \"query\": [\n                                    {\n                                        \"key\": \"id\",\n                                        \"value\": \"12345678\",\n                                        \"description\": \"The API's ID.\"\n                                    }\n                                ]\n                            },\n                            \"description\": \"This is a test API.\"\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"5f297469-80d7-4847-a3e2-f596f2e717d8\",\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Host\",\n                                            \"value\": \"postman-echo.com\"\n                                        },\n                                        {\n                                            \"key\": \"user-agent\",\n                                            \"value\": \"curl/7.88.1\"\n                                        },\n                                        {\n                                            \"key\": \"accept\",\n                                            \"value\": \"*/*\"\n                                        },\n                                        {\n                                            \"key\": \"content-type\",\n                                            \"value\": \"application/json\"\n                                        },\n                                        {\n                                            \"key\": \"content-length\",\n                                            \"value\": \"22\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n  \\\"field\\\": \\\"Value\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"date\",\n                                        \"value\": \"Thu, 07 Sep 2023 12:41:59 GMT\"\n                                    },\n                                    {\n                                        \"key\": \"content-type\",\n                                        \"value\": \"application/json; charset=utf-8\"\n                                    },\n                                    {\n                                        \"key\": \"content-length\",\n                                        \"value\": \"468\"\n                                    },\n                                    {\n                                        \"key\": \"etag\",\n                                        \"value\": \"W/\\\"1d4-JuAIw8ssoFCtGzk/UwITxaiSbrc\\\"\"\n                                    },\n                                    {\n                                        \"key\": \"set-cookie\",\n                                        \"value\": \"sails.sid=s%3A6p_NXpI3OZeGE35bI6i5Uq3XgHHxcsdJ.dQVpBE%2BJ9wHWainkqe6F6dkdv7UKoshSZY7sdZ5sbzo; Path=/ HttpOnly\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n  \\\"args\\\": {},\\n  \\\"data\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"files\\\": {},\\n  \\\"form\\\": {},\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9c517-36db304817c774d740619baa\\\",\\n    \\\"content-length\\\": \\\"22\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"json\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\\n\",\n                                \"uid\": \"12345678-5f297469-80d7-4847-a3e2-f596f2e717d8\"\n                            },\n                            {\n                                \"id\": \"789df3cf-9362-40f7-a69e-4adde47d2bc8\",\n                                \"name\": \"Not Found\",\n                                \"originalRequest\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Accept\",\n                                            \"value\": \"application/vnd.example.v1+json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request?id=test-api\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"test-api\"\n                                            }\n                                        ]\n                                    }\n                                },\n                                \"status\": \"Not Found\",\n                                \"code\": 404,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"title\\\": \\\"Not Found\\\",\\n    \\\"detail\\\": \\\"Requested API does not exist\\\",\\n    \\\"type\\\": \\\"about:blank\\\"\\n}\",\n                                \"uid\": \"12345678-789df3cf-9362-40f7-a69e-4adde47d2bc8\"\n                            }\n                        ],\n                        \"uid\": \"12345678-bb4a826b-1654-4f24-9ab1-d00e4fc2d743\"\n                    },\n                    {\n                        \"name\": \"Test B\",\n                        \"id\": \"3e2b5890-8fb9-4a73-bf7b-f0a161502513\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"PUT\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test\\\",\\n    \\\"description\\\": \\\"This is a test.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"c7ffac80-0ab7-45da-a966-10bf469936db\",\n                                \"name\": \"Test B\",\n                                \"originalRequest\": {\n                                    \"method\": \"PUT\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"name\": \"Content-Type\",\n                                            \"value\": \"application/json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                                \"uid\": \"12345678-c7ffac80-0ab7-45da-a966-10bf469936db\"\n                            }\n                        ],\n                        \"uid\": \"12345678-3e2b5890-8fb9-4a73-bf7b-f0a161502513\"\n                    },\n                    {\n                        \"name\": \"Test C\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"id\": \"98518f83-1da1-4d27-8253-432cc923dbae\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"apikey\",\n                                \"apikey\": [\n                                    {\n                                        \"key\": \"value\",\n                                        \"value\": \"XXX\",\n                                        \"type\": \"string\"\n                                    },\n                                    {\n                                        \"key\": \"key\",\n                                        \"value\": \"api-key\",\n                                        \"type\": \"string\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"POST\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"https://postman-echo.com/post\",\n                                \"protocol\": \"https\",\n                                \"host\": [\n                                    \"postman-echo\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"post\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"bb3cb97c-619e-4c81-9a14-139efe81816c\",\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"test-api\\\",\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\",\\n    \\\"is_public\\\": false,\\n    \\\"created_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"updated_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"performance\\\": {\\n        \\\"collection\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\",\\n        \\\"environment\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\"\\n    }\\n}\",\n                                \"uid\": \"12345678-bb3cb97c-619e-4c81-9a14-139efe81816c\"\n                            }\n                        ],\n                        \"uid\": \"12345678-98518f83-1da1-4d27-8253-432cc923dbae\"\n                    }\n                ],\n                \"id\": \"c9a0e43c-6078-4fa0-8cfc-d4dc9e889817\",\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.variables.get(\\\"variable_key\\\");\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ],\n                \"uid\": \"12345678-c9a0e43c-6078-4fa0-8cfc-d4dc9e889817\"\n            },\n            {\n                \"name\": \"Folder 3\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Request 3-A\",\n                                \"id\": \"a22f41d5-32bf-4830-8731-10ad18e88874\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-a22f41d5-32bf-4830-8731-10ad18e88874\"\n                            }\n                        ],\n                        \"id\": \"07f106de-776e-4fd8-9fc1-dc72e4a06a00\",\n                        \"description\": \"Test folder user ID.\",\n                        \"uid\": \"12345678-07f106de-776e-4fd8-9fc1-dc72e4a06a00\"\n                    },\n                    {\n                        \"name\": \"User\",\n                        \"item\": [\n                            {\n                                \"name\": \"New Request\",\n                                \"id\": \"69e1ed6c-9d7b-41cd-aff7-69a468cf8252\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-69e1ed6c-9d7b-41cd-aff7-69a468cf8252\"\n                            },\n                            {\n                                \"name\": \"New Request\",\n                                \"id\": \"8b50cfc3-6af3-446e-a607-8d05e38e1ce9\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-8b50cfc3-6af3-446e-a607-8d05e38e1ce9\"\n                            }\n                        ],\n                        \"id\": \"2c9de017-885f-4c1e-99bf-d10cd870fb0b\",\n                        \"description\": \"Test folder for user information.\",\n                        \"uid\": \"12345678-2c9de017-885f-4c1e-99bf-d10cd870fb0b\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"id\": \"8b29623b-9c9c-4fed-ab9e-85f64524977b\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"GET\",\n                            \"header\": [],\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [],\n                        \"uid\": \"12345678-8b29623b-9c9c-4fed-ab9e-85f64524977b\"\n                    }\n                ],\n                \"id\": \"7d1ea228-82fc-4887-833a-caf88d3182d5\",\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                \"    console.log(response.json());\",\n                                \"});\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ],\n                \"uid\": \"12345678-7d1ea228-82fc-4887-833a-caf88d3182d5\"\n            },\n            {\n                \"name\": \"Test F\",\n                \"id\": \"ff460862-473c-41b8-8be4-a493041c3351\",\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"request\": {\n                    \"method\": \"POST\",\n                    \"header\": [],\n                    \"url\": {\n                        \"raw\": \"\"\n                    }\n                },\n                \"response\": [],\n                \"uid\": \"12345678-ff460862-473c-41b8-8be4-a493041c3351\"\n            }\n        ]\n    }\n}"},{"id":"ed7cc4d5-cfb6-4fd0-87c1-714778e19b04","name":"Not Found","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the collection you are looking for\"\n    }\n}"},{"id":"02845322-70a1-42c8-b21a-a440da4a9a32","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Delete a collection","event":[{"listen":"test","script":{"id":"83aab99b-a274-4886-8351-3be4f94eac63","exec":[""],"type":"text/javascript"}}],"id":"9c423fd5-57a6-4420-96db-3746b5e1f65c","request":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/collections/{{collectionId}}","protocol":"https","host":["api","getpostman","com"],"path":["collections","{{collectionId}}"]},"description":"Deletes a collection."},"response":[{"id":"8c5cc326-c964-40c4-a563-30a0c56419dd","name":"Successful Response","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"},{"id":"9d008716-7217-48dd-bef2-5338025050cb","name":"Not Found","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified item does not exist.\",\n        \"details\": {\n            \"item\": \"collection\",\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"},{"id":"45756d92-baa6-421b-9cca-2dae22fd44c5","name":"Rate Limit Exceeded","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Replace a collection's data","event":[{"listen":"test","script":{"id":"2033b45e-9f9b-4d61-a32b-327bc4491693","exec":[""],"type":"text/javascript"}}],"id":"a899e133-e630-4e4b-b1d8-86febb96db1f","request":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"{{collectionName}}\",\n            \"schema\": \"{{collectionSchemaUrl}}\"\n        },\n        \"item\": [\n            { \n                // Refer to the collection.json schema file (https://schema.postman.com/json/collection/v2.1.0/collection.json).\n            }\n        ]\n    }\n}"},"url":{"raw":"https://api.getpostman.com/collections/{{collectionId}}","protocol":"https","host":["api","getpostman","com"],"path":["collections","{{collectionId}}"]},"description":"Replaces the contents of a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html). Include the collection's ID values in the request body. If you do not, the endpoint removes the existing items and creates new items.\n\nInclude a `collection` object in the request body that contains the following required properties:\n\n- `info` — An **object** that contains the following properties:\n    - `name` — A **string** value that contains the collection's name.\n    - `schema` — A **string** that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/collection/v1` URL.\n- `item` — An **object** that contains the collection's information.\n    \n\nFor a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n\n- `info` object — Use `\"#/definitions/info\"`.\n- `item` object — Use `\"#/definitions/item\"`.\n    \n\nFor all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). For more information about the Collection Format, see the [Postman Collection Format documentation](https://learning.postman.com/collection-format/getting-started/overview/).\n\n**Note:**\n\nTo copy another collection's contents to the given collection, **remove** all ID values before you pass it in this endpoint. If you do not, this endpoint returns an error. These values include the `id`, `uid`, and `postman_id` values."},"response":[{"id":"79ec06e7-80f3-4f46-b09f-88f12cfb9514","name":"Successful Response","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"info\": {\n            \"_postman_id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"description\": \"This is a test.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\",\n            \"updatedAt\": \"2023-10-09T18:34:58.000Z\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Folder 1\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Test D\",\n                                \"event\": [\n                                    {\n                                        \"listen\": \"prerequest\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                                \"    console.log(response.json());\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    },\n                                    {\n                                        \"listen\": \"test\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                                \"    pm.response.to.have.status(200);\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    }\n                                ],\n                                \"id\": \"c616506e-0676-4d79-88a7-c273b70e9cea\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"apikey\",\n                                        \"apikey\": [\n                                            {\n                                                \"key\": \"value\",\n                                                \"value\": \"XXX\",\n                                                \"type\": \"string\"\n                                            },\n                                            {\n                                                \"key\": \"key\",\n                                                \"value\": \"api-key\",\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id=12345678\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"12345678\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"id\": \"d20b9562-9c85-4f25-bb2d-cfacf7dd85d1\",\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"uid\": \"12345678-d20b9562-9c85-4f25-bb2d-cfacf7dd85d1\"\n                                    }\n                                ],\n                                \"uid\": \"12345678-c616506e-0676-4d79-88a7-c273b70e9cea\"\n                            },\n                            {\n                                \"name\": \"Test E\",\n                                \"id\": \"bf6fd735-125e-486b-b7fb-9f0ae4a0bbc5\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"bearer\",\n                                        \"bearer\": [\n                                            {\n                                                \"key\": \"token\",\n                                                \"value\": \"TEST\",\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"PATCH\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"username\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id=12345678\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"12345678\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"id\": \"86447cb0-aeac-4371-a22f-9f6067fc4dd0\",\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"body\": {\n                                                \"mode\": \"raw\",\n                                                \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                                \"options\": {\n                                                    \"raw\": {\n                                                        \"language\": \"json\"\n                                                    }\n                                                }\n                                            },\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                                        \"uid\": \"12345678-86447cb0-aeac-4371-a22f-9f6067fc4dd0\"\n                                    }\n                                ],\n                                \"uid\": \"12345678-bf6fd735-125e-486b-b7fb-9f0ae4a0bbc5\"\n                            }\n                        ],\n                        \"id\": \"a7046e3e-fb60-44fc-8e32-a4578b854628\",\n                        \"auth\": {\n                            \"type\": \"apikey\",\n                            \"apikey\": [\n                                {\n                                    \"key\": \"value\",\n                                    \"value\": \"XXX\",\n                                    \"type\": \"string\"\n                                },\n                                {\n                                    \"key\": \"key\",\n                                    \"value\": \"api-key\",\n                                    \"type\": \"string\"\n                                }\n                            ]\n                        },\n                        \"event\": [\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ]\n                                }\n                            },\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ]\n                                }\n                            }\n                        ],\n                        \"uid\": \"12345678-a7046e3e-fb60-44fc-8e32-a4578b854628\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"id\": \"bb4a826b-1654-4f24-9ab1-d00e4fc2d743\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"bearer\",\n                                \"bearer\": [\n                                    {\n                                        \"key\": \"token\",\n                                        \"value\": \"TEST\",\n                                        \"type\": \"string\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"GET\",\n                            \"header\": [\n                                {\n                                    \"key\": \"Accept\",\n                                    \"value\": \"application/vnd.example.v1+json\",\n                                    \"type\": \"text\"\n                                }\n                            ],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request?id=12345678\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ],\n                                \"query\": [\n                                    {\n                                        \"key\": \"id\",\n                                        \"value\": \"12345678\",\n                                        \"description\": \"The API's ID.\"\n                                    }\n                                ]\n                            },\n                            \"description\": \"This is a test API.\"\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"5f297469-80d7-4847-a3e2-f596f2e717d8\",\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Host\",\n                                            \"value\": \"postman-echo.com\"\n                                        },\n                                        {\n                                            \"key\": \"user-agent\",\n                                            \"value\": \"curl/7.88.1\"\n                                        },\n                                        {\n                                            \"key\": \"accept\",\n                                            \"value\": \"*/*\"\n                                        },\n                                        {\n                                            \"key\": \"content-type\",\n                                            \"value\": \"application/json\"\n                                        },\n                                        {\n                                            \"key\": \"content-length\",\n                                            \"value\": \"22\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n  \\\"field\\\": \\\"Value\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"date\",\n                                        \"value\": \"Thu, 07 Sep 2023 12:41:59 GMT\"\n                                    },\n                                    {\n                                        \"key\": \"content-type\",\n                                        \"value\": \"application/json; charset=utf-8\"\n                                    },\n                                    {\n                                        \"key\": \"content-length\",\n                                        \"value\": \"468\"\n                                    },\n                                    {\n                                        \"key\": \"etag\",\n                                        \"value\": \"W/\\\"1d4-JuAIw8ssoFCtGzk/UwITxaiSbrc\\\"\"\n                                    },\n                                    {\n                                        \"key\": \"set-cookie\",\n                                        \"value\": \"sails.sid=s%3A6p_NXpI3OZeGE35bI6i5Uq3XgHHxcsdJ.dQVpBE%2BJ9wHWainkqe6F6dkdv7UKoshSZY7sdZ5sbzo; Path=/ HttpOnly\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n  \\\"args\\\": {},\\n  \\\"data\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"files\\\": {},\\n  \\\"form\\\": {},\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9c517-36db304817c774d740619baa\\\",\\n    \\\"content-length\\\": \\\"22\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"json\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\\n\",\n                                \"uid\": \"12345678-5f297469-80d7-4847-a3e2-f596f2e717d8\"\n                            },\n                            {\n                                \"id\": \"789df3cf-9362-40f7-a69e-4adde47d2bc8\",\n                                \"name\": \"Not Found\",\n                                \"originalRequest\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Accept\",\n                                            \"value\": \"application/vnd.example.v1+json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request?id=test-api\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"test-api\"\n                                            }\n                                        ]\n                                    }\n                                },\n                                \"status\": \"Not Found\",\n                                \"code\": 404,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"title\\\": \\\"Not Found\\\",\\n    \\\"detail\\\": \\\"Requested API does not exist\\\",\\n    \\\"type\\\": \\\"about:blank\\\"\\n}\",\n                                \"uid\": \"12345678-789df3cf-9362-40f7-a69e-4adde47d2bc8\"\n                            }\n                        ],\n                        \"uid\": \"12345678-bb4a826b-1654-4f24-9ab1-d00e4fc2d743\"\n                    },\n                    {\n                        \"name\": \"Test B\",\n                        \"id\": \"3e2b5890-8fb9-4a73-bf7b-f0a161502513\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"PUT\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test\\\",\\n    \\\"description\\\": \\\"This is a test.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"c7ffac80-0ab7-45da-a966-10bf469936db\",\n                                \"name\": \"Test B\",\n                                \"originalRequest\": {\n                                    \"method\": \"PUT\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"name\": \"Content-Type\",\n                                            \"value\": \"application/json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                                \"uid\": \"12345678-c7ffac80-0ab7-45da-a966-10bf469936db\"\n                            }\n                        ],\n                        \"uid\": \"12345678-3e2b5890-8fb9-4a73-bf7b-f0a161502513\"\n                    },\n                    {\n                        \"name\": \"Test C\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"id\": \"98518f83-1da1-4d27-8253-432cc923dbae\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"apikey\",\n                                \"apikey\": [\n                                    {\n                                        \"key\": \"value\",\n                                        \"value\": \"XXX\",\n                                        \"type\": \"string\"\n                                    },\n                                    {\n                                        \"key\": \"key\",\n                                        \"value\": \"api-key\",\n                                        \"type\": \"string\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"POST\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"https://postman-echo.com/post\",\n                                \"protocol\": \"https\",\n                                \"host\": [\n                                    \"postman-echo\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"post\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"bb3cb97c-619e-4c81-9a14-139efe81816c\",\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"test-api\\\",\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\",\\n    \\\"is_public\\\": false,\\n    \\\"created_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"updated_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"performance\\\": {\\n        \\\"collection\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\",\\n        \\\"environment\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\"\\n    }\\n}\",\n                                \"uid\": \"12345678-bb3cb97c-619e-4c81-9a14-139efe81816c\"\n                            }\n                        ],\n                        \"uid\": \"12345678-98518f83-1da1-4d27-8253-432cc923dbae\"\n                    }\n                ],\n                \"id\": \"c9a0e43c-6078-4fa0-8cfc-d4dc9e889817\",\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.variables.get(\\\"variable_key\\\");\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ],\n                \"uid\": \"12345678-c9a0e43c-6078-4fa0-8cfc-d4dc9e889817\"\n            },\n            {\n                \"name\": \"Folder 3\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Request 3-A\",\n                                \"id\": \"a22f41d5-32bf-4830-8731-10ad18e88874\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-a22f41d5-32bf-4830-8731-10ad18e88874\"\n                            }\n                        ],\n                        \"id\": \"07f106de-776e-4fd8-9fc1-dc72e4a06a00\",\n                        \"description\": \"Test folder user ID.\",\n                        \"uid\": \"12345678-07f106de-776e-4fd8-9fc1-dc72e4a06a00\"\n                    },\n                    {\n                        \"name\": \"User\",\n                        \"item\": [\n                            {\n                                \"name\": \"New Request\",\n                                \"id\": \"69e1ed6c-9d7b-41cd-aff7-69a468cf8252\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-69e1ed6c-9d7b-41cd-aff7-69a468cf8252\"\n                            },\n                            {\n                                \"name\": \"New Request\",\n                                \"id\": \"8b50cfc3-6af3-446e-a607-8d05e38e1ce9\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-8b50cfc3-6af3-446e-a607-8d05e38e1ce9\"\n                            }\n                        ],\n                        \"id\": \"2c9de017-885f-4c1e-99bf-d10cd870fb0b\",\n                        \"description\": \"Test folder for user information.\",\n                        \"uid\": \"12345678-2c9de017-885f-4c1e-99bf-d10cd870fb0b\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"id\": \"8b29623b-9c9c-4fed-ab9e-85f64524977b\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"GET\",\n                            \"header\": [],\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [],\n                        \"uid\": \"12345678-8b29623b-9c9c-4fed-ab9e-85f64524977b\"\n                    }\n                ],\n                \"id\": \"7d1ea228-82fc-4887-833a-caf88d3182d5\",\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                \"    console.log(response.json());\",\n                                \"});\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ],\n                \"uid\": \"12345678-7d1ea228-82fc-4887-833a-caf88d3182d5\"\n            },\n            {\n                \"name\": \"Test F\",\n                \"id\": \"ff460862-473c-41b8-8be4-a493041c3351\",\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"request\": {\n                    \"method\": \"POST\",\n                    \"header\": [],\n                    \"url\": {\n                        \"raw\": \"\"\n                    }\n                },\n                \"response\": [],\n                \"uid\": \"12345678-ff460862-473c-41b8-8be4-a493041c3351\"\n            }\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"name\": \"Test Collection\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"},{"id":"7392690d-1c97-4550-a409-38e06c0dba99","name":"Copy Another Collection's Contents","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Folder 1\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Test D\",\n                                \"event\": [\n                                    {\n                                        \"listen\": \"prerequest\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                                \"    console.log(response.json());\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    },\n                                    {\n                                        \"listen\": \"test\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                                \"    pm.response.to.have.status(200);\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    }\n                                ],\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"apikey\",\n                                        \"apikey\": [\n                                            {\n                                                \"key\": \"value\",\n                                                \"value\": \"XXX\",\n                                                \"type\": \"string\"\n                                            },\n                                            {\n                                                \"key\": \"key\",\n                                                \"value\": \"api-key\",\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id={{id}}\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"{{id}}\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\"\n                                    }\n                                ]\n                            },\n                            {\n                                \"name\": \"Test E\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"bearer\",\n                                        \"bearer\": [\n                                            {\n                                                \"key\": \"token\",\n                                                \"value\": \"TEST\",\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"PATCH\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"username\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id={{id}}\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"{{id}}\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"body\": {\n                                                \"mode\": \"raw\",\n                                                \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                                \"options\": {\n                                                    \"raw\": {\n                                                        \"language\": \"json\"\n                                                    }\n                                                }\n                                            },\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\"\n                                    }\n                                ]\n                            }\n                        ],\n                        \"auth\": {\n                            \"type\": \"apikey\",\n                            \"apikey\": [\n                                {\n                                    \"key\": \"value\",\n                                    \"value\": \"XXX\",\n                                    \"type\": \"string\"\n                                },\n                                {\n                                    \"key\": \"key\",\n                                    \"value\": \"api-key\",\n                                    \"type\": \"string\"\n                                }\n                            ]\n                        },\n                        \"event\": [\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ]\n                                }\n                            },\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ]\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"bearer\",\n                                \"bearer\": [\n                                    {\n                                        \"key\": \"token\",\n                                        \"value\": \"TEST\",\n                                        \"type\": \"string\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"GET\",\n                            \"header\": [\n                                {\n                                    \"key\": \"Accept\",\n                                    \"value\": \"application/vnd.example.v1+json\",\n                                    \"type\": \"text\"\n                                }\n                            ],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request?id={{id}}\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ],\n                                \"query\": [\n                                    {\n                                        \"key\": \"id\",\n                                        \"value\": \"{{id}}\",\n                                        \"description\": \"The API's ID.\"\n                                    }\n                                ]\n                            },\n                            \"description\": \"This is a test API.\"\n                        },\n                        \"response\": [\n                            {\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Host\",\n                                            \"value\": \"postman-echo.com\"\n                                        },\n                                        {\n                                            \"key\": \"user-agent\",\n                                            \"value\": \"curl/7.88.1\"\n                                        },\n                                        {\n                                            \"key\": \"accept\",\n                                            \"value\": \"*/*\"\n                                        },\n                                        {\n                                            \"key\": \"content-type\",\n                                            \"value\": \"application/json\"\n                                        },\n                                        {\n                                            \"key\": \"content-length\",\n                                            \"value\": \"22\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n  \\\"field\\\": \\\"Value\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"date\",\n                                        \"value\": \"Thu, 07 Sep 2023 12:41:59 GMT\"\n                                    },\n                                    {\n                                        \"key\": \"content-type\",\n                                        \"value\": \"application/json; charset=utf-8\"\n                                    },\n                                    {\n                                        \"key\": \"content-length\",\n                                        \"value\": \"468\"\n                                    },\n                                    {\n                                        \"key\": \"etag\",\n                                        \"value\": \"W/\\\"1d4-JuAIw8ssoFCtGzk/UwITxaiSbrc\\\"\"\n                                    },\n                                    {\n                                        \"key\": \"set-cookie\",\n                                        \"value\": \"sails.sid=s%3A6p_NXpI3OZeGE35bI6i5Uq3XgHHxcsdJ.dQVpBE%2BJ9wHWainkqe6F6dkdv7UKoshSZY7sdZ5sbzo; Path=/ HttpOnly\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n  \\\"args\\\": {},\\n  \\\"data\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"files\\\": {},\\n  \\\"form\\\": {},\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9c517-36db304817c774d740619baa\\\",\\n    \\\"content-length\\\": \\\"22\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"json\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\\n\"\n                            },\n                            {\n                                \"name\": \"Not Found\",\n                                \"originalRequest\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Accept\",\n                                            \"value\": \"application/vnd.example.v1+json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request?id=test-api\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"test-api\"\n                                            }\n                                        ]\n                                    }\n                                },\n                                \"status\": \"Not Found\",\n                                \"code\": 404,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"title\\\": \\\"Not Found\\\",\\n    \\\"detail\\\": \\\"Requested API does not exist\\\",\\n    \\\"type\\\": \\\"about:blank\\\"\\n}\"\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"Test B\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"PUT\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test\\\",\\n    \\\"description\\\": \\\"This is a test.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"name\": \"Test B\",\n                                \"originalRequest\": {\n                                    \"method\": \"PUT\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"name\": \"Content-Type\",\n                                            \"value\": \"application/json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\"\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"Test C\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"apikey\",\n                                \"apikey\": [\n                                    {\n                                        \"key\": \"value\",\n                                        \"value\": \"XXX\",\n                                        \"type\": \"string\"\n                                    },\n                                    {\n                                        \"key\": \"key\",\n                                        \"value\": \"api-key\",\n                                        \"type\": \"string\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"POST\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"https://postman-echo.com/post\",\n                                \"protocol\": \"https\",\n                                \"host\": [\n                                    \"postman-echo\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"post\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"test-api\\\",\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\",\\n    \\\"is_public\\\": false,\\n    \\\"created_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"updated_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"performance\\\": {\\n        \\\"collection\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\",\\n        \\\"environment\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\"\\n    }\\n}\"\n                            }\n                        ]\n                    }\n                ],\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.variables.get(\\\"variable_key\\\");\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ]\n            },\n            {\n                \"name\": \"Folder 3\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Request 3-A\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    }\n                                },\n                                \"response\": []\n                            }\n                        ],\n                        \"description\": \"Test folder user ID.\"\n                    },\n                    {\n                        \"name\": \"User\",\n                        \"item\": [\n                            {\n                                \"name\": \"New Request\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"POST\",\n                                    \"header\": []\n                                },\n                                \"response\": []\n                            },\n                            {\n                                \"name\": \"New Request\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": []\n                                },\n                                \"response\": []\n                            }\n                        ],\n                        \"description\": \"Test folder for user information.\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"GET\",\n                            \"header\": [],\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": []\n                    }\n                ],\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                \"    console.log(response.json());\",\n                                \"});\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ]\n            },\n            {\n                \"name\": \"Test F\",\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"request\": {\n                    \"method\": \"POST\",\n                    \"header\": []\n                },\n                \"response\": []\n            }\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"name\": \"Test Collection\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"},{"id":"96878364-bc15-479d-887b-92ababf07baf","name":"Disable a Request's Query Params","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"info\": {\n            \"_postman_id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"description\": \"This is a test.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\",\n            \"updatedAt\": \"2023-10-09T18:34:58.000Z\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        },\n        \"item\": [\n            {\n                \"name\": \"GET Request with headers and query params\",\n                \"id\": \"7d3bf97a-9a5e-4676-bad4-991d0442c962\",\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"request\": {\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"x-api-key\",\n                            \"value\": \"apikey\",\n                            \"type\": \"text\",\n                            \"disabled\": true\n                        }\n                    ],\n                    \"url\": {\n                        \"raw\": \"https://postman-echo.com/get\",\n                        \"protocol\": \"https\",\n                        \"host\": [\n                            \"postman-echo\",\n                            \"com\"\n                        ],\n                        \"path\": [\n                            \"get\"\n                        ],\n                        \"query\": [\n                            {\n                                \"key\": \"param1\",\n                                \"value\": \"value1\"\n                            },\n                            {\n                                \"key\": \"param2\",\n                                \"value\": \"value2\",\n                                \"disabled\": true\n                            }\n                        ]\n                    }\n                },\n                \"response\": [],\n                \"uid\": \"12345678-42d13443-2f50-47f0-b417-03081a97bf45\"\n            }\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"name\": \"Test Collection\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"},{"id":"cf8e3d2f-f3ba-409f-891f-3d4b06026512","name":"Forbidden","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"info\": {\n            \"_postman_id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"description\": \"This is a test.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\",\n            \"updatedAt\": \"2023-10-09T18:34:58.000Z\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Folder 1\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Test D\",\n                                \"event\": [\n                                    {\n                                        \"listen\": \"prerequest\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                                \"    console.log(response.json());\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    },\n                                    {\n                                        \"listen\": \"test\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                                \"    pm.response.to.have.status(200);\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    }\n                                ],\n                                \"id\": \"c616506e-0676-4d79-88a7-c273b70e9cea\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"apikey\",\n                                        \"apikey\": [\n                                            {\n                                                \"key\": \"value\",\n                                                \"value\": \"XXX\",\n                                                \"type\": \"string\"\n                                            },\n                                            {\n                                                \"key\": \"key\",\n                                                \"value\": \"api-key\",\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id=12345678\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"12345678\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"id\": \"d20b9562-9c85-4f25-bb2d-cfacf7dd85d1\",\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"uid\": \"12345678-d20b9562-9c85-4f25-bb2d-cfacf7dd85d1\"\n                                    }\n                                ],\n                                \"uid\": \"12345678-c616506e-0676-4d79-88a7-c273b70e9cea\"\n                            },\n                            {\n                                \"name\": \"Test E\",\n                                \"id\": \"bf6fd735-125e-486b-b7fb-9f0ae4a0bbc5\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"bearer\",\n                                        \"bearer\": [\n                                            {\n                                                \"key\": \"token\",\n                                                \"value\": \"TEST\",\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"PATCH\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"username\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id=12345678\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"12345678\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"id\": \"86447cb0-aeac-4371-a22f-9f6067fc4dd0\",\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"body\": {\n                                                \"mode\": \"raw\",\n                                                \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                                \"options\": {\n                                                    \"raw\": {\n                                                        \"language\": \"json\"\n                                                    }\n                                                }\n                                            },\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                                        \"uid\": \"12345678-86447cb0-aeac-4371-a22f-9f6067fc4dd0\"\n                                    }\n                                ],\n                                \"uid\": \"12345678-bf6fd735-125e-486b-b7fb-9f0ae4a0bbc5\"\n                            }\n                        ],\n                        \"id\": \"a7046e3e-fb60-44fc-8e32-a4578b854628\",\n                        \"auth\": {\n                            \"type\": \"apikey\",\n                            \"apikey\": [\n                                {\n                                    \"key\": \"value\",\n                                    \"value\": \"XXX\",\n                                    \"type\": \"string\"\n                                },\n                                {\n                                    \"key\": \"key\",\n                                    \"value\": \"api-key\",\n                                    \"type\": \"string\"\n                                }\n                            ]\n                        },\n                        \"event\": [\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ]\n                                }\n                            },\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ]\n                                }\n                            }\n                        ],\n                        \"uid\": \"12345678-a7046e3e-fb60-44fc-8e32-a4578b854628\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"id\": \"bb4a826b-1654-4f24-9ab1-d00e4fc2d743\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"bearer\",\n                                \"bearer\": [\n                                    {\n                                        \"key\": \"token\",\n                                        \"value\": \"TEST\",\n                                        \"type\": \"string\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"GET\",\n                            \"header\": [\n                                {\n                                    \"key\": \"Accept\",\n                                    \"value\": \"application/vnd.example.v1+json\",\n                                    \"type\": \"text\"\n                                }\n                            ],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request?id=12345678\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ],\n                                \"query\": [\n                                    {\n                                        \"key\": \"id\",\n                                        \"value\": \"12345678\",\n                                        \"description\": \"The API's ID.\"\n                                    }\n                                ]\n                            },\n                            \"description\": \"This is a test API.\"\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"5f297469-80d7-4847-a3e2-f596f2e717d8\",\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Host\",\n                                            \"value\": \"postman-echo.com\"\n                                        },\n                                        {\n                                            \"key\": \"user-agent\",\n                                            \"value\": \"curl/7.88.1\"\n                                        },\n                                        {\n                                            \"key\": \"accept\",\n                                            \"value\": \"*/*\"\n                                        },\n                                        {\n                                            \"key\": \"content-type\",\n                                            \"value\": \"application/json\"\n                                        },\n                                        {\n                                            \"key\": \"content-length\",\n                                            \"value\": \"22\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n  \\\"field\\\": \\\"Value\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"date\",\n                                        \"value\": \"Thu, 07 Sep 2023 12:41:59 GMT\"\n                                    },\n                                    {\n                                        \"key\": \"content-type\",\n                                        \"value\": \"application/json; charset=utf-8\"\n                                    },\n                                    {\n                                        \"key\": \"content-length\",\n                                        \"value\": \"468\"\n                                    },\n                                    {\n                                        \"key\": \"etag\",\n                                        \"value\": \"W/\\\"1d4-JuAIw8ssoFCtGzk/UwITxaiSbrc\\\"\"\n                                    },\n                                    {\n                                        \"key\": \"set-cookie\",\n                                        \"value\": \"sails.sid=s%3A6p_NXpI3OZeGE35bI6i5Uq3XgHHxcsdJ.dQVpBE%2BJ9wHWainkqe6F6dkdv7UKoshSZY7sdZ5sbzo; Path=/ HttpOnly\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n  \\\"args\\\": {},\\n  \\\"data\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"files\\\": {},\\n  \\\"form\\\": {},\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9c517-36db304817c774d740619baa\\\",\\n    \\\"content-length\\\": \\\"22\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"json\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\\n\",\n                                \"uid\": \"12345678-5f297469-80d7-4847-a3e2-f596f2e717d8\"\n                            },\n                            {\n                                \"id\": \"789df3cf-9362-40f7-a69e-4adde47d2bc8\",\n                                \"name\": \"Not Found\",\n                                \"originalRequest\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Accept\",\n                                            \"value\": \"application/vnd.example.v1+json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request?id=test-api\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"test-api\"\n                                            }\n                                        ]\n                                    }\n                                },\n                                \"status\": \"Not Found\",\n                                \"code\": 404,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"title\\\": \\\"Not Found\\\",\\n    \\\"detail\\\": \\\"Requested API does not exist\\\",\\n    \\\"type\\\": \\\"about:blank\\\"\\n}\",\n                                \"uid\": \"12345678-789df3cf-9362-40f7-a69e-4adde47d2bc8\"\n                            }\n                        ],\n                        \"uid\": \"12345678-bb4a826b-1654-4f24-9ab1-d00e4fc2d743\"\n                    },\n                    {\n                        \"name\": \"Test B\",\n                        \"id\": \"3e2b5890-8fb9-4a73-bf7b-f0a161502513\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"PUT\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test\\\",\\n    \\\"description\\\": \\\"This is a test.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"c7ffac80-0ab7-45da-a966-10bf469936db\",\n                                \"name\": \"Test B\",\n                                \"originalRequest\": {\n                                    \"method\": \"PUT\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"name\": \"Content-Type\",\n                                            \"value\": \"application/json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                                \"uid\": \"12345678-c7ffac80-0ab7-45da-a966-10bf469936db\"\n                            }\n                        ],\n                        \"uid\": \"12345678-3e2b5890-8fb9-4a73-bf7b-f0a161502513\"\n                    },\n                    {\n                        \"name\": \"Test C\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"id\": \"98518f83-1da1-4d27-8253-432cc923dbae\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"apikey\",\n                                \"apikey\": [\n                                    {\n                                        \"key\": \"value\",\n                                        \"value\": \"XXX\",\n                                        \"type\": \"string\"\n                                    },\n                                    {\n                                        \"key\": \"key\",\n                                        \"value\": \"api-key\",\n                                        \"type\": \"string\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"POST\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"https://postman-echo.com/post\",\n                                \"protocol\": \"https\",\n                                \"host\": [\n                                    \"postman-echo\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"post\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"bb3cb97c-619e-4c81-9a14-139efe81816c\",\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"test-api\\\",\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\",\\n    \\\"is_public\\\": false,\\n    \\\"created_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"updated_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"performance\\\": {\\n        \\\"collection\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\",\\n        \\\"environment\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\"\\n    }\\n}\",\n                                \"uid\": \"12345678-bb3cb97c-619e-4c81-9a14-139efe81816c\"\n                            }\n                        ],\n                        \"uid\": \"12345678-98518f83-1da1-4d27-8253-432cc923dbae\"\n                    }\n                ],\n                \"id\": \"c9a0e43c-6078-4fa0-8cfc-d4dc9e889817\",\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.variables.get(\\\"variable_key\\\");\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ],\n                \"uid\": \"12345678-c9a0e43c-6078-4fa0-8cfc-d4dc9e889817\"\n            },\n            {\n                \"name\": \"Folder 3\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Request 3-A\",\n                                \"id\": \"a22f41d5-32bf-4830-8731-10ad18e88874\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-a22f41d5-32bf-4830-8731-10ad18e88874\"\n                            }\n                        ],\n                        \"id\": \"07f106de-776e-4fd8-9fc1-dc72e4a06a00\",\n                        \"description\": \"Test folder user ID.\",\n                        \"uid\": \"12345678-07f106de-776e-4fd8-9fc1-dc72e4a06a00\"\n                    },\n                    {\n                        \"name\": \"User\",\n                        \"item\": [\n                            {\n                                \"name\": \"New Request\",\n                                \"id\": \"69e1ed6c-9d7b-41cd-aff7-69a468cf8252\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-69e1ed6c-9d7b-41cd-aff7-69a468cf8252\"\n                            },\n                            {\n                                \"name\": \"New Request\",\n                                \"id\": \"8b50cfc3-6af3-446e-a607-8d05e38e1ce9\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-8b50cfc3-6af3-446e-a607-8d05e38e1ce9\"\n                            }\n                        ],\n                        \"id\": \"2c9de017-885f-4c1e-99bf-d10cd870fb0b\",\n                        \"description\": \"Test folder for user information.\",\n                        \"uid\": \"12345678-2c9de017-885f-4c1e-99bf-d10cd870fb0b\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"id\": \"8b29623b-9c9c-4fed-ab9e-85f64524977b\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"GET\",\n                            \"header\": [],\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [],\n                        \"uid\": \"12345678-8b29623b-9c9c-4fed-ab9e-85f64524977b\"\n                    }\n                ],\n                \"id\": \"7d1ea228-82fc-4887-833a-caf88d3182d5\",\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                \"    console.log(response.json());\",\n                                \"});\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ],\n                \"uid\": \"12345678-7d1ea228-82fc-4887-833a-caf88d3182d5\"\n            },\n            {\n                \"name\": \"Test F\",\n                \"id\": \"ff460862-473c-41b8-8be4-a493041c3351\",\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"request\": {\n                    \"method\": \"POST\",\n                    \"header\": [],\n                    \"url\": {\n                        \"raw\": \"\"\n                    }\n                },\n                \"response\": [],\n                \"uid\": \"12345678-ff460862-473c-41b8-8be4-a493041c3351\"\n            }\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You do not have enough permissions to perform this action.\"\n    }\n}"},{"id":"b080bd36-cfaa-48eb-849c-cf4552d1a373","name":"Not Found","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"info\": {\n            \"_postman_id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"description\": \"This is a test.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\",\n            \"updatedAt\": \"2023-10-09T18:34:58.000Z\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Folder 1\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Test D\",\n                                \"event\": [\n                                    {\n                                        \"listen\": \"prerequest\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                                \"    console.log(response.json());\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    },\n                                    {\n                                        \"listen\": \"test\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                                \"    pm.response.to.have.status(200);\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    }\n                                ],\n                                \"id\": \"c616506e-0676-4d79-88a7-c273b70e9cea\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"apikey\",\n                                        \"apikey\": [\n                                            {\n                                                \"key\": \"value\",\n                                                \"value\": \"XXX\",\n                                                \"type\": \"string\"\n                                            },\n                                            {\n                                                \"key\": \"key\",\n                                                \"value\": \"api-key\",\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id=12345678\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"12345678\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"id\": \"d20b9562-9c85-4f25-bb2d-cfacf7dd85d1\",\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"uid\": \"12345678-d20b9562-9c85-4f25-bb2d-cfacf7dd85d1\"\n                                    }\n                                ],\n                                \"uid\": \"12345678-c616506e-0676-4d79-88a7-c273b70e9cea\"\n                            },\n                            {\n                                \"name\": \"Test E\",\n                                \"id\": \"bf6fd735-125e-486b-b7fb-9f0ae4a0bbc5\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"bearer\",\n                                        \"bearer\": [\n                                            {\n                                                \"key\": \"token\",\n                                                \"value\": \"TEST\",\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"PATCH\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"username\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id=12345678\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"12345678\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"id\": \"86447cb0-aeac-4371-a22f-9f6067fc4dd0\",\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"body\": {\n                                                \"mode\": \"raw\",\n                                                \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                                \"options\": {\n                                                    \"raw\": {\n                                                        \"language\": \"json\"\n                                                    }\n                                                }\n                                            },\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                                        \"uid\": \"12345678-86447cb0-aeac-4371-a22f-9f6067fc4dd0\"\n                                    }\n                                ],\n                                \"uid\": \"12345678-bf6fd735-125e-486b-b7fb-9f0ae4a0bbc5\"\n                            }\n                        ],\n                        \"id\": \"a7046e3e-fb60-44fc-8e32-a4578b854628\",\n                        \"auth\": {\n                            \"type\": \"apikey\",\n                            \"apikey\": [\n                                {\n                                    \"key\": \"value\",\n                                    \"value\": \"XXX\",\n                                    \"type\": \"string\"\n                                },\n                                {\n                                    \"key\": \"key\",\n                                    \"value\": \"api-key\",\n                                    \"type\": \"string\"\n                                }\n                            ]\n                        },\n                        \"event\": [\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ]\n                                }\n                            },\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ]\n                                }\n                            }\n                        ],\n                        \"uid\": \"12345678-a7046e3e-fb60-44fc-8e32-a4578b854628\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"id\": \"bb4a826b-1654-4f24-9ab1-d00e4fc2d743\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"bearer\",\n                                \"bearer\": [\n                                    {\n                                        \"key\": \"token\",\n                                        \"value\": \"TEST\",\n                                        \"type\": \"string\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"GET\",\n                            \"header\": [\n                                {\n                                    \"key\": \"Accept\",\n                                    \"value\": \"application/vnd.example.v1+json\",\n                                    \"type\": \"text\"\n                                }\n                            ],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request?id=12345678\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ],\n                                \"query\": [\n                                    {\n                                        \"key\": \"id\",\n                                        \"value\": \"12345678\",\n                                        \"description\": \"The API's ID.\"\n                                    }\n                                ]\n                            },\n                            \"description\": \"This is a test API.\"\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"5f297469-80d7-4847-a3e2-f596f2e717d8\",\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Host\",\n                                            \"value\": \"postman-echo.com\"\n                                        },\n                                        {\n                                            \"key\": \"user-agent\",\n                                            \"value\": \"curl/7.88.1\"\n                                        },\n                                        {\n                                            \"key\": \"accept\",\n                                            \"value\": \"*/*\"\n                                        },\n                                        {\n                                            \"key\": \"content-type\",\n                                            \"value\": \"application/json\"\n                                        },\n                                        {\n                                            \"key\": \"content-length\",\n                                            \"value\": \"22\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n  \\\"field\\\": \\\"Value\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"date\",\n                                        \"value\": \"Thu, 07 Sep 2023 12:41:59 GMT\"\n                                    },\n                                    {\n                                        \"key\": \"content-type\",\n                                        \"value\": \"application/json; charset=utf-8\"\n                                    },\n                                    {\n                                        \"key\": \"content-length\",\n                                        \"value\": \"468\"\n                                    },\n                                    {\n                                        \"key\": \"etag\",\n                                        \"value\": \"W/\\\"1d4-JuAIw8ssoFCtGzk/UwITxaiSbrc\\\"\"\n                                    },\n                                    {\n                                        \"key\": \"set-cookie\",\n                                        \"value\": \"sails.sid=s%3A6p_NXpI3OZeGE35bI6i5Uq3XgHHxcsdJ.dQVpBE%2BJ9wHWainkqe6F6dkdv7UKoshSZY7sdZ5sbzo; Path=/ HttpOnly\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n  \\\"args\\\": {},\\n  \\\"data\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"files\\\": {},\\n  \\\"form\\\": {},\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9c517-36db304817c774d740619baa\\\",\\n    \\\"content-length\\\": \\\"22\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"json\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\\n\",\n                                \"uid\": \"12345678-5f297469-80d7-4847-a3e2-f596f2e717d8\"\n                            },\n                            {\n                                \"id\": \"789df3cf-9362-40f7-a69e-4adde47d2bc8\",\n                                \"name\": \"Not Found\",\n                                \"originalRequest\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Accept\",\n                                            \"value\": \"application/vnd.example.v1+json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request?id=test-api\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"test-api\"\n                                            }\n                                        ]\n                                    }\n                                },\n                                \"status\": \"Not Found\",\n                                \"code\": 404,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"title\\\": \\\"Not Found\\\",\\n    \\\"detail\\\": \\\"Requested API does not exist\\\",\\n    \\\"type\\\": \\\"about:blank\\\"\\n}\",\n                                \"uid\": \"12345678-789df3cf-9362-40f7-a69e-4adde47d2bc8\"\n                            }\n                        ],\n                        \"uid\": \"12345678-bb4a826b-1654-4f24-9ab1-d00e4fc2d743\"\n                    },\n                    {\n                        \"name\": \"Test B\",\n                        \"id\": \"3e2b5890-8fb9-4a73-bf7b-f0a161502513\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"PUT\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test\\\",\\n    \\\"description\\\": \\\"This is a test.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"c7ffac80-0ab7-45da-a966-10bf469936db\",\n                                \"name\": \"Test B\",\n                                \"originalRequest\": {\n                                    \"method\": \"PUT\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"name\": \"Content-Type\",\n                                            \"value\": \"application/json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                                \"uid\": \"12345678-c7ffac80-0ab7-45da-a966-10bf469936db\"\n                            }\n                        ],\n                        \"uid\": \"12345678-3e2b5890-8fb9-4a73-bf7b-f0a161502513\"\n                    },\n                    {\n                        \"name\": \"Test C\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"id\": \"98518f83-1da1-4d27-8253-432cc923dbae\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"apikey\",\n                                \"apikey\": [\n                                    {\n                                        \"key\": \"value\",\n                                        \"value\": \"XXX\",\n                                        \"type\": \"string\"\n                                    },\n                                    {\n                                        \"key\": \"key\",\n                                        \"value\": \"api-key\",\n                                        \"type\": \"string\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"POST\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"https://postman-echo.com/post\",\n                                \"protocol\": \"https\",\n                                \"host\": [\n                                    \"postman-echo\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"post\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"bb3cb97c-619e-4c81-9a14-139efe81816c\",\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"test-api\\\",\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\",\\n    \\\"is_public\\\": false,\\n    \\\"created_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"updated_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"performance\\\": {\\n        \\\"collection\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\",\\n        \\\"environment\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\"\\n    }\\n}\",\n                                \"uid\": \"12345678-bb3cb97c-619e-4c81-9a14-139efe81816c\"\n                            }\n                        ],\n                        \"uid\": \"12345678-98518f83-1da1-4d27-8253-432cc923dbae\"\n                    }\n                ],\n                \"id\": \"c9a0e43c-6078-4fa0-8cfc-d4dc9e889817\",\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.variables.get(\\\"variable_key\\\");\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ],\n                \"uid\": \"12345678-c9a0e43c-6078-4fa0-8cfc-d4dc9e889817\"\n            },\n            {\n                \"name\": \"Folder 3\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Request 3-A\",\n                                \"id\": \"a22f41d5-32bf-4830-8731-10ad18e88874\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-a22f41d5-32bf-4830-8731-10ad18e88874\"\n                            }\n                        ],\n                        \"id\": \"07f106de-776e-4fd8-9fc1-dc72e4a06a00\",\n                        \"description\": \"Test folder user ID.\",\n                        \"uid\": \"12345678-07f106de-776e-4fd8-9fc1-dc72e4a06a00\"\n                    },\n                    {\n                        \"name\": \"User\",\n                        \"item\": [\n                            {\n                                \"name\": \"New Request\",\n                                \"id\": \"69e1ed6c-9d7b-41cd-aff7-69a468cf8252\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-69e1ed6c-9d7b-41cd-aff7-69a468cf8252\"\n                            },\n                            {\n                                \"name\": \"New Request\",\n                                \"id\": \"8b50cfc3-6af3-446e-a607-8d05e38e1ce9\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-8b50cfc3-6af3-446e-a607-8d05e38e1ce9\"\n                            }\n                        ],\n                        \"id\": \"2c9de017-885f-4c1e-99bf-d10cd870fb0b\",\n                        \"description\": \"Test folder for user information.\",\n                        \"uid\": \"12345678-2c9de017-885f-4c1e-99bf-d10cd870fb0b\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"id\": \"8b29623b-9c9c-4fed-ab9e-85f64524977b\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"GET\",\n                            \"header\": [],\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [],\n                        \"uid\": \"12345678-8b29623b-9c9c-4fed-ab9e-85f64524977b\"\n                    }\n                ],\n                \"id\": \"7d1ea228-82fc-4887-833a-caf88d3182d5\",\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                \"    console.log(response.json());\",\n                                \"});\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ],\n                \"uid\": \"12345678-7d1ea228-82fc-4887-833a-caf88d3182d5\"\n            },\n            {\n                \"name\": \"Test F\",\n                \"id\": \"ff460862-473c-41b8-8be4-a493041c3351\",\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"request\": {\n                    \"method\": \"POST\",\n                    \"header\": [],\n                    \"url\": {\n                        \"raw\": \"\"\n                    }\n                },\n                \"response\": [],\n                \"uid\": \"12345678-ff460862-473c-41b8-8be4-a493041c3351\"\n            }\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified item does not exist.\",\n        \"details\": {\n            \"item\": \"collection\",\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"},{"id":"fe7fdaae-a600-49e4-81a2-ba7b4858bf61","name":"Malformed Request","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\"\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"malformedRequestError\",\n        \"message\": \"Found 2 errors with the supplied collection.\",\n        \"details\": [\n            \": must have required property 'item'\",\n            \"info: must have required property 'schema'\"\n        ]\n    }\n}"},{"id":"c6233521-320c-4657-bac9-60336d2264de","name":"Collection ID Mismatch","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Test POST Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"POST\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"collectionMismatchError\",\n        \"message\": \"The collection ID in the path does not match the collection ID in the request body.\"\n    }\n}"},{"id":"ffebbac4-3f59-4a46-848f-68ab0d80cea7","name":"Rate Limit Exceeded","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"info\": {\n            \"_postman_id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"description\": \"This is a test.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\",\n            \"updatedAt\": \"2023-10-09T18:34:58.000Z\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Folder 1\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Test D\",\n                                \"event\": [\n                                    {\n                                        \"listen\": \"prerequest\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                                \"    console.log(response.json());\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    },\n                                    {\n                                        \"listen\": \"test\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                                \"    pm.response.to.have.status(200);\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    }\n                                ],\n                                \"id\": \"c616506e-0676-4d79-88a7-c273b70e9cea\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"apikey\",\n                                        \"apikey\": [\n                                            {\n                                                \"key\": \"value\",\n                                                \"value\": \"XXX\",\n                                                \"type\": \"string\"\n                                            },\n                                            {\n                                                \"key\": \"key\",\n                                                \"value\": \"api-key\",\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id=12345678\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"12345678\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"id\": \"d20b9562-9c85-4f25-bb2d-cfacf7dd85d1\",\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"uid\": \"12345678-d20b9562-9c85-4f25-bb2d-cfacf7dd85d1\"\n                                    }\n                                ],\n                                \"uid\": \"12345678-c616506e-0676-4d79-88a7-c273b70e9cea\"\n                            },\n                            {\n                                \"name\": \"Test E\",\n                                \"id\": \"bf6fd735-125e-486b-b7fb-9f0ae4a0bbc5\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"bearer\",\n                                        \"bearer\": [\n                                            {\n                                                \"key\": \"token\",\n                                                \"value\": \"TEST\",\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"PATCH\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"username\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id=12345678\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"12345678\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"id\": \"86447cb0-aeac-4371-a22f-9f6067fc4dd0\",\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"body\": {\n                                                \"mode\": \"raw\",\n                                                \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                                \"options\": {\n                                                    \"raw\": {\n                                                        \"language\": \"json\"\n                                                    }\n                                                }\n                                            },\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                                        \"uid\": \"12345678-86447cb0-aeac-4371-a22f-9f6067fc4dd0\"\n                                    }\n                                ],\n                                \"uid\": \"12345678-bf6fd735-125e-486b-b7fb-9f0ae4a0bbc5\"\n                            }\n                        ],\n                        \"id\": \"a7046e3e-fb60-44fc-8e32-a4578b854628\",\n                        \"auth\": {\n                            \"type\": \"apikey\",\n                            \"apikey\": [\n                                {\n                                    \"key\": \"value\",\n                                    \"value\": \"XXX\",\n                                    \"type\": \"string\"\n                                },\n                                {\n                                    \"key\": \"key\",\n                                    \"value\": \"api-key\",\n                                    \"type\": \"string\"\n                                }\n                            ]\n                        },\n                        \"event\": [\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ]\n                                }\n                            },\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ]\n                                }\n                            }\n                        ],\n                        \"uid\": \"12345678-a7046e3e-fb60-44fc-8e32-a4578b854628\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"id\": \"bb4a826b-1654-4f24-9ab1-d00e4fc2d743\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"bearer\",\n                                \"bearer\": [\n                                    {\n                                        \"key\": \"token\",\n                                        \"value\": \"TEST\",\n                                        \"type\": \"string\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"GET\",\n                            \"header\": [\n                                {\n                                    \"key\": \"Accept\",\n                                    \"value\": \"application/vnd.example.v1+json\",\n                                    \"type\": \"text\"\n                                }\n                            ],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request?id=12345678\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ],\n                                \"query\": [\n                                    {\n                                        \"key\": \"id\",\n                                        \"value\": \"12345678\",\n                                        \"description\": \"The API's ID.\"\n                                    }\n                                ]\n                            },\n                            \"description\": \"This is a test API.\"\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"5f297469-80d7-4847-a3e2-f596f2e717d8\",\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Host\",\n                                            \"value\": \"postman-echo.com\"\n                                        },\n                                        {\n                                            \"key\": \"user-agent\",\n                                            \"value\": \"curl/7.88.1\"\n                                        },\n                                        {\n                                            \"key\": \"accept\",\n                                            \"value\": \"*/*\"\n                                        },\n                                        {\n                                            \"key\": \"content-type\",\n                                            \"value\": \"application/json\"\n                                        },\n                                        {\n                                            \"key\": \"content-length\",\n                                            \"value\": \"22\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n  \\\"field\\\": \\\"Value\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"date\",\n                                        \"value\": \"Thu, 07 Sep 2023 12:41:59 GMT\"\n                                    },\n                                    {\n                                        \"key\": \"content-type\",\n                                        \"value\": \"application/json; charset=utf-8\"\n                                    },\n                                    {\n                                        \"key\": \"content-length\",\n                                        \"value\": \"468\"\n                                    },\n                                    {\n                                        \"key\": \"etag\",\n                                        \"value\": \"W/\\\"1d4-JuAIw8ssoFCtGzk/UwITxaiSbrc\\\"\"\n                                    },\n                                    {\n                                        \"key\": \"set-cookie\",\n                                        \"value\": \"sails.sid=s%3A6p_NXpI3OZeGE35bI6i5Uq3XgHHxcsdJ.dQVpBE%2BJ9wHWainkqe6F6dkdv7UKoshSZY7sdZ5sbzo; Path=/ HttpOnly\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n  \\\"args\\\": {},\\n  \\\"data\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"files\\\": {},\\n  \\\"form\\\": {},\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9c517-36db304817c774d740619baa\\\",\\n    \\\"content-length\\\": \\\"22\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"json\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\\n\",\n                                \"uid\": \"12345678-5f297469-80d7-4847-a3e2-f596f2e717d8\"\n                            },\n                            {\n                                \"id\": \"789df3cf-9362-40f7-a69e-4adde47d2bc8\",\n                                \"name\": \"Not Found\",\n                                \"originalRequest\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Accept\",\n                                            \"value\": \"application/vnd.example.v1+json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request?id=test-api\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"test-api\"\n                                            }\n                                        ]\n                                    }\n                                },\n                                \"status\": \"Not Found\",\n                                \"code\": 404,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"title\\\": \\\"Not Found\\\",\\n    \\\"detail\\\": \\\"Requested API does not exist\\\",\\n    \\\"type\\\": \\\"about:blank\\\"\\n}\",\n                                \"uid\": \"12345678-789df3cf-9362-40f7-a69e-4adde47d2bc8\"\n                            }\n                        ],\n                        \"uid\": \"12345678-bb4a826b-1654-4f24-9ab1-d00e4fc2d743\"\n                    },\n                    {\n                        \"name\": \"Test B\",\n                        \"id\": \"3e2b5890-8fb9-4a73-bf7b-f0a161502513\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"PUT\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test\\\",\\n    \\\"description\\\": \\\"This is a test.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"c7ffac80-0ab7-45da-a966-10bf469936db\",\n                                \"name\": \"Test B\",\n                                \"originalRequest\": {\n                                    \"method\": \"PUT\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"name\": \"Content-Type\",\n                                            \"value\": \"application/json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                                \"uid\": \"12345678-c7ffac80-0ab7-45da-a966-10bf469936db\"\n                            }\n                        ],\n                        \"uid\": \"12345678-3e2b5890-8fb9-4a73-bf7b-f0a161502513\"\n                    },\n                    {\n                        \"name\": \"Test C\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"id\": \"98518f83-1da1-4d27-8253-432cc923dbae\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"apikey\",\n                                \"apikey\": [\n                                    {\n                                        \"key\": \"value\",\n                                        \"value\": \"XXX\",\n                                        \"type\": \"string\"\n                                    },\n                                    {\n                                        \"key\": \"key\",\n                                        \"value\": \"api-key\",\n                                        \"type\": \"string\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"POST\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"https://postman-echo.com/post\",\n                                \"protocol\": \"https\",\n                                \"host\": [\n                                    \"postman-echo\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"post\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"bb3cb97c-619e-4c81-9a14-139efe81816c\",\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"test-api\\\",\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\",\\n    \\\"is_public\\\": false,\\n    \\\"created_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"updated_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"performance\\\": {\\n        \\\"collection\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\",\\n        \\\"environment\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\"\\n    }\\n}\",\n                                \"uid\": \"12345678-bb3cb97c-619e-4c81-9a14-139efe81816c\"\n                            }\n                        ],\n                        \"uid\": \"12345678-98518f83-1da1-4d27-8253-432cc923dbae\"\n                    }\n                ],\n                \"id\": \"c9a0e43c-6078-4fa0-8cfc-d4dc9e889817\",\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.variables.get(\\\"variable_key\\\");\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ],\n                \"uid\": \"12345678-c9a0e43c-6078-4fa0-8cfc-d4dc9e889817\"\n            },\n            {\n                \"name\": \"Folder 3\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Request 3-A\",\n                                \"id\": \"a22f41d5-32bf-4830-8731-10ad18e88874\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-a22f41d5-32bf-4830-8731-10ad18e88874\"\n                            }\n                        ],\n                        \"id\": \"07f106de-776e-4fd8-9fc1-dc72e4a06a00\",\n                        \"description\": \"Test folder user ID.\",\n                        \"uid\": \"12345678-07f106de-776e-4fd8-9fc1-dc72e4a06a00\"\n                    },\n                    {\n                        \"name\": \"User\",\n                        \"item\": [\n                            {\n                                \"name\": \"New Request\",\n                                \"id\": \"69e1ed6c-9d7b-41cd-aff7-69a468cf8252\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-69e1ed6c-9d7b-41cd-aff7-69a468cf8252\"\n                            },\n                            {\n                                \"name\": \"New Request\",\n                                \"id\": \"8b50cfc3-6af3-446e-a607-8d05e38e1ce9\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-8b50cfc3-6af3-446e-a607-8d05e38e1ce9\"\n                            }\n                        ],\n                        \"id\": \"2c9de017-885f-4c1e-99bf-d10cd870fb0b\",\n                        \"description\": \"Test folder for user information.\",\n                        \"uid\": \"12345678-2c9de017-885f-4c1e-99bf-d10cd870fb0b\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"id\": \"8b29623b-9c9c-4fed-ab9e-85f64524977b\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"GET\",\n                            \"header\": [],\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [],\n                        \"uid\": \"12345678-8b29623b-9c9c-4fed-ab9e-85f64524977b\"\n                    }\n                ],\n                \"id\": \"7d1ea228-82fc-4887-833a-caf88d3182d5\",\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                \"    console.log(response.json());\",\n                                \"});\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ],\n                \"uid\": \"12345678-7d1ea228-82fc-4887-833a-caf88d3182d5\"\n            },\n            {\n                \"name\": \"Test F\",\n                \"id\": \"ff460862-473c-41b8-8be4-a493041c3351\",\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"request\": {\n                    \"method\": \"POST\",\n                    \"header\": [],\n                    \"url\": {\n                        \"raw\": \"\"\n                    }\n                },\n                \"response\": [],\n                \"uid\": \"12345678-ff460862-473c-41b8-8be4-a493041c3351\"\n            }\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Update part of a collection","id":"de10ad93-b816-480d-b696-587c323f4461","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"{{collectionName}}\",\n            \"description\": \"{{collectionDescription}}\"\n        },\n        \"variables\": [\n            // Refer to \"#/definitions/variable\" in the collection.json schema file (https://schema.postman.com/json/collection/v2.1.0/collection.json).\n        ],\n        \"auth\": {\n            // Refer to \"#/definitions/auth-attribute\" in the collection.json schema file (https://schema.postman.com/json/collection/v2.1.0/collection.json).\n        },\n        \"events\": [\n            // Refer to \"#/definitions/event\" in the collection.json schema file (https://schema.postman.com/json/collection/v2.1.0/collection.json).\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/{{collectionId}}","protocol":"https","host":["api","getpostman","com"],"path":["collections","{{collectionId}}"]},"description":"Updates specific collection information, such as its name, events, or its variables. For more information about the `auth`, `variables`, and `events` properties, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n\n- For `variables`, refer to `\"#/definitions/variable\"`.\n- For `auth`, refer to `\"#/definitions/auth-attribute\"`.\n- For `events`, refer to `\"#/definitions/event\"`.\n    \n\nFor more information about the Collection Format, see the [Postman Collection Format documentation](https://learning.postman.com/collection-format/getting-started/overview/)."},"response":[{"id":"789c45ef-bd51-4333-9427-7518cc7cc9f0","name":"Update Info","originalRequest":{"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection v2\",\n            \"description\": \"This is a sample collection that makes a request to the Postman Echo service. It returns a list of request headers sent by an HTTP client.\"\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"name\": \"Test Collection v2\",\n        \"description\": \"This is a sample collection that makes a request to the Postman Echo service. It returns a list of request headers sent by an HTTP client.\"\n    }\n}"},{"id":"e42429c6-5d9a-4ff2-9cf1-9066b3e52356","name":"Update Variables","originalRequest":{"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"variables\": [\n            {\n                \"key\": \"userId\",\n                \"type\": \"integer\",\n                \"value\": 12345678,\n                \"disabled\": true\n            }\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"name\": \"Test Collection v2\",\n        \"description\": \"This is a sample collection that makes a request to the Postman Echo service. It returns a list of request headers sent by an HTTP client.\"\n    }\n}"},{"id":"d56d7614-5ff6-4758-8afd-83670324047f","name":"Update Events","originalRequest":{"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"events\": [\n            {\n                \"listen\": \"prerequest\",\n                \"script\": {\n                    \"id\": \"e74ce0d0-5acd-44b6-a3ae-95f617c1546e\",\n                    \"type\": \"text/javascript\",\n                    \"exec\": [\n                        \"\"\n                    ]\n                },\n                \"disabled\": false\n            },\n            {\n                \"listen\": \"test\",\n                \"script\": {\n                    \"id\": \"28dc4f71-73bd-49cb-a6bd-8b41a06a3b36\",\n                    \"type\": \"text/javascript\",\n                    \"exec\": [\n                        \"\"\n                    ]\n                },\n                \"disabled\": true\n            }\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"name\": \"Test Collection v2\",\n        \"description\": \"This is a sample collection that makes a request to the Postman Echo service. It returns a list of request headers sent by an HTTP client.\"\n    }\n}"},{"id":"2c153ba1-3c21-47f6-9d10-9cb09bc4f8ef","name":"Update Auth","originalRequest":{"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"auth\": {\n            \"type\": \"apikey\",\n            \"apikey\": [\n                {\n                    \"key\": \"value\",\n                    \"value\": \"PMAK-XXX\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"key\": \"key\",\n                    \"value\": \"api-key\",\n                    \"type\": \"string\"\n                }\n            ]\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"name\": \"Test Collection v2\",\n        \"description\": \"This is a sample collection that makes a request to the Postman Echo service. It returns a list of request headers sent by an HTTP client.\"\n    }\n}"},{"id":"0a4bd13c-ee62-416b-99db-908f7d810d1f","name":"Invalid variables Parameter","originalRequest":{"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"variables\": [\n            {\n                \"key\": \"userId\",\n                \"type\": \"integer\",\n                \"value\": 12345678,\n                \"disabled\": true,\n                \"property\": \"test\"\n            }\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"badRequest\",\n        \"message\": \"Invalid parameters: ('property') for key: 'collection.variables'\"\n    }\n}"},{"id":"8b27ae07-be1b-4e4e-99b6-31118ca88bfc","name":"Missing variables Parameter","originalRequest":{"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"variables\": [\n            {\n                \"key\": \"userId\",\n                \"value\": 12345678\n            }\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"badRequest\",\n        \"message\": \"Parameters required: ('type') for key: 'collection.variables'\"\n    }\n}"},{"id":"89e56951-8d8d-4bb8-a21a-b298ade0cfdf","name":"Invalid events Parameter","originalRequest":{"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"events\": [\n            {\n                \"listen\": \"prerequest\",\n                \"script\": {\n                    \"id\": \"e74ce0d0-5acd-44b6-a3ae-95f617c1546e\",\n                    \"property\": \"test\"\n                },\n                \"disabled\": false\n            }\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"badRequest\",\n        \"message\": \"Invalid parameters: ('property') for key: 'collection.events.script'\"\n    }\n}"},{"id":"391760a0-f109-4d3f-8c88-2324913edeb9","name":"Missing events Parameter","originalRequest":{"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"events\": [\n            {\n                \"listen\": \"prerequest\",\n                \"script\": {\n                    \"id\": \"e74ce0d0-5acd-44b6-a3ae-95f617c1546e\"\n                }\n            }\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"badRequest\",\n        \"message\": \"Parameters required: ('type') for key: 'collection.events.script'\"\n    }\n}"},{"id":"5bd1cf06-f14c-4a05-8c42-4fcb6346386e","name":"Missing auth Parameter","originalRequest":{"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"auth\": {\n            \"type\": \"apikey\"\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"badRequest\",\n        \"message\": \"Parameters required: ('apikey') for key: 'collection.auth'\"\n    }\n}"},{"id":"8f8c590c-e28d-4010-a8c8-676cd65bd354","name":"Not Found","originalRequest":{"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection v2\",\n            \"description\": \"This is a sample collection that makes a request to the Postman Echo service. It returns a list of request headers sent by an HTTP client.\"\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified item does not exist.\",\n        \"details\": {\n            \"item\": \"collection\",\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"},{"id":"0b1082d9-1872-43d9-acdf-d4c156a4cf81","name":"Forbidden","originalRequest":{"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection v2\",\n            \"description\": \"This is a sample collection that makes a request to the Postman Echo service. It returns a list of request headers sent by an HTTP client.\"\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You do not have enough permissions to perform this action.\"\n    }\n}"},{"id":"f9601799-57fe-4038-acbb-bf08f0589597","name":"Rate Limit Exceeded","originalRequest":{"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection v2\",\n            \"description\": \"This is a sample collection that makes a request to the Postman Echo service. It returns a list of request headers sent by an HTTP client.\"\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["collections","12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Get all collections","event":[{"listen":"test","script":{"id":"fd467795-fc87-40a8-9c1d-a44b1b2e92ee","exec":[""],"type":"text/javascript"}}],"id":"a40897ce-ee5c-4e8a-a906-1c94cc473286","request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections","protocol":"https","host":["api","getpostman","com"],"path":["collections"],"query":[{"key":"name","value":"{{collectionName}}","description":"Optional. Filter results by collections that match the given name.","disabled":true},{"key":"workspace","value":"{{workspaceId}}","description":"Optional. A workspace ID.","disabled":true}]},"description":"Gets all of your [collections](https://www.getpostman.com/docs/collections). The response includes all of your subscribed collections."},"response":[{"id":"7f36dc24-beaf-404a-9f16-d3df5c9cdd48","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections","protocol":"https","host":["api","getpostman","com"],"path":["collections"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. A workspace ID.","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"collections\": [\n        {\n            \"id\": \"dac5eac9-148d-a32e-b76b-3edee9da28f7\",\n            \"name\": \"Cloud API\",\n            \"owner\": \"12345678\",\n            \"createdAt\": \"2022-04-12T10:29:46.000Z\",\n            \"updatedAt\": \"2022-04-12T10:29:56.000Z\",\n            \"uid\": \"12345678-dac5eac9-148d-a32e-b76b-3edee9da28f7\",\n            \"isPublic\": true\n        },\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"owner\": \"12345678\",\n            \"createdAt\": \"2022-01-13T10:21:46.000Z\",\n            \"updatedAt\": \"2022-02-12T11:29:56.000Z\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"isPublic\": false,\n            \"fork\": {\n                \"label\": \"Test Fork\",\n                \"createdAt\": \"2022-06-16T19:51:44.069Z\",\n                \"from\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        },\n        {\n            \"id\": \"f695cab7-6878-eb55-7943-ad88e1ccfd65\",\n            \"name\": \"Postman Echo\",\n            \"owner\": \"12345678\",\n            \"createdAt\": \"2021-04-11T09:18:26.000Z\",\n            \"updatedAt\": \"2022-05-01T15:29:32.000Z\",\n            \"uid\": \"12345678-f695cab7-6878-eb55-7943-ad88e1ccfd65\",\n            \"isPublic\": true\n        }\n    ]\n}"},{"id":"ca1f3fd4-6c95-4860-88d2-7e6171e4623d","name":"Filter by name","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections?name=Test Collection","protocol":"https","host":["api","getpostman","com"],"path":["collections"],"query":[{"key":"name","value":"Test Collection"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"collections\": [\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"owner\": \"12345678\",\n            \"createdAt\": \"2022-01-13T10:21:46.000Z\",\n            \"updatedAt\": \"2022-02-12T11:29:56.000Z\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"isPublic\": false,\n            \"fork\": {\n                \"label\": \"Test Fork\",\n                \"createdAt\": \"2022-06-16T19:51:44.069Z\",\n                \"from\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        }\n    ]\n}"},{"id":"2f716d9d-b970-4567-912b-38c13df2f940","name":"Filter by Workspace","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["collections"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. A workspace ID."}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"collections\": [\n        {\n            \"id\": \"dac5eac9-148d-a32e-b76b-3edee9da28f7\",\n            \"name\": \"Cloud API\",\n            \"owner\": \"12345678\",\n            \"createdAt\": \"2022-04-12T10:29:46.000Z\",\n            \"updatedAt\": \"2022-04-12T10:29:56.000Z\",\n            \"uid\": \"12345678-dac5eac9-148d-a32e-b76b-3edee9da28f7\",\n            \"isPublic\": true\n        }\n    ]\n}"},{"id":"1f498c52-bec0-49d9-bc7f-43d62122e83c","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/collections","protocol":"https","host":["api","getpostman","com"],"path":["collections"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. A workspace ID.","disabled":true}]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]}],"id":"d8f0e52d-98ce-4376-97b9-b7dc97ec6b1b","description":"The `/collections` endpoints let you manage your [collections](https://learning.postman.com/docs/sending-requests/intro-to-collections/)."},{"name":"Environments","item":[{"name":"Get an environment","event":[{"listen":"test","script":{"id":"90c20ea2-50c5-4f73-9756-c0d1475d1992","exec":[""],"type":"text/javascript"}}],"id":"6e992e7c-9d22-4b68-a930-f472e8bc4897","request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/environments/{{environmentId}}","protocol":"https","host":["api","getpostman","com"],"path":["environments","{{environmentId}}"]},"description":"Gets information about an environment."},"response":[{"id":"cf71f89f-93c9-4f2f-adbf-2b52081e46eb","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e","protocol":"https","host":["api","getpostman","com"],"path":["environments","12345678-5daabc50-8451-43f6-922d-96b403b4f28e"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"environment\": {\n        \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"name\": \"Test Environment\",\n        \"owner\": \"12345678\",\n        \"createdAt\": \"2020-11-05T13:59:22.000Z\",\n        \"updatedAt\": \"2020-11-05T13:59:23.000Z\",\n        \"values\": [\n            {\n                \"key\": \"apiKey\",\n                \"value\": \"PMAK-1234-5678-0987-6543\",\n                \"enabled\": true,\n                \"type\": \"secret\"\n            }\n        ],\n        \"isPublic\": false\n    }\n}"},{"id":"5fadaa3c-8c22-4872-ad1b-cc4d0c6e1e27","name":"Not Found","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e","protocol":"https","host":["api","getpostman","com"],"path":["environments","12345678-5daabc50-8451-43f6-922d-96b403b4f28e"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the environment you are looking for\"\n    }\n}"},{"id":"7abe35d9-1564-469d-bfdb-a4da69b0fac3","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e","protocol":"https","host":["api","getpostman","com"],"path":["environments","12345678-5daabc50-8451-43f6-922d-96b403b4f28e"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Delete an environment","id":"a9c04e48-32fa-4ac6-98c4-b8d10dbf22fc","request":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/environments/{{environmentId}}","protocol":"https","host":["api","getpostman","com"],"path":["environments","{{environmentId}}"]},"description":"Deletes an environment."},"response":[{"id":"19e5e2eb-14f0-4e94-b0bc-afe099b5ff68","name":"Successful Response","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e","protocol":"https","host":["api","getpostman","com"],"path":["environments","12345678-5daabc50-8451-43f6-922d-96b403b4f28e"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"environment\": {\n        \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"},{"id":"f1760245-46d3-4be5-87d2-011c5d160a5c","name":"Not Found","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e","protocol":"https","host":["api","getpostman","com"],"path":["environments","12345678-5daabc50-8451-43f6-922d-96b403b4f28e"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified environment does not exist.\"\n    }\n}"},{"id":"0dd4a5c7-c1e3-4d14-bc90-077187cf5491","name":"Rate Limit Exceeded","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e","protocol":"https","host":["api","getpostman","com"],"path":["environments","12345678-5daabc50-8451-43f6-922d-96b403b4f28e"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Create an environment","id":"324fb68f-382c-4ac6-9c4e-ee6c0eb6779f","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"environment\": {\n        \"name\": \"{{environmentName}}\",\n        \"values\": [\n            {\n                \"key\": \"{{environmentVariableName}}\",\n                \"value\": \"{{environmentVariableValue}}\",\n                \"enabled\": \"{{boolean}}\",\n                \"type\": \"{{environmentType}}\"\n            }\n        ]\n    }\n}"},"url":{"raw":"https://api.getpostman.com/environments","protocol":"https","host":["api","getpostman","com"],"path":["environments"],"query":[{"key":"workspace","value":"{{workspaceId}}","description":"Optional. A workspace ID in which to create the environment.\n\nIf you do not include this query parameter, the system creates the environment in your \"My Workspace\" workspace.","disabled":true}]},"description":"Creates an environment. Include the following properties in the request body:\n\n* `name` — A **string** that contains the environment's name.\n\nYou can also include the following properties:\n\n* `values` — An array of objects that contains the following:\n    * `key` — The variable's name.\n    * `value` — The variable's value.\n    * `enabled` — If true, enable the variable.\n    * `type` — The variable's type. One of: `secret`, `default`, or `any`."},"response":[{"id":"c468c4e0-1be0-4c49-9739-fca8699d0305","name":"Successful Response","originalRequest":{"method":"POST","header":[{"name":"Content-Type","key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"environment\": {\n        \"name\": \"Test Environment\",\n        \"values\": [\n            {\n                \"key\": \"apiKey\",\n                \"value\": \"PMAK-1234-5678-0987-6543\",\n                \"enabled\": true,\n                \"type\": \"secret\"\n            },\n            {\n                \"key\": \"variable_1\",\n                \"value\": \"The variable_1 value.\",\n                \"enabled\": false,\n                \"type\": \"default\"\n            }\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/environments","protocol":"https","host":["api","getpostman","com"],"path":["environments"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. A workspace ID.","type":"text","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"environment\": {\n        \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"name\": \"Test Environment\",\n        \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"},{"id":"411fa2d3-1653-46df-a203-958f5ff9a721","name":"Create Environment in a Workspace","originalRequest":{"method":"POST","header":[{"name":"Content-Type","key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"environment\": {\n        \"name\": \"Test Environment\",\n        \"values\": [\n            {\n                \"key\": \"apiKey\",\n                \"value\": \"PMAK-1234-5678-0987-6543\",\n                \"enabled\": true,\n                \"type\": \"secret\"\n            },\n            {\n                \"key\": \"variable_1\",\n                \"value\": \"The variable_1 value.\",\n                \"enabled\": false,\n                \"type\": \"default\"\n            }\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/environments?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["environments"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. A workspace ID."}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"environment\": {\n        \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"name\": \"Test Environment\",\n        \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"},{"id":"2954b832-b72c-4563-b2de-adf081258612","name":"Malformed Request","originalRequest":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"environment\": {\n        \"values\": [\n            {\n                \"key\": \"apiKey\",\n                \"value\": \"PMAK-1234-5678-0987-6543\",\n                \"enabled\": true,\n                \"type\": \"secret\"\n            },\n            {\n                \"key\": \"variable_1\",\n                \"value\": \"The variable_1 value.\",\n                \"enabled\": false,\n                \"type\": \"default\"\n            }\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/environments","protocol":"https","host":["api","getpostman","com"],"path":["environments"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. A workspace ID.","type":"text","disabled":true}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json; charset=utf-8"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"malformedRequestError\",\n        \"message\": \"Found 1 errors with the supplied environment.\",\n        \"details\": [\n            \"environment: must have required property 'name'\"\n        ]\n    }\n}"},{"id":"fe78154e-b208-435f-afaa-a7f1ce459a05","name":"Forbidden","originalRequest":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"environment\": {\n        \"name\": \"Test Environment\",\n        \"values\": [\n            {\n                \"key\": \"apiKey\",\n                \"value\": \"PMAK-1234-5678-0987-6543\",\n                \"enabled\": true,\n                \"type\": \"secret\"\n            },\n            {\n                \"key\": \"variable_1\",\n                \"value\": \"The variable_1 value.\",\n                \"enabled\": false,\n                \"type\": \"default\"\n            }\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/environments?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["environments"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. A workspace ID."}]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You are not permitted to perform the action.\"\n    }\n}"},{"id":"8e0ebef5-fd3c-4528-9aa5-e42b88ca2844","name":"Rate Limit Exceeded","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"environment\": {\n        \"name\": \"Test Environment\",\n        \"values\": [\n            {\n                \"key\": \"apiKey\",\n                \"value\": \"PMAK-1234-5678-0987-6543\",\n                \"enabled\": true,\n                \"type\": \"secret\"\n            },\n            {\n                \"key\": \"variable_1\",\n                \"value\": \"The variable_1 value.\",\n                \"enabled\": false,\n                \"type\": \"default\"\n            }\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/environments?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["environments"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. A workspace ID."}]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Update an environment","id":"e7483b3b-d9dd-4354-87b8-83800bbcfc49","request":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"environment\": {\n        \"name\": \"{{environmentName}}\",\n        \"values\": [\n            {\n                \"key\": \"{{environmentVariableName}}\",\n                \"value\": \"{{environmentVariableValue}}\",\n                \"enabled\": \"{{boolean}}\",\n                \"type\": \"{{environmentType}}\"\n            }\n        ]\n    }\n}"},"url":{"raw":"https://api.getpostman.com/environments/{{environmentId}}","protocol":"https","host":["api","getpostman","com"],"path":["environments","{{environmentId}}"]},"description":"Updates an environment. Include the following properties in the request body:\n\n* `name` — A **string** that contains the environment's name.\n\nYou can also include the following optional properties:\n\n* `values` — An array of objects that contains the following:\n    * `key` — The variable's name.\n    * `value` — The variable's value.\n    * `enabled` — If true, enable the variable.\n    * `type` — The variable's type. One of: `secret`, `default`, or `any`."},"response":[{"id":"9f9f1e99-23ee-463f-898a-f3152c05c465","name":"Successful Response","originalRequest":{"method":"PUT","header":[{"name":"Content-Type","key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"environment\": {\n        \"name\": \"Test A Environment\",\n        \"values\": [\n            {\n                \"key\": \"variable_a\",\n                \"value\": \"The variable_a value.\",\n                \"enabled\": true,\n                \"type\": \"default\"\n            }\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e","protocol":"https","host":["api","getpostman","com"],"path":["environments","12345678-5daabc50-8451-43f6-922d-96b403b4f28e"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"environment\": {\n        \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"name\": \"Test A Environment\",\n        \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"},{"id":"9f98d94a-0206-49e9-830e-f13ec60d1544","name":"Malformed Request","originalRequest":{"method":"PUT","header":[{"name":"Content-Type","key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"environment\": {\n        \"name\": \"Test A Environment\",\n        \"values\": [\n            null,\n            {\n                \"key\": \"variable_a\",\n                \"value\": \"The variable_a value.\",\n                \"enabled\": true,\n                \"type\": \"default\"\n            }\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e","protocol":"https","host":["api","getpostman","com"],"path":["environments","12345678-5daabc50-8451-43f6-922d-96b403b4f28e"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"malformedRequestError\",\n        \"message\": \"Invalid type: null (expected object) at environment.values.0\"\n    }\n}"},{"id":"e279cc6b-03c7-4a2f-9c13-624a7a03a92c","name":"Rate Limit Exceeded","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"environment\": {\n        \"name\": \"Test A Environment\",\n        \"values\": [\n            null,\n            {\n                \"key\": \"variable_a\",\n                \"value\": \"The variable_a value.\",\n                \"enabled\": true,\n                \"type\": \"default\"\n            }\n        ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e","protocol":"https","host":["api","getpostman","com"],"path":["environments","12345678-5daabc50-8451-43f6-922d-96b403b4f28e"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Get all environments","event":[{"listen":"test","script":{"id":"a4eb08ec-b0d8-4e58-ab7b-4daf713f7545","exec":[""],"type":"text/javascript"}}],"id":"27e6ff50-8acc-4b5f-83a2-617b459c5d38","request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/environments","protocol":"https","host":["api","getpostman","com"],"path":["environments"],"query":[{"key":"workspace","value":"{{workspaceId}}","description":"Optional. A workspace ID.","type":"text","disabled":true}]},"description":"Gets information about all of your [environments](https://learning.postman.com/docs/sending-requests/managing-environments/)."},"response":[{"id":"3ad5cd7a-c0fa-484a-b00f-43e6e9dc6888","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/environments","protocol":"https","host":["api","getpostman","com"],"path":["environments"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. A workspace ID.","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"environments\": [\n       {\n            \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n            \"name\": \"Test Environment\",\n            \"createdAt\": \"2020-09-23T14:31:18.000Z\",\n            \"updatedAt\": \"2020-12-04T14:13:40.000Z\",\n            \"owner\": \"12345678\",\n            \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n            \"isPublic\": false\n        },\n        {\n            \"id\": \"7d786cc8-142b-4d62-b5a5-872afc37ad16\",\n            \"name\": \"Environment Scanner\",\n            \"createdAt\": \"2020-02-04T19:34:23.000Z\",\n            \"updatedAt\": \"2020-08-12T13:34:06.000Z\",\n            \"owner\": \"12345678\",\n            \"uid\": \"12345678-7d786cc8-142b-4d62-b5a5-872afc37ad16\",\n            \"isPublic\": false\n        }\n    ]\n}"},{"id":"c05ea75e-580a-43f5-95ff-c8275ea9831b","name":"Filter by Workspace","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/environments?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["environments"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. A workspace ID."}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"environments\": [\n       {\n            \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n            \"name\": \"Test Environment\",\n            \"createdAt\": \"2020-09-23T14:31:18.000Z\",\n            \"updatedAt\": \"2020-12-04T14:13:40.000Z\",\n            \"owner\": \"12345678\",\n            \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n            \"isPublic\": false\n        }\n    ]\n}"},{"id":"da96f793-e76e-46c7-aa26-d00f9ed4fcc8","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/environments","protocol":"https","host":["api","getpostman","com"],"path":["environments"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. A workspace ID.","disabled":true}]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]}],"id":"9fd69315-25c1-430d-b3bd-b4139b41ac7e","description":"The `/environments` endpoints let you manage your [environments](https://learning.postman.com/docs/sending-requests/managing-environments/)."},{"name":"Import","item":[{"name":"Import an OpenAPI definition","id":"0ab93dca-f12c-4a3f-80c2-c42553e427a6","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"type\": \"{{APIspecificationType}}\",\n    \"input\": {{APIspecification}},\n    \"options\": {\n        \"{{optionName}}\": \"{{optionvalue}}\"\n    }\n}"},"url":{"raw":"https://api.getpostman.com/import/openapi","protocol":"https","host":["api","getpostman","com"],"path":["import","openapi"],"query":[{"key":"workspace","value":"{{workspaceId}}","description":"Optional. The workspace ID in which to import the OpenAPI specification.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.","disabled":true}]},"description":"Imports an OpenAPI definition into Postman as a new [Postman Collection](https://learning.postman.com/docs/getting-started/creating-the-first-collection/).\n\nInclude the following properties in the request body:\n\n- `type` — A **string** that contains the definition's type. One of:\n    - `string`\n    - `json`\n    - `file`\n- `input` — The OpenAPI definition, based on the `type` value:\n    - For `string`, the definition's stringified JSON object.\n    - For `json`, the definition's JSON object.\n    - For `file`, a definition file. To import a file, the request body **must** be a `form-data` request and include the `type` key with the `file` value.\n\nYou can include the following additional properties in the request body:\n\n- `options` — An **object** that contains advanced creation options and their values. You can find a complete list of properties and their values in Postman's [OpenAPI 3.0 to Postman Collection v2.1.0 Converter OPTIONS documentation](https://github.com/postmanlabs/openapi-to-postman/blob/develop/OPTIONS.md). **These properties are case-sensitive.**\n    \n\nFor more information, refer to the collection's examples.\n\n**Note:**\n\nIf you import with the `file` input method, you **must** use the Postman desktop app. The Postman web app does not support this method type."},"response":[{"id":"b7317140-5b04-42b7-983f-5198e5e26ebd","name":"Successful Response","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"type\": \"json\",\n    \"input\": {\n        \"openapi\": \"3.0.0\",\n        \"info\": {\n            \"version\": \"1.0.0\",\n            \"title\": \"Test API\"\n        },\n        \"servers\": [\n            {\n                \"url\": \"http://locahost:3000\"\n            }\n        ],\n        \"paths\": {\n            \"/user\": {\n                \"get\": {\n                    \"summary\": \"List all users\",\n                    \"operationId\": \"listUser\",\n                    \"parameters\": [\n                        {\n                            \"name\": \"id\",\n                            \"in\": \"query\",\n                            \"required\": true,\n                            \"description\": \"The user's ID.\",\n                            \"example\": 1234,\n                            \"schema\": {\n                                \"type\": \"integer\",\n                                \"format\": \"int32\"\n                            }\n                        }\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"description\": \"Information about the user.\",\n                            \"headers\": {\n                                \"x-next\": {\n                                    \"description\": \"A link to the next page of responses.\",\n                                    \"schema\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            },\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/User\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"components\": {\n            \"schemas\": {\n                \"User\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"id\",\n                        \"name\"\n                    ],\n                    \"properties\": {\n                        \"id\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"name\": {\n                            \"type\": \"string\"\n                        },\n                        \"tag\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"Error\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"code\",\n                        \"message\"\n                    ],\n                    \"properties\": {\n                        \"code\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\"\n                        },\n                        \"message\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/import/openapi","protocol":"https","host":["api","getpostman","com"],"path":["import","openapi"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. The workspace ID in which to import the OpenAPI specification.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"collections\": [\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test API\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    ],\n    \"environments\": []\n}"},{"id":"448385fa-4aa7-4bfb-a51d-d5cb394a1b36","name":"Import an OpenAPI Definition to a Workspace","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"type\": \"json\",\n    \"input\": {\n        \"openapi\": \"3.0.0\",\n        \"info\": {\n            \"version\": \"1.0.0\",\n            \"title\": \"Test API\"\n        },\n        \"servers\": [\n            {\n                \"url\": \"http://locahost:3000\"\n            }\n        ],\n        \"paths\": {\n            \"/user\": {\n                \"get\": {\n                    \"summary\": \"List all users\",\n                    \"operationId\": \"listUser\",\n                    \"parameters\": [\n                        {\n                            \"name\": \"id\",\n                            \"in\": \"query\",\n                            \"required\": true,\n                            \"description\": \"The user's ID.\",\n                            \"example\": 1234,\n                            \"schema\": {\n                                \"type\": \"integer\",\n                                \"format\": \"int32\"\n                            }\n                        }\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"description\": \"Information about the user.\",\n                            \"headers\": {\n                                \"x-next\": {\n                                    \"description\": \"A link to the next page of responses.\",\n                                    \"schema\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            },\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/User\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"components\": {\n            \"schemas\": {\n                \"User\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"id\",\n                        \"name\"\n                    ],\n                    \"properties\": {\n                        \"id\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"name\": {\n                            \"type\": \"string\"\n                        },\n                        \"tag\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"Error\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"code\",\n                        \"message\"\n                    ],\n                    \"properties\": {\n                        \"code\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\"\n                        },\n                        \"message\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/import/openapi?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["import","openapi"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. The workspace ID in which to import the OpenAPI specification.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace."}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"collections\": [\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    ],\n    \"environments\": []\n}"},{"id":"ccabdf32-9692-43b5-ad68-e23d4031499e","name":"Import an OpenAPI Definition with Options","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"type\": \"json\",\n    \"options\": {\n        \"folderStrategy\": \"Path\",\n        \"disableOptionalParameters\": true,\n        \"exampleParametersResolution\": \"Schema\"\n    },\n    \"input\": {\n        \"openapi\": \"3.0.0\",\n        \"info\": {\n            \"version\": \"1.0.0\",\n            \"title\": \"Test API\"\n        },\n        \"servers\": [\n            {\n                \"url\": \"http://locahost:3000\"\n            }\n        ],\n        \"paths\": {\n            \"/user\": {\n                \"get\": {\n                    \"summary\": \"List all users\",\n                    \"operationId\": \"listUser\",\n                    \"parameters\": [\n                        {\n                            \"name\": \"id\",\n                            \"in\": \"query\",\n                            \"required\": true,\n                            \"description\": \"The user's ID.\",\n                            \"example\": 1234,\n                            \"schema\": {\n                                \"type\": \"integer\",\n                                \"format\": \"int32\"\n                            }\n                        }\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"description\": \"Information about the user.\",\n                            \"headers\": {\n                                \"x-next\": {\n                                    \"description\": \"A link to the next page of responses.\",\n                                    \"schema\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            },\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/User\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"components\": {\n            \"schemas\": {\n                \"User\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"id\",\n                        \"name\"\n                    ],\n                    \"properties\": {\n                        \"id\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"name\": {\n                            \"type\": \"string\"\n                        },\n                        \"tag\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"Error\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"code\",\n                        \"message\"\n                    ],\n                    \"properties\": {\n                        \"code\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\"\n                        },\n                        \"message\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/import/openapi","protocol":"https","host":["api","getpostman","com"],"path":["import","openapi"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"collections\": [\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    ],\n    \"environments\": []\n}"},{"id":"cfc6d63f-a8fa-45cf-81a8-1ff36a35bd37","name":"Import a Stringified OpenAPI Definition","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"type\": \"string\",\n    \"input\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Test API\\\"\\n  },\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://locahost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"List all users\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"required\\\": true,\\n            \\\"description\\\": \\\"The user's ID.\\\",\\n            \\\"example\\\": 1234,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Information about the user.\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses.\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/import/openapi","protocol":"https","host":["api","getpostman","com"],"path":["import","openapi"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. The workspace ID in which to import the OpenAPI specification.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"collections\": [\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    ],\n    \"environments\": []\n}"},{"id":"10f23459-a73e-4963-8e25-3225893e2c2e","name":"Import a File","originalRequest":{"method":"POST","header":[],"body":{"mode":"formdata","formdata":[{"key":"type","value":"file","description":"Required. The `file` type value.","type":"text"},{"key":"input","description":"Required. A file containing a OpenAPI specification file.","type":"file","value":null}]},"url":{"raw":"https://api.getpostman.com/import/openapi","protocol":"https","host":["api","getpostman","com"],"path":["import","openapi"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. The workspace ID in which to import the OpenAPI specification.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"collections\": [\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    ],\n    \"environments\": []\n}"},{"id":"be834893-de93-4450-afe4-7b0a2392019e","name":"Invalid Parameters","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"type\": \"json\",\n    \"input\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Test API\\\"\\n  },\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://locahost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"List all users\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"required\\\": true,\\n            \\\"description\\\": \\\"The user's ID.\\\",\\n            \\\"example\\\": 1234,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Information about the user.\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses.\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/import/openapi","protocol":"https","host":["api","getpostman","com"],"path":["import","openapi"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. The workspace ID in which to import the OpenAPI specification.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.","disabled":true}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"invalidParamsError\",\n        \"message\": \"The request body has invalid values for the type parameter. Value must be one of file, string, json\",\n        \"details\": {\n            \"param\": \"type\"\n        }\n    }\n}"},{"id":"08f8836c-757b-43dc-b6e1-b7ed6a06a361","name":"Missing Parameters","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"input\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Test API\\\"\\n  },\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://locahost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"List all users\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"required\\\": true,\\n            \\\"description\\\": \\\"The user's ID.\\\",\\n            \\\"example\\\": 1234,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Information about the user.\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses.\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/import/openapi","protocol":"https","host":["api","getpostman","com"],"path":["import","openapi"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. The workspace ID in which to import the OpenAPI specification.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.","disabled":true}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"paramMissingError\",\n        \"message\": \"The request body is missing a value for the type parameter. Check your request and try again.\",\n        \"details\": {\n            \"param\": \"type\"\n        }\n    }\n}"},{"id":"f3ed5a0c-2f95-4ead-b0bb-a3b94137043e","name":"Malformed Request","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"type\": \"json\",\n    \"input\": {\n        \"info\": {\n            \"version\": \"1.0.0\",\n            \"title\": \"Test API\"\n        },\n        \"servers\": [\n            {\n                \"url\": \"http://locahost:3000\"\n            }\n        ],\n        \"paths\": {\n            \"/user\": {\n                \"get\": {\n                    \"summary\": \"List all users\",\n                    \"operationId\": \"listUser\",\n                    \"parameters\": [\n                        {\n                            \"name\": \"id\",\n                            \"in\": \"query\",\n                            \"required\": true,\n                            \"description\": \"The user's ID.\",\n                            \"example\": 1234,\n                            \"schema\": {\n                                \"type\": \"integer\",\n                                \"format\": \"int32\"\n                            }\n                        }\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"description\": \"Information about the user.\",\n                            \"headers\": {\n                                \"x-next\": {\n                                    \"description\": \"A link to the next page of responses.\",\n                                    \"schema\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            },\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/User\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"components\": {\n            \"schemas\": {\n                \"User\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"id\",\n                        \"name\"\n                    ],\n                    \"properties\": {\n                        \"id\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"name\": {\n                            \"type\": \"string\"\n                        },\n                        \"tag\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"Error\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"code\",\n                        \"message\"\n                    ],\n                    \"properties\": {\n                        \"code\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\"\n                        },\n                        \"message\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/import/openapi","protocol":"https","host":["api","getpostman","com"],"path":["import","openapi"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. The workspace ID in which to import the OpenAPI specification.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.","disabled":true}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"invalidSchemaError\",\n        \"message\": \"Specification must contain a semantic version number of the OAS specification\"\n    }\n}"},{"id":"ddc1e474-e4a5-4c75-a26b-34a06cc7094f","name":"Rate Limit Exceeded","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"type\": \"json\",\n    \"input\": {\n        \"info\": {\n            \"version\": \"1.0.0\",\n            \"title\": \"Test API\"\n        },\n        \"servers\": [\n            {\n                \"url\": \"http://locahost:3000\"\n            }\n        ],\n        \"paths\": {\n            \"/user\": {\n                \"get\": {\n                    \"summary\": \"List all users\",\n                    \"operationId\": \"listUser\",\n                    \"parameters\": [\n                        {\n                            \"name\": \"id\",\n                            \"in\": \"query\",\n                            \"required\": true,\n                            \"description\": \"The user's ID.\",\n                            \"example\": 1234,\n                            \"schema\": {\n                                \"type\": \"integer\",\n                                \"format\": \"int32\"\n                            }\n                        }\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"description\": \"Information about the user.\",\n                            \"headers\": {\n                                \"x-next\": {\n                                    \"description\": \"A link to the next page of responses.\",\n                                    \"schema\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            },\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/User\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"components\": {\n            \"schemas\": {\n                \"User\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"id\",\n                        \"name\"\n                    ],\n                    \"properties\": {\n                        \"id\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"name\": {\n                            \"type\": \"string\"\n                        },\n                        \"tag\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"Error\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"code\",\n                        \"message\"\n                    ],\n                    \"properties\": {\n                        \"code\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\"\n                        },\n                        \"message\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/import/openapi","protocol":"https","host":["api","getpostman","com"],"path":["import","openapi"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. The workspace ID in which to import the OpenAPI specification.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.","disabled":true}]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Import an exported Postman data dump file","id":"2bcff135-3747-4740-96bb-42c69a877f15","request":{"method":"POST","header":[{"name":"Content-Type","key":"Content-Type","value":"multipart/form-data"}],"body":{"mode":"formdata","formdata":[{"key":"type","value":"file","type":"text","description":"Required. The `file` type value."},{"key":"input","description":"Required. A file containing a valid user's export .zip file.","type":"file","value":null}]},"url":{"raw":"https://api.getpostman.com/import/exported","protocol":"https","host":["api","getpostman","com"],"path":["import","exported"],"query":[{"key":"workspace","value":"{{workspaceId}}","description":"Optional. The workspace ID in which to import the exported Postman data dump file.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.","disabled":true}]},"description":"Imports exported Postman data. This endpoint **only** accepts [export data dump files](https://postman.postman.co/me/export).\n\nFor more information, read our [Exporting data dumps](https://learning.postman.com/docs/getting-started/importing-and-exporting-data/#exporting-data-dumps) documentation.\n\n## Important\n\nThis endpoint is **deprecated**."},"response":[{"id":"ef88e77e-6f3a-48e9-8133-2ad16b34965b","name":"Successful Response","originalRequest":{"method":"POST","header":[],"body":{"mode":"formdata","formdata":[]},"url":{"raw":"https://api.getpostman.com/import/exported?type=file&input","protocol":"https","host":["api","getpostman","com"],"path":["import","exported"],"query":[{"key":"type","value":"file"},{"key":"input","value":null}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"collections\": [\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test API\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    ]\n}"},{"id":"c6d6882a-d6a4-4b60-9be3-226ed55ab9a8","name":"Invalid Parameters","originalRequest":{"method":"POST","header":[],"url":{"raw":"https://api.getpostman.com/import/exported?type=file&input","protocol":"https","host":["api","getpostman","com"],"path":["import","exported"],"query":[{"key":"type","value":"file","description":"Required. The `file` type value."},{"key":"input","value":null,"description":"Required. A file containing a valid user's export .zip file."}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"invalidParamsError\",\n        \"message\": \"The request body has invalid values for the type parameter. Value must be one of file, string, json\",\n        \"details\": {\n            \"param\": \"type\"\n        }\n    }\n}"},{"id":"b1d90049-e708-488b-b694-14fbd341127d","name":"Missing Parameter","originalRequest":{"method":"POST","header":[],"url":{"raw":"https://api.getpostman.com/import/exported?type=file&input","protocol":"https","host":["api","getpostman","com"],"path":["import","exported"],"query":[{"key":"type","value":"file","description":"Required. The `file` type value."},{"key":"input","value":null,"description":"Required. A file containing a valid user's export .zip file."}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"paramMissingError\",\n        \"message\": \"The request body is missing a value for the type parameter. Check your request and try again.\",\n        \"details\": {\n            \"param\": \"type\"\n        }\n    }\n}"},{"id":"9144d28f-338a-421b-9ba7-b531798ae205","name":"Rate Limit Exceeded","originalRequest":{"method":"POST","header":[],"url":{"raw":"https://api.getpostman.com/import/exported?type=file&input","protocol":"https","host":["api","getpostman","com"],"path":["import","exported"],"query":[{"key":"type","value":"file","description":"Required. The `file` type value."},{"key":"input","value":null,"description":"Required. A file containing a valid user's export .zip file."}]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]}],"id":"8e0e888e-395d-44b6-892e-c131cf1f1bc1","description":"The `/import` endpoints let you manage [importing and exporting](https://learning.postman.com/docs/getting-started/importing-and-exporting-data/) Postman data.","event":[{"listen":"prerequest","script":{"type":"text/javascript","exec":[""]}},{"listen":"test","script":{"type":"text/javascript","exec":[""]}}]},{"name":"Mocks","item":[{"name":"Call Logs","item":[{"name":"Get a mock server's call logs","id":"4aecc545-27ed-46a8-ab0f-69989276a8fb","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/mocks/{{mockId}}/call-logs","protocol":"https","host":["api","getpostman","com"],"path":["mocks","{{mockId}}","call-logs"],"query":[{"key":"limit","value":"{{limit}}","description":"Optional. The maximum number of rows to return in the response. This value defaults to 100.","disabled":true},{"key":"cursor","value":"{{cursor}}","description":"Optional. A pointer to the first record of the set of paginated results. To view the next response, use the \"nextCursor\" value for this parameter.","type":"text","disabled":true},{"key":"until","value":"{{until}}","description":"Optional. Return only the call logs created at and after this time, in ISO 8601 UTC format.","type":"text","disabled":true},{"key":"since","value":"{{since}}","description":"Optional. Return only the call logs created at and before this time, in ISO 8601 UTC format.","type":"text","disabled":true},{"key":"responseStatusCode","value":"{{responseStatusCode}}","description":"Optional. Return only the call logs that match the given HTTP response status code.","type":"text","disabled":true},{"key":"responseType","value":"{{responseType}}","description":"Optional. Return only the call logs with a matching response type. For example, \"success\" or \"error\". Matching is not case-sensitive.","type":"text","disabled":true},{"key":"requestMethod","value":"{{requestMethod}}","description":"Optional. Return only the call logs with a matching HTTP method. Matching is not case-sensitive.","type":"text","disabled":true},{"key":"requestPath","value":"{{requestPath}}","description":"Optional. Return only the call logs that match the request's path. Matching is not case-sensitive.","type":"text","disabled":true},{"key":"sort","value":"{{sort}}","description":"Optional. Sort the call logs by the given property. This only accepts the \"servedAt\" value.\n\nIf you use this query parameter, you must also use the \"direction\" parameter.","type":"text","disabled":true},{"key":"direction","value":"{{direction}}","description":"Optional. Sort in ascending (asc) or descending (desc) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.","type":"text","disabled":true},{"key":"include","value":"{{include}}","description":"Optional. Include call log records with header and body data. This query parameter accepts the \"request.headers\", \"request.body\", \"response.headers\", and \"response.body\" values. For multiple include types, comma-separate each value.","type":"text","disabled":true}]},"description":"Gets a mock server's call logs. You can get a maximum of 6.5MB of call logs **or** a total of 100 call logs, whichever limit is met first in one API call.\n\nCall logs contain exchanged request and response data made to mock servers. The logs provide visibility into how the mock servers are being used. You can log data to debug, test, analyze, and more, depending upon the use case."},"response":[{"id":"2e46aa37-dea2-45d8-be00-de8ec973f8f9","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","call-logs"],"query":[{"key":"limit","value":"{{limit}}","description":"Optional. The maximum number of rows to return in the response. This value defaults to 100.","disabled":true},{"key":"cursor","value":"{{cursor}}","description":"Optional. A pointer to the first record of the set of paginated results. To view the next response, use the \"nextCursor\" value for this parameter.","disabled":true},{"key":"until","value":"{{until}}","description":"Optional. Return only the call logs created at and after this time, in ISO 8601 UTC format.","disabled":true},{"key":"since","value":"{{since}}","description":"Optional. Return only the call logs created at and before this time, in ISO 8601 UTC format.","disabled":true},{"key":"responseStatusCode","value":"{{responseStatusCode}}","description":"Optional. Return only the call logs that match the given HTTP response status code.","disabled":true},{"key":"responseType","value":"{{responseType}}","description":"Optional. Return only the call logs with a matching response type. For example, \"success\" or \"error\". Matching is not case-sensitive.","disabled":true},{"key":"requestMethod","value":"{{requestMethod}}","description":"Optional. Return only the call logs with a matching HTTP method. Matching is not case-sensitive.","disabled":true},{"key":"requestPath","value":"{{requestPath}}","description":"Optional. Return only the call logs that match the request's path. Matching is not case-sensitive.","disabled":true},{"key":"sort","value":"{{sort}}","description":"Optional. Sort the call logs by the given property. This only accepts the \"servedAt\" value.\n\nIf you use this query parameter, you must also use the \"direction\" parameter.","disabled":true},{"key":"direction","value":"{{direction}}","description":"Optional. Sort in ascending (asc) or descending (desc) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.","disabled":true},{"key":"include","value":"{{include}}","description":"Optional. Include call log records with header and body data. This query parameter accepts the \"request.headers\", \"request.body\", \"response.headers\", and \"response.body\" values. For multiple include types, comma-separate each value.","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Fri, 10 Jun 2022 19:10:52 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"120"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"x-frame-options","value":"SAMEORIGIN"},{"key":"Access-Control-Allow-Origin","value":"*"},{"key":"x-srv-trace","value":"v=1;t=7b522a87c70459d8"},{"key":"x-srv-span","value":"v=1;s=08e5bf465e218638"},{"key":"ETag","value":"W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""},{"key":"Vary","value":"Accept-Encoding"}],"cookie":[],"responseTime":null,"body":"{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"c4505a1e-7261-497c-91ff-db4bd51351a6-9545\",\n\t\t\t\"responseName\": \"Double check your method and the request path and try again.\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:30.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"error\",\n\t\t\t\t\"statusCode\": 404\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"0f63f54d-665e-436a-95b4-c1302d7685a9-3925\",\n\t\t\t\"responseName\": \"Bad request\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:22.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 400\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468\",\n\t\t\t\"responseName\": \"Get filtered list of Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:26.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals?type=dog\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"a5330463-26e1-4812-a962-e44b569a2054-9894\",\n\t\t\t\"responseName\": \"Get Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:06.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"},{"id":"edbda013-c5ae-4f64-aa56-4cfd66c4d300","name":"Filter by Limit","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?limit=2","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","call-logs"],"query":[{"key":"limit","value":"2","description":"Optional. The maximum number of rows to return in the response. This value defaults to 100."},{"key":"cursor","value":"{{cursor}}","description":"Optional. A pointer to the first record of the set of paginated results. To view the next response, use the \"nextCursor\" value for this parameter.","disabled":true},{"key":"until","value":"{{until}}","description":"Optional. Return only the call logs created at and after this time, in ISO 8601 UTC format.","disabled":true},{"key":"since","value":"{{since}}","description":"Optional. Return only the call logs created at and before this time, in ISO 8601 UTC format.","disabled":true},{"key":"responseStatusCode","value":"{{responseStatusCode}}","description":"Optional. Return only the call logs that match the given HTTP response status code.","disabled":true},{"key":"responseType","value":"{{responseType}}","description":"Optional. Return only the call logs with a matching response type. For example, \"success\" or \"error\". Matching is not case-sensitive.","disabled":true},{"key":"requestMethod","value":"{{requestMethod}}","description":"Optional. Return only the call logs with a matching HTTP method. Matching is not case-sensitive.","disabled":true},{"key":"requestPath","value":"{{requestPath}}","description":"Optional. Return only the call logs that match the request's path. Matching is not case-sensitive.","disabled":true},{"key":"sort","value":"{{sort}}","description":"Optional. Sort the call logs by the given property. This only accepts the \"servedAt\" value.\n\nIf you use this query parameter, you must also use the \"direction\" parameter.","disabled":true},{"key":"direction","value":"{{direction}}","description":"Optional. Sort in ascending (asc) or descending (desc) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.","disabled":true},{"key":"include","value":"{{include}}","description":"Optional. Include call log records with header and body data. This query parameter accepts the \"request.headers\", \"request.body\", \"response.headers\", and \"response.body\" values. For multiple include types, comma-separate each value.","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Fri, 10 Jun 2022 19:10:52 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"120"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"x-frame-options","value":"SAMEORIGIN"},{"key":"Access-Control-Allow-Origin","value":"*"},{"key":"x-srv-trace","value":"v=1;t=7b522a87c70459d8"},{"key":"x-srv-span","value":"v=1;s=08e5bf465e218638"},{"key":"ETag","value":"W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""},{"key":"Vary","value":"Accept-Encoding"}],"cookie":[],"responseTime":null,"body":"{\n    \"call-logs\": [\n        {\n            \"id\": \"c4505a1e-7261-497c-91ff-db4bd51351a6-9545\",\n            \"responseName\": \"Double check your method and the request path and try again.\",\n            \"servedAt\": \"2022-01-17T06:19:30.000Z\",\n            \"request\": {\n                \"method\": \"POST\",\n                \"path\": \"/animals\"\n            },\n            \"response\": {\n                \"type\": \"error\",\n                \"statusCode\": 404\n            }\n        },\n        {\n            \"id\": \"0f63f54d-665e-436a-95b4-c1302d7685a9-3925\",\n            \"responseName\": \"Bad request\",\n            \"servedAt\": \"2022-01-17T06:19:22.000Z\",\n            \"request\": {\n                \"method\": \"POST\",\n                \"path\": \"/animals\"\n            },\n            \"response\": {\n                \"type\": \"success\",\n                \"statusCode\": 400\n            }\n        }\n    ],\n    \"meta\": {\n        \"nextCursor\": \"eyJzY2hlbWUiOiJjdXJzb3JfcGFnaW5hdGlvbklkIiwiZGlyZWN0aW9uVHlwZSI6Im5leHQiLCJwaXZvdCI6InBhZ2luYXRpb25JZCIsInZhbHVlIjoxNjQyNDAwMzU2MDAwNTc5fQ==\"\n    }\n}"},{"id":"d26cc95b-087f-4843-9155-31548ea894d9","name":"Filter by Cursor","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?cursor=eyJzY2hlbWUiOiJjdXJzb3JfcGFnaW5hdGlvbklkIiwiZGlyZWN0aW9uVHlwZSI6Im5leHQiLCJwaXZvdCI6InBhZ2luYXRpb25JZCIsInZhbHVlIjoxNjQyNDAwMzU2MDAwNTc5fQ==","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","call-logs"],"query":[{"key":"limit","value":"{{limit}}","description":"Optional. The maximum number of rows to return in the response. This value defaults to 100.","disabled":true},{"key":"cursor","value":"eyJzY2hlbWUiOiJjdXJzb3JfcGFnaW5hdGlvbklkIiwiZGlyZWN0aW9uVHlwZSI6Im5leHQiLCJwaXZvdCI6InBhZ2luYXRpb25JZCIsInZhbHVlIjoxNjQyNDAwMzU2MDAwNTc5fQ==","description":"Optional. A pointer to the first record of the set of paginated results. To view the next response, use the \"nextCursor\" value for this parameter."},{"key":"until","value":"{{until}}","description":"Optional. Return only the call logs created at and after this time, in ISO 8601 UTC format.","disabled":true},{"key":"since","value":"{{since}}","description":"Optional. Return only the call logs created at and before this time, in ISO 8601 UTC format.","disabled":true},{"key":"responseStatusCode","value":"{{responseStatusCode}}","description":"Optional. Return only the call logs that match the given HTTP response status code.","disabled":true},{"key":"responseType","value":"{{responseType}}","description":"Optional. Return only the call logs with a matching response type. For example, \"success\" or \"error\". Matching is not case-sensitive.","disabled":true},{"key":"requestMethod","value":"{{requestMethod}}","description":"Optional. Return only the call logs with a matching HTTP method. Matching is not case-sensitive.","disabled":true},{"key":"requestPath","value":"{{requestPath}}","description":"Optional. Return only the call logs that match the request's path. Matching is not case-sensitive.","disabled":true},{"key":"sort","value":"{{sort}}","description":"Optional. Sort the call logs by the given property. This only accepts the \"servedAt\" value.\n\nIf you use this query parameter, you must also use the \"direction\" parameter.","disabled":true},{"key":"direction","value":"{{direction}}","description":"Optional. Sort in ascending (asc) or descending (desc) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.","disabled":true},{"key":"include","value":"{{include}}","description":"Optional. Include call log records with header and body data. This query parameter accepts the \"request.headers\", \"request.body\", \"response.headers\", and \"response.body\" values. For multiple include types, comma-separate each value.","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Fri, 10 Jun 2022 19:10:52 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"120"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"x-frame-options","value":"SAMEORIGIN"},{"key":"Access-Control-Allow-Origin","value":"*"},{"key":"x-srv-trace","value":"v=1;t=7b522a87c70459d8"},{"key":"x-srv-span","value":"v=1;s=08e5bf465e218638"},{"key":"ETag","value":"W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""},{"key":"Vary","value":"Accept-Encoding"}],"cookie":[],"responseTime":null,"body":"{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468\",\n\t\t\t\"responseName\": \"Get filtered list of Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:26.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals?type=dog\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"a5330463-26e1-4812-a962-e44b569a2054-9894\",\n\t\t\t\"responseName\": \"Get Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:06.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"},{"id":"a8d2f61c-b24c-448b-be61-68694016f0f4","name":"Filter by a Date Range","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?until=2022-01-20T06:19:22.000Z&since=2022-01-17T06:19:22.000Z","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","call-logs"],"query":[{"key":"limit","value":"{{limit}}","description":"Optional. The maximum number of rows to return in the response. This value defaults to 100.","disabled":true},{"key":"cursor","value":"{{cursor}}","description":"Optional. A pointer to the first record of the set of paginated results. To view the next response, use the \"nextCursor\" value for this parameter.","disabled":true},{"key":"until","value":"2022-01-20T06:19:22.000Z","description":"Optional. Return only the call logs created at and after this time, in ISO 8601 UTC format."},{"key":"since","value":"2022-01-17T06:19:22.000Z","description":"Optional. Return only the call logs created at and before this time, in ISO 8601 UTC format."},{"key":"responseStatusCode","value":"{{responseStatusCode}}","description":"Optional. Return only the call logs that match the given HTTP response status code.","disabled":true},{"key":"responseType","value":"{{responseType}}","description":"Optional. Return only the call logs with a matching response type. For example, \"success\" or \"error\". Matching is not case-sensitive.","disabled":true},{"key":"requestMethod","value":"{{requestMethod}}","description":"Optional. Return only the call logs with a matching HTTP method. Matching is not case-sensitive.","disabled":true},{"key":"requestPath","value":"{{requestPath}}","description":"Optional. Return only the call logs that match the request's path. Matching is not case-sensitive.","disabled":true},{"key":"sort","value":"{{sort}}","description":"Optional. Sort the call logs by the given property. This only accepts the \"servedAt\" value.\n\nIf you use this query parameter, you must also use the \"direction\" parameter.","disabled":true},{"key":"direction","value":"{{direction}}","description":"Optional. Sort in ascending (asc) or descending (desc) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.","disabled":true},{"key":"include","value":"{{include}}","description":"Optional. Include call log records with header and body data. This query parameter accepts the \"request.headers\", \"request.body\", \"response.headers\", and \"response.body\" values. For multiple include types, comma-separate each value.","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Fri, 10 Jun 2022 19:10:52 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"120"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"x-frame-options","value":"SAMEORIGIN"},{"key":"Access-Control-Allow-Origin","value":"*"},{"key":"x-srv-trace","value":"v=1;t=7b522a87c70459d8"},{"key":"x-srv-span","value":"v=1;s=08e5bf465e218638"},{"key":"ETag","value":"W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""},{"key":"Vary","value":"Accept-Encoding"}],"cookie":[],"responseTime":null,"body":"{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"c4505a1e-7261-497c-91ff-db4bd51351a6-9545\",\n\t\t\t\"responseName\": \"Double check your method and the request path and try again.\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:30.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"error\",\n\t\t\t\t\"statusCode\": 404\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"0f63f54d-665e-436a-95b4-c1302d7685a9-3925\",\n\t\t\t\"responseName\": \"Bad request\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:22.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 400\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468\",\n\t\t\t\"responseName\": \"Get filtered list of Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:26.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals?type=dog\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"a5330463-26e1-4812-a962-e44b569a2054-9894\",\n\t\t\t\"responseName\": \"Get Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:06.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"},{"id":"292e8448-dcd2-4a41-88b0-dfbc3d75afdf","name":"Filter by Date Since","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?since=2022-01-17T06:19:16.000Z","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","call-logs"],"query":[{"key":"limit","value":"{{limit}}","description":"Optional. The maximum number of rows to return in the response. This value defaults to 100.","disabled":true},{"key":"cursor","value":"{{cursor}}","description":"Optional. A pointer to the first record of the set of paginated results. To view the next response, use the \"nextCursor\" value for this parameter.","disabled":true},{"key":"until","value":"{{until}}","description":"Optional. Return only the call logs created at and after this time, in ISO 8601 UTC format.","disabled":true},{"key":"since","value":"2022-01-17T06:19:16.000Z","description":"Optional. Return only the call logs created at and before this time, in ISO 8601 UTC format."},{"key":"responseStatusCode","value":"{{responseStatusCode}}","description":"Optional. Return only the call logs that match the given HTTP response status code.","disabled":true},{"key":"responseType","value":"{{responseType}}","description":"Optional. Return only the call logs with a matching response type. For example, \"success\" or \"error\". Matching is not case-sensitive.","disabled":true},{"key":"requestMethod","value":"{{requestMethod}}","description":"Optional. Return only the call logs with a matching HTTP method. Matching is not case-sensitive.","disabled":true},{"key":"requestPath","value":"{{requestPath}}","description":"Optional. Return only the call logs that match the request's path. Matching is not case-sensitive.","disabled":true},{"key":"sort","value":"{{sort}}","description":"Optional. Sort the call logs by the given property. This only accepts the \"servedAt\" value.\n\nIf you use this query parameter, you must also use the \"direction\" parameter.","disabled":true},{"key":"direction","value":"{{direction}}","description":"Optional. Sort in ascending (asc) or descending (desc) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.","disabled":true},{"key":"include","value":"{{include}}","description":"Optional. Include call log records with header and body data. This query parameter accepts the \"request.headers\", \"request.body\", \"response.headers\", and \"response.body\" values. For multiple include types, comma-separate each value.","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Fri, 10 Jun 2022 19:10:52 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"120"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"x-frame-options","value":"SAMEORIGIN"},{"key":"Access-Control-Allow-Origin","value":"*"},{"key":"x-srv-trace","value":"v=1;t=7b522a87c70459d8"},{"key":"x-srv-span","value":"v=1;s=08e5bf465e218638"},{"key":"ETag","value":"W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""},{"key":"Vary","value":"Accept-Encoding"}],"cookie":[],"responseTime":null,"body":"{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"c4505a1e-7261-497c-91ff-db4bd51351a6-9545\",\n\t\t\t\"responseName\": \"Double check your method and the request path and try again.\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:30.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"error\",\n\t\t\t\t\"statusCode\": 404\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"0f63f54d-665e-436a-95b4-c1302d7685a9-3925\",\n\t\t\t\"responseName\": \"Bad request\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:22.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 400\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"},{"id":"98044bc9-99fb-4367-b587-4b82be852c21","name":"Filter by responseStatusCode","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?responseStatusCode=200","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","call-logs"],"query":[{"key":"limit","value":"{{limit}}","description":"Optional. The maximum number of rows to return in the response. This value defaults to 100.","disabled":true},{"key":"cursor","value":"{{cursor}}","description":"Optional. A pointer to the first record of the set of paginated results. To view the next response, use the \"nextCursor\" value for this parameter.","disabled":true},{"key":"until","value":"{{until}}","description":"Optional. Return only the call logs created at and after this time, in ISO 8601 UTC format.","disabled":true},{"key":"since","value":"{{since}}","description":"Optional. Return only the call logs created at and before this time, in ISO 8601 UTC format.","disabled":true},{"key":"responseStatusCode","value":"200","description":"Optional. Return only the call logs that match the given HTTP response status code."},{"key":"responseType","value":"{{responseType}}","description":"Optional. Return only the call logs with a matching response type. For example, \"success\" or \"error\". Matching is not case-sensitive.","disabled":true},{"key":"requestMethod","value":"{{requestMethod}}","description":"Optional. Return only the call logs with a matching HTTP method. Matching is not case-sensitive.","disabled":true},{"key":"requestPath","value":"{{requestPath}}","description":"Optional. Return only the call logs that match the request's path. Matching is not case-sensitive.","disabled":true},{"key":"sort","value":"{{sort}}","description":"Optional. Sort the call logs by the given property. This only accepts the \"servedAt\" value.\n\nIf you use this query parameter, you must also use the \"direction\" parameter.","disabled":true},{"key":"direction","value":"{{direction}}","description":"Optional. Sort in ascending (asc) or descending (desc) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.","disabled":true},{"key":"include","value":"{{include}}","description":"Optional. Include call log records with header and body data. This query parameter accepts the \"request.headers\", \"request.body\", \"response.headers\", and \"response.body\" values. For multiple include types, comma-separate each value.","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Fri, 10 Jun 2022 19:10:52 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"120"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"x-frame-options","value":"SAMEORIGIN"},{"key":"Access-Control-Allow-Origin","value":"*"},{"key":"x-srv-trace","value":"v=1;t=7b522a87c70459d8"},{"key":"x-srv-span","value":"v=1;s=08e5bf465e218638"},{"key":"ETag","value":"W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""},{"key":"Vary","value":"Accept-Encoding"}],"cookie":[],"responseTime":null,"body":"{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468\",\n\t\t\t\"responseName\": \"Get filtered list of Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:26.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals?type=dog\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"a5330463-26e1-4812-a962-e44b569a2054-9894\",\n\t\t\t\"responseName\": \"Get Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:06.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"},{"id":"5617c790-e3b8-467d-ab04-e1d181c4c176","name":"Filter by responseType","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?responseType=success","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","call-logs"],"query":[{"key":"limit","value":"{{limit}}","description":"Optional. The maximum number of rows to return in the response. This value defaults to 100.","disabled":true},{"key":"cursor","value":"{{cursor}}","description":"Optional. A pointer to the first record of the set of paginated results. To view the next response, use the \"nextCursor\" value for this parameter.","disabled":true},{"key":"until","value":"{{until}}","description":"Optional. Return only the call logs created at and after this time, in ISO 8601 UTC format.","disabled":true},{"key":"since","value":"{{since}}","description":"Optional. Return only the call logs created at and before this time, in ISO 8601 UTC format.","disabled":true},{"key":"responseStatusCode","value":"{{responseStatusCode}}","description":"Optional. Return only the call logs that match the given HTTP response status code.","disabled":true},{"key":"responseType","value":"success","description":"Optional. Return only the call logs with a matching response type. For example, \"success\" or \"error\". Matching is not case-sensitive."},{"key":"requestMethod","value":"{{requestMethod}}","description":"Optional. Return only the call logs with a matching HTTP method. Matching is not case-sensitive.","disabled":true},{"key":"requestPath","value":"{{requestPath}}","description":"Optional. Return only the call logs that match the request's path. Matching is not case-sensitive.","disabled":true},{"key":"sort","value":"{{sort}}","description":"Optional. Sort the call logs by the given property. This only accepts the \"servedAt\" value.\n\nIf you use this query parameter, you must also use the \"direction\" parameter.","disabled":true},{"key":"direction","value":"{{direction}}","description":"Optional. Sort in ascending (asc) or descending (desc) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.","disabled":true},{"key":"include","value":"{{include}}","description":"Optional. Include call log records with header and body data. This query parameter accepts the \"request.headers\", \"request.body\", \"response.headers\", and \"response.body\" values. For multiple include types, comma-separate each value.","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Fri, 10 Jun 2022 19:10:52 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"120"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"x-frame-options","value":"SAMEORIGIN"},{"key":"Access-Control-Allow-Origin","value":"*"},{"key":"x-srv-trace","value":"v=1;t=7b522a87c70459d8"},{"key":"x-srv-span","value":"v=1;s=08e5bf465e218638"},{"key":"ETag","value":"W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""},{"key":"Vary","value":"Accept-Encoding"}],"cookie":[],"responseTime":null,"body":"{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"0f63f54d-665e-436a-95b4-c1302d7685a9-3925\",\n\t\t\t\"responseName\": \"Bad request\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:22.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 400\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468\",\n\t\t\t\"responseName\": \"Get filtered list of Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:26.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals?type=dog\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"a5330463-26e1-4812-a962-e44b569a2054-9894\",\n\t\t\t\"responseName\": \"Get Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:06.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"},{"id":"28a9680c-ce81-4d77-b06e-1dba6e7e6a22","name":"Filter by requestMethod","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?requestMethod=post","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","call-logs"],"query":[{"key":"limit","value":"{{limit}}","description":"Optional. The maximum number of rows to return in the response. This value defaults to 100.","disabled":true},{"key":"cursor","value":"{{cursor}}","description":"Optional. A pointer to the first record of the set of paginated results. To view the next response, use the \"nextCursor\" value for this parameter.","disabled":true},{"key":"until","value":"{{until}}","description":"Optional. Return only the call logs created at and after this time, in ISO 8601 UTC format.","disabled":true},{"key":"since","value":"{{since}}","description":"Optional. Return only the call logs created at and before this time, in ISO 8601 UTC format.","disabled":true},{"key":"responseStatusCode","value":"{{responseStatusCode}}","description":"Optional. Return only the call logs that match the given HTTP response status code.","disabled":true},{"key":"responseType","value":"{{responseType}}","description":"Optional. Return only the call logs with a matching response type. For example, \"success\" or \"error\". Matching is not case-sensitive.","disabled":true},{"key":"requestMethod","value":"post","description":"Optional. Return only the call logs with a matching HTTP method. Matching is not case-sensitive."},{"key":"requestPath","value":"{{requestPath}}","description":"Optional. Return only the call logs that match the request's path. Matching is not case-sensitive.","disabled":true},{"key":"sort","value":"{{sort}}","description":"Optional. Sort the call logs by the given property. This only accepts the \"servedAt\" value.\n\nIf you use this query parameter, you must also use the \"direction\" parameter.","disabled":true},{"key":"direction","value":"{{direction}}","description":"Optional. Sort in ascending (asc) or descending (desc) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.","disabled":true},{"key":"include","value":"{{include}}","description":"Optional. Include call log records with header and body data. This query parameter accepts the \"request.headers\", \"request.body\", \"response.headers\", and \"response.body\" values. For multiple include types, comma-separate each value.","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Fri, 10 Jun 2022 19:10:52 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"120"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"x-frame-options","value":"SAMEORIGIN"},{"key":"Access-Control-Allow-Origin","value":"*"},{"key":"x-srv-trace","value":"v=1;t=7b522a87c70459d8"},{"key":"x-srv-span","value":"v=1;s=08e5bf465e218638"},{"key":"ETag","value":"W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""},{"key":"Vary","value":"Accept-Encoding"}],"cookie":[],"responseTime":null,"body":"{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"c4505a1e-7261-497c-91ff-db4bd51351a6-9545\",\n\t\t\t\"responseName\": \"Double check your method and the request path and try again.\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:30.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"error\",\n\t\t\t\t\"statusCode\": 404\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"0f63f54d-665e-436a-95b4-c1302d7685a9-3925\",\n\t\t\t\"responseName\": \"Bad request\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:22.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 400\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"},{"id":"77076d05-ceac-4c25-8e6f-cbf1cef4e994","name":"Filter by requestPath","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?requestPath=/animals?type=Dog","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","call-logs"],"query":[{"key":"limit","value":"{{limit}}","description":"Optional. The maximum number of rows to return in the response. This value defaults to 100.","disabled":true},{"key":"cursor","value":"{{cursor}}","description":"Optional. A pointer to the first record of the set of paginated results. To view the next response, use the \"nextCursor\" value for this parameter.","disabled":true},{"key":"until","value":"{{until}}","description":"Optional. Return only the call logs created at and after this time, in ISO 8601 UTC format.","disabled":true},{"key":"since","value":"{{since}}","description":"Optional. Return only the call logs created at and before this time, in ISO 8601 UTC format.","disabled":true},{"key":"responseStatusCode","value":"{{responseStatusCode}}","description":"Optional. Return only the call logs that match the given HTTP response status code.","disabled":true},{"key":"responseType","value":"{{responseType}}","description":"Optional. Return only the call logs with a matching response type. For example, \"success\" or \"error\". Matching is not case-sensitive.","disabled":true},{"key":"requestMethod","value":"{{requestMethod}}","description":"Optional. Return only the call logs with a matching HTTP method. Matching is not case-sensitive.","disabled":true},{"key":"requestPath","value":"/animals?type=Dog","description":"Optional. Return only the call logs that match the request's path. Matching is not case-sensitive."},{"key":"sort","value":"{{sort}}","description":"Optional. Sort the call logs by the given property. This only accepts the \"servedAt\" value.\n\nIf you use this query parameter, you must also use the \"direction\" parameter.","disabled":true},{"key":"direction","value":"{{direction}}","description":"Optional. Sort in ascending (asc) or descending (desc) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.","disabled":true},{"key":"include","value":"{{include}}","description":"Optional. Include call log records with header and body data. This query parameter accepts the \"request.headers\", \"request.body\", \"response.headers\", and \"response.body\" values. For multiple include types, comma-separate each value.","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Fri, 10 Jun 2022 19:10:52 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"120"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"x-frame-options","value":"SAMEORIGIN"},{"key":"Access-Control-Allow-Origin","value":"*"},{"key":"x-srv-trace","value":"v=1;t=7b522a87c70459d8"},{"key":"x-srv-span","value":"v=1;s=08e5bf465e218638"},{"key":"ETag","value":"W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""},{"key":"Vary","value":"Accept-Encoding"}],"cookie":[],"responseTime":null,"body":"{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468\",\n\t\t\t\"responseName\": \"Get filtered list of Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:26.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals?type=dog\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"},{"id":"5e5ccd0a-be21-4cea-8822-b1021a9199f7","name":"Sort by servedAt","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?sort=servedAt&direction=asc","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","call-logs"],"query":[{"key":"limit","value":"{{limit}}","description":"Optional. The maximum number of rows to return in the response. This value defaults to 100.","disabled":true},{"key":"cursor","value":"{{cursor}}","description":"Optional. A pointer to the first record of the set of paginated results. To view the next response, use the \"nextCursor\" value for this parameter.","disabled":true},{"key":"until","value":"{{until}}","description":"Optional. Return only the call logs created at and after this time, in ISO 8601 UTC format.","disabled":true},{"key":"since","value":"{{since}}","description":"Optional. Return only the call logs created at and before this time, in ISO 8601 UTC format.","disabled":true},{"key":"responseStatusCode","value":"{{responseStatusCode}}","description":"Optional. Return only the call logs that match the given HTTP response status code.","disabled":true},{"key":"responseType","value":"{{responseType}}","description":"Optional. Return only the call logs with a matching response type. For example, \"success\" or \"error\". Matching is not case-sensitive.","disabled":true},{"key":"requestMethod","value":"{{requestMethod}}","description":"Optional. Return only the call logs with a matching HTTP method. Matching is not case-sensitive.","disabled":true},{"key":"requestPath","value":"{{requestPath}}","description":"Optional. Return only the call logs that match the request's path. Matching is not case-sensitive.","disabled":true},{"key":"sort","value":"servedAt","description":"Optional. Sort the call logs by the given property. This only accepts the \"servedAt\" value.\n\nIf you use this query parameter, you must also use the \"direction\" parameter."},{"key":"direction","value":"asc","description":"Optional. Sort in ascending (asc) or descending (desc) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter."},{"key":"include","value":"{{include}}","description":"Optional. Include call log records with header and body data. This query parameter accepts the \"request.headers\", \"request.body\", \"response.headers\", and \"response.body\" values. For multiple include types, comma-separate each value.","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Fri, 10 Jun 2022 19:10:52 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"120"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"x-frame-options","value":"SAMEORIGIN"},{"key":"Access-Control-Allow-Origin","value":"*"},{"key":"x-srv-trace","value":"v=1;t=7b522a87c70459d8"},{"key":"x-srv-span","value":"v=1;s=08e5bf465e218638"},{"key":"ETag","value":"W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""},{"key":"Vary","value":"Accept-Encoding"}],"cookie":[],"responseTime":null,"body":"{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"a5330463-26e1-4812-a962-e44b569a2054-9894\",\n\t\t\t\"responseName\": \"Get Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:06.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468\",\n\t\t\t\"responseName\": \"Get filtered list of Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:26.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals?type=dog\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"0f63f54d-665e-436a-95b4-c1302d7685a9-3925\",\n\t\t\t\"responseName\": \"Bad request\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:22.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 400\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"c4505a1e-7261-497c-91ff-db4bd51351a6-9545\",\n\t\t\t\"responseName\": \"Double check your method and the request path and try again.\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:30.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"error\",\n\t\t\t\t\"statusCode\": 404\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"},{"id":"ab62b59f-77e3-4f38-9047-d837e2609737","name":"Filter by Header and Body Data","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?include=request.headers,request.body,response.headers,response.body","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","call-logs"],"query":[{"key":"limit","value":"{{limit}}","description":"Optional. The maximum number of rows to return in the response. This value defaults to 100.","disabled":true},{"key":"cursor","value":"{{cursor}}","description":"Optional. A pointer to the first record of the set of paginated results. To view the next response, use the \"nextCursor\" value for this parameter.","disabled":true},{"key":"until","value":"{{until}}","description":"Optional. Return only the call logs created at and after this time, in ISO 8601 UTC format.","disabled":true},{"key":"since","value":"{{since}}","description":"Optional. Return only the call logs created at and before this time, in ISO 8601 UTC format.","disabled":true},{"key":"responseStatusCode","value":"{{responseStatusCode}}","description":"Optional. Return only the call logs that match the given HTTP response status code.","disabled":true},{"key":"responseType","value":"{{responseType}}","description":"Optional. Return only the call logs with a matching response type. For example, \"success\" or \"error\". Matching is not case-sensitive.","disabled":true},{"key":"requestMethod","value":"{{requestMethod}}","description":"Optional. Return only the call logs with a matching HTTP method. Matching is not case-sensitive.","disabled":true},{"key":"requestPath","value":"{{requestPath}}","description":"Optional. Return only the call logs that match the request's path. Matching is not case-sensitive.","disabled":true},{"key":"sort","value":"{{sort}}","description":"Optional. Sort the call logs by the given property. This only accepts the \"servedAt\" value.\n\nIf you use this query parameter, you must also use the \"direction\" parameter.","disabled":true},{"key":"direction","value":"{{direction}}","description":"Optional. Sort in ascending (asc) or descending (desc) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.","disabled":true},{"key":"include","value":"request.headers,request.body,response.headers,response.body","description":"Optional. Include call log records with header and body data. This query parameter accepts the \"request.headers\", \"request.body\", \"response.headers\", and \"response.body\" values. For multiple include types, comma-separate each value."}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Fri, 10 Jun 2022 19:10:52 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"120"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"x-frame-options","value":"SAMEORIGIN"},{"key":"Access-Control-Allow-Origin","value":"*"},{"key":"x-srv-trace","value":"v=1;t=7b522a87c70459d8"},{"key":"x-srv-span","value":"v=1;s=08e5bf465e218638"},{"key":"ETag","value":"W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""},{"key":"Vary","value":"Accept-Encoding"}],"cookie":[],"responseTime":null,"body":"{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"c4505a1e-7261-497c-91ff-db4bd51351a6-9545\",\n\t\t\t\"responseName\": \"Double check your method and the request path and try again.\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:30.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\",\n\t\t\t\t\"headers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"content-length\",\n\t\t\t\t\t\t\"value\": \"50\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"x-mock-match-request-body\",\n\t\t\t\t\t\t\"value\": \"true\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"content-type\",\n\t\t\t\t\t\t\"value\": \"application/json\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"body\": {\n\t\t\t\t\t\"mode\": \"raw\",\n\t\t\t\t\t\"data\": \"{\\\"type\\\":\\\"hamster\\\",\\\"breed\\\":\\\"Syrian Hamster\\\"}\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"error\",\n\t\t\t\t\"statusCode\": 404,\n\t\t\t\t\"headers\": [],\n\t\t\t\t\"body\": {\n\t\t\t\t\t\"data\": \"{\\\"error\\\":{\\\"name\\\":\\\"mockRequestNotFoundError\\\",\\\"message\\\":\\\"Double check your method and the request path and try again.\\\"}}\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"0f63f54d-665e-436a-95b4-c1302d7685a9-3925\",\n\t\t\t\"responseName\": \"Bad request\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:22.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\",\n\t\t\t\t\"headers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"content-length\",\n\t\t\t\t\t\t\"value\": \"69\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"x-mock-match-request-body\",\n\t\t\t\t\t\t\"value\": \"true\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"content-type\",\n\t\t\t\t\t\t\"value\": \"application/json\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"body\": {\n\t\t\t\t\t\"mode\": \"raw\",\n\t\t\t\t\t\"data\": \"{\\\"type\\\":\\\"hamster\\\",\\\"breed\\\":\\\"Syrian Hamster\\\",\\\"age\\\":\\\"1 month\\\"}\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 400,\n\t\t\t\t\"headers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"description\": {\n\t\t\t\t\t\t\t\"content\": \"\",\n\t\t\t\t\t\t\t\"type\": \"text/plain\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"key\": \"Content-Type\",\n\t\t\t\t\t\t\"value\": \"application/json\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"body\": {\n\t\t\t\t\t\"data\": \"{\\n\\t\\\"message\\\": \\\"Malformed request. You need to send gender as part of the request.\\\"\\n}\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\",\n\t\t\t\t\"headers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"content-length\",\n\t\t\t\t\t\t\"value\": \"88\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"x-mock-match-request-body\",\n\t\t\t\t\t\t\"value\": \"true\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"content-type\",\n\t\t\t\t\t\t\"value\": \"application/json\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"body\": {\n\t\t\t\t\t\"mode\": \"raw\",\n\t\t\t\t\t\"data\": \"{\\\"type\\\":\\\"hamster\\\",\\\"breed\\\":\\\"Syrian Hamster\\\",\\\"age\\\":\\\"1 month\\\",\\\"gender\\\":\\\"male\\\"}\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200,\n\t\t\t\t\"headers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"description\": {\n\t\t\t\t\t\t\t\"content\": \"\",\n\t\t\t\t\t\t\t\"type\": \"text/plain\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"key\": \"Content-Type\",\n\t\t\t\t\t\t\"value\": \"application/json\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"body\": {\n\t\t\t\t\t\"data\": \"{\\n\\t\\\"message\\\": \\\"Animal added successfully to the store\\\"\\n}\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468\",\n\t\t\t\"responseName\": \"Get filtered list of Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:26.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals?type=dog\",\n\t\t\t\t\"headers\": [],\n\t\t\t\t\"body\": {}\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200,\n\t\t\t\t\"headers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"description\": {\n\t\t\t\t\t\t\t\"content\": \"\",\n\t\t\t\t\t\t\t\"type\": \"text/plain\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"key\": \"Content-Type\",\n\t\t\t\t\t\t\"value\": \"application/json\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"body\": {\n\t\t\t\t\t\"data\": \"[\\n\\t{\\n\\t\\t\\\"type\\\": \\\"dog\\\",\\n\\t\\t\\\"breed\\\": \\\"German Sheperd\\\",\\n\\t\\t\\\"age\\\": \\\"6 months\\\",\\n\\t\\t\\\"gender\\\": \\\"male\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"type\\\": \\\"dog\\\",\\n\\t\\t\\\"breed\\\": \\\"Bulldog\\\",\\n\\t\\t\\\"age\\\": \\\"1 year\\\",\\n\\t\\t\\\"gender\\\": \\\"female\\\"\\n\\t}\\n]\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"a5330463-26e1-4812-a962-e44b569a2054-9894\",\n\t\t\t\"responseName\": \"Get Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:06.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals\",\n\t\t\t\t\"headers\": [],\n\t\t\t\t\"body\": {}\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200,\n\t\t\t\t\"headers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"description\": {\n\t\t\t\t\t\t\t\"content\": \"\",\n\t\t\t\t\t\t\t\"type\": \"text/plain\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"key\": \"Content-Type\",\n\t\t\t\t\t\t\"value\": \"application/json\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"body\": {\n\t\t\t\t\t\"data\": \"[\\n\\t{\\n\\t\\t\\\"type\\\": \\\"dog\\\",\\n\\t\\t\\\"breed\\\": \\\"German Sheperd\\\",\\n\\t\\t\\\"age\\\": \\\"6 months\\\",\\n\\t\\t\\\"gender\\\": \\\"male\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"type\\\": \\\"dog\\\",\\n\\t\\t\\\"breed\\\": \\\"Bulldog\\\",\\n\\t\\t\\\"age\\\": \\\"1 year\\\",\\n\\t\\t\\\"gender\\\": \\\"female\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"type\\\": \\\"cat\\\",\\n\\t\\t\\\"breed\\\": \\\"Persian cat\\\",\\n\\t\\t\\\"age\\\": \\\"3 months\\\",\\n\\t\\t\\\"gender\\\": \\\"female\\\"\\n\\t}\\n]\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"},{"id":"592d450a-6396-4efd-aaff-f1efa4d3ab33","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","call-logs"],"query":[{"key":"limit","value":"{{limit}}","description":"Optional. The maximum number of rows to return in the response. This value defaults to 100.","disabled":true},{"key":"cursor","value":"{{cursor}}","description":"Optional. A pointer to the first record of the set of paginated results. To view the next response, use the \"nextCursor\" value for this parameter.","disabled":true},{"key":"until","value":"{{until}}","description":"Optional. Return only the call logs created at and after this time, in ISO 8601 UTC format.","disabled":true},{"key":"since","value":"{{since}}","description":"Optional. Return only the call logs created at and before this time, in ISO 8601 UTC format.","disabled":true},{"key":"responseStatusCode","value":"{{responseStatusCode}}","description":"Optional. Return only the call logs that match the given HTTP response status code.","disabled":true},{"key":"responseType","value":"{{responseType}}","description":"Optional. Return only the call logs with a matching response type. For example, \"success\" or \"error\". Matching is not case-sensitive.","disabled":true},{"key":"requestMethod","value":"{{requestMethod}}","description":"Optional. Return only the call logs with a matching HTTP method. Matching is not case-sensitive.","disabled":true},{"key":"requestPath","value":"{{requestPath}}","description":"Optional. Return only the call logs that match the request's path. Matching is not case-sensitive.","disabled":true},{"key":"sort","value":"{{sort}}","description":"Optional. Sort the call logs by the given property. This only accepts the \"servedAt\" value.\n\nIf you use this query parameter, you must also use the \"direction\" parameter.","disabled":true},{"key":"direction","value":"{{direction}}","description":"Optional. Sort in ascending (asc) or descending (desc) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.","disabled":true},{"key":"include","value":"{{include}}","description":"Optional. Include call log records with header and body data. This query parameter accepts the \"request.headers\", \"request.body\", \"response.headers\", and \"response.body\" values. For multiple include types, comma-separate each value.","disabled":true}]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Fri, 10 Jun 2022 19:10:52 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"120"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"x-frame-options","value":"SAMEORIGIN"},{"key":"Access-Control-Allow-Origin","value":"*"},{"key":"x-srv-trace","value":"v=1;t=7b522a87c70459d8"},{"key":"x-srv-span","value":"v=1;s=08e5bf465e218638"},{"key":"ETag","value":"W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""},{"key":"Vary","value":"Accept-Encoding"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]}],"id":"908344c7-2ed0-4dcb-912d-a243710e4804","description":"These endpoints manage [mock server call logs](https://learning.postman.com/docs/designing-and-developing-your-api/mocking-data/setting-up-mock/#viewing-mock-calls)."},{"name":"Server Responses","item":[{"name":"Get a server response","id":"b2db12b8-c402-4f58-8d3f-46e8fa56559f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/mocks/{{mockId}}/server-responses/{{serverResponseId}}","protocol":"https","host":["api","getpostman","com"],"path":["mocks","{{mockId}}","server-responses","{{serverResponseId}}"]},"description":"Gets information about a server response."},"response":[{"id":"2f35c331-6ddc-4ce6-b79d-f93fb1d1ebea","name":"Successful Response","originalRequest":{"method":"GET","header":[{"key":"x-api-key","value":"{{x-api-key}}"}],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","server-responses","965cdd16-fe22-4d96-a161-3d05490ac421"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json; charset=utf-8"}],"cookie":[],"responseTime":null,"body":"{\n    \"createdAt\": \"2022-08-02T15:08:03.000Z\",\n    \"updatedAt\": \"2022-08-02T15:08:03.000Z\",\n    \"id\": \"965cdd16-fe22-4d96-a161-3d05490ac421\",\n    \"name\": \"Internal Server Error\",\n    \"statusCode\": 500,\n    \"headers\": [],\n    \"language\": null,\n    \"body\": \"{\\n    \\\"message\\\": \\\"Something went wrong; try again later.\\\"\\n}\",\n    \"createdBy\": \"20891195\",\n    \"updatedBy\": \"20891195\",\n    \"mock\": \"32cd624d-9986-4f20-9048-89252f722269\"\n}"},{"id":"ce8b10e6-5615-4b9d-850a-2b9c62b0b7bc","name":"Bad Request","originalRequest":{"method":"GET","header":[{"key":"x-api-key","value":"{{x-api-key}}"}],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","server-responses","965cdd16-fe22-4d96-a161-3d05490ac421"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json; charset=utf-8"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"serverResponseNotFoundError\",\n        \"message\": \"We could not find the mock server response you are looking for.\"\n    }\n}"},{"id":"8a495428-497d-461f-8763-bb125f81c1c7","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[{"key":"x-api-key","value":"{{x-api-key}}"}],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","server-responses","965cdd16-fe22-4d96-a161-3d05490ac421"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json; charset=utf-8"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Get all server responses","id":"b2f82e45-2cf9-467b-bd07-4d074b48c463","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/mocks/{{mockId}}/server-responses","protocol":"https","host":["api","getpostman","com"],"path":["mocks","{{mockId}}","server-responses"]},"description":"Gets all of a mock server's server responses."},"response":[{"id":"b08daefe-39a1-4695-9d90-b1dbddc50cc6","name":"Successful Response","originalRequest":{"method":"GET","header":[{"key":"x-api-key","value":"{{x-api-key}}"}],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","server-responses"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json; charset=utf-8"}],"cookie":[],"responseTime":null,"body":"[\n    {\n        \"id\": \"965cdd16-fe22-4d96-a161-3d05490ac421\",\n        \"name\": \"Internal Server Error\",\n        \"statusCode\": 500,\n        \"createdAt\": \"2022-08-02T14:57:44.000Z\",\n        \"updatedAt\": \"2022-08-02T14:57:44.000Z\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\"\n    }\n]"},{"id":"4f674582-c6c7-4a77-b306-d532c6457775","name":"Not Found","originalRequest":{"method":"GET","header":[{"key":"x-api-key","value":"{{x-api-key}}"}],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","server-responses"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json; charset=utf-8"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified mock does not exist.\",\n        \"details\": {}\n    }\n}"},{"id":"80818434-fd36-474a-aa47-ed00385112ab","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[{"key":"x-api-key","value":"{{x-api-key}}"}],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","server-responses"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json; charset=utf-8"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Create a server response","event":[{"listen":"prerequest","script":{"id":"a2969102-883e-4e39-90a3-f0948b291230","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"7b016f68-0c30-4761-b23c-2f15fe1cc1c3","exec":[""],"type":"text/javascript"}}],"id":"a9615e47-4bcf-4758-8f96-e1ca81ce0866","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"serverResponse\": {\n        \"name\": \"{{serverStubName}}\",\n        \"statusCode\": {{statusCode}},\n        \"headers\": [\n            {\n                \"key\": \"{{headerKey}}\",\n                \"value\": \"{{headerValue}}\"\n            }\n        ],\n        \"body\": \"{{serverStubBody}}\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/mocks/{{mockId}}/server-responses","protocol":"https","host":["api","getpostman","com"],"path":["mocks","{{mockId}}","server-responses"]},"description":"Creates a server response. Server responses let you simulate 5xx server-level responses, such as 500 or 503.\n\nServer-level responses are agnostic to application-level logic. Server responses let you simulate this behavior on a mock server. You do not need to define each error for all exposed paths on the mock server.\n\nIf you set a server response as active, then all the calls to the mock server return with that active server response.\n\n**Note:**\n\nYou can create multiple server responses for a mock server, but only one mock server can be set as active.\n\nYou must include the following properties in the request body:\n\n- `name` — A **string** that contains the server response's name.\n- `statusCode` — An **integer** that contains the server stub's 5xx response code. This property **only** accepts [5xx values](https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml).\n    \n\nYou can also include the following optional properties:\n\n- `headers` — An **array of objects** that contains the server stub's headers:\n    - `key` — A **string** that contains the header's key.\n    - `value` — A **string** that contains the header key's value. This value defines the corresponding value for the header key.\n- `body` — A **string** that contains a response body that returns when you call the mock server."},"response":[{"id":"57bae2e4-95e2-4552-931f-f3115e9caeb3","name":"Successful Response","originalRequest":{"method":"POST","header":[{"key":"x-api-key","value":"{{x-api-key}}"}],"body":{"mode":"raw","raw":"{\n    \"serverResponse\": {\n        \"name\": \"Internal Server Error\",\n        \"statusCode\": 500,\n        \"header\": [\n            {\n                \"key\": \"Content-Type\",\n                \"value\": \"application/json\"\n            }\n        ],\n        \"body\": \"{\\n    \\\"message\\\": \\\"Something went wrong; try again later.\\\"\\n}\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","server-responses"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json; charset=utf-8"}],"cookie":[],"responseTime":null,"body":"{\n    \"createdAt\": \"2022-08-02T15:08:03.000Z\",\n    \"updatedAt\": \"2022-08-02T15:08:03.000Z\",\n    \"id\": \"965cdd16-fe22-4d96-a161-3d05490ac421\",\n    \"name\": \"Internal Server Error\",\n    \"statusCode\": 500,\n    \"headers\": [],\n    \"language\": null,\n    \"body\": \"{\\n    \\\"message\\\": \\\"Something went wrong; try again later.\\\"\\n}\",\n    \"createdBy\": \"20891195\",\n    \"updatedBy\": \"20891195\",\n    \"mock\": \"32cd624d-9986-4f20-9048-89252f722269\"\n}"},{"id":"5dd0ce7a-0ac0-4db4-941e-c4228ca52439","name":"Bad Request","originalRequest":{"method":"POST","header":[{"key":"x-api-key","value":"{{x-api-key}}"}],"body":{"mode":"raw","raw":"{\n    \"serverResponse\": {\n        \"name\": \"Internal Server Error\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","server-responses"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json; charset=utf-8"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"paramMissingError\",\n        \"message\": \"Parameter is missing in the request.\",\n        \"details\": {\n            \"param\": [\n                \"statusCode\"\n            ]\n        }\n    }\n}"},{"id":"36b44cb6-2324-4b69-bf09-eaaa8829c42c","name":"Rate Limit Exceeded","originalRequest":{"method":"POST","header":[{"key":"x-api-key","value":"{{x-api-key}}"}],"body":{"mode":"raw","raw":"{\n    \"serverResponse\": {\n        \"name\": \"Internal Server Error\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","server-responses"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json; charset=utf-8"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Update a server response","id":"4e30175c-4c39-4b75-b2a5-2cbe86c6dfa0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"serverResponse\": {\n        \"name\": \"{{serverStubName}}\",\n        \"statusCode\": \"{{statusCode}}\",\n        \"headers\": [\n            {\n                \"key\": \"{{headerKey}}\",\n                \"value\": \"{{headerValue}}\"\n            }\n        ],\n        \"body\": \"{{serverStubBody}}\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/mocks/{{mockId}}/server-responses/{{serverResponseId}}","protocol":"https","host":["api","getpostman","com"],"path":["mocks","{{mockId}}","server-responses","{{serverResponseId}}"]},"description":"Updates a mock server's server response. Include at least one of the following properties in the request body:\n\n- `name` — A **string** that contains the server response's name.\n- `statusCode` — A **string** that contains the server stub's response code. This property only accepts [5xx values](https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml).\n- `headers` — An **array of objects** that contains the server stub's headers:\n    - `key` — A **string** that contains the header's key.\n    - `value` — A **string** that contains the header key's value. This value defines the corresponding value for the header key.\n- `body` — A **string** that contains a response body that returns when you call the mock server."},"response":[{"id":"805767f4-a328-4fb4-8dc4-5b85c1871cf5","name":"Successful Response","originalRequest":{"method":"PUT","header":[{"key":"x-api-key","value":"{{x-api-key}}"}],"body":{"mode":"raw","raw":"{\n    \"serverResponse\": {\n        \"name\": \"Service Unavailable\",\n        \"statusCode\": 503,\n        \"headers\": [\n            {\n                \"key\": \"Content-type\",\n                \"value\": \"application/json\"\n            }\n        ],\n        \"language\": \"json\",\n        \"body\": \"{\\n    \\\"message\\\": \\\"Service is temporarily unavailable due to maintenance. Please reach out to support if the problem persists.\\\"\\n}\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","server-responses","965cdd16-fe22-4d96-a161-3d05490ac421"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json; charset=utf-8"}],"cookie":[],"responseTime":null,"body":"{\n    \"createdAt\": \"2022-08-02T15:08:03.000Z\",\n    \"updatedAt\": \"2022-08-02T15:58:12.000Z\",\n    \"id\": \"965cdd16-fe22-4d96-a161-3d05490ac421\",\n    \"name\": \"Service Unavailable\",\n    \"statusCode\": 503,\n    \"headers\": [\n        {\n            \"key\": \"Content-type\",\n            \"value\": \"application/json\"\n        }\n    ],\n    \"language\": \"json\",\n    \"body\": \"{\\n    \\\"message\\\": \\\"Service is temporarily unavailable due to maintenance. Please reach out to support if the problem persists.\\\"\\n}\",\n    \"createdBy\": \"12345678\",\n    \"updatedBy\": \"12345678\",\n    \"mock\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\"\n}"},{"id":"0140eeea-4c3b-47d5-9746-491d30393afb","name":"Bad Request","originalRequest":{"method":"PUT","header":[{"key":"x-api-key","value":"{{x-api-key}}"}],"body":{"mode":"raw","raw":"{\n    \"serverResponse\": {\n\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","server-responses","965cdd16-fe22-4d96-a161-3d05490ac421"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json; charset=utf-8"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"paramMissingError\",\n        \"message\": \"Parameter is missing in the request.\",\n        \"details\": {\n            \"param\": \"serverResponse\"\n        }\n    }\n}"},{"id":"39bed3e1-7218-4962-ac20-20dadf0734e5","name":"Rate Limit Exceeded","originalRequest":{"method":"PUT","header":[{"key":"x-api-key","value":"{{x-api-key}}"}],"body":{"mode":"raw","raw":"{\n    \"serverResponse\": {\n\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","server-responses","965cdd16-fe22-4d96-a161-3d05490ac421"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json; charset=utf-8"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Delete a server response","id":"12e2f977-e8ab-4005-bb17-c690168a2db6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/mocks/{{mockId}}/server-responses/{{serverResponseId}}","protocol":"https","host":["api","getpostman","com"],"path":["mocks","{{mockId}}","server-responses","{{serverResponseId}}"]},"description":"Deletes a mock server's server response."},"response":[{"id":"c778613e-0b7e-41c5-a5c8-da2f8a00c4e1","name":"Successful Response","originalRequest":{"method":"DELETE","header":[{"key":"x-api-key","value":"{{x-api-key}}"}],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","server-responses","965cdd16-fe22-4d96-a161-3d05490ac421"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json; charset=utf-8"}],"cookie":[],"responseTime":null,"body":"{\n    \"id\": \"bf6bbf95-bebb-44ba-8edb-1f096f905774\",\n    \"name\": \"Service Unavailable\",\n    \"statusCode\": 503,\n    \"headers\": [\n        {\n            \"key\": \"Content-Type\",\n            \"value\": \"application/json\"\n        }\n    ],\n    \"language\": \"json\",\n    \"body\": \"{\\n    \\\"message\\\": \\\"Service is temporarily unavailable due to maintenance. If the problem persists, reach out to support.\\\"\\n}\",\n    \"createdBy\": \"1\",\n    \"updatedBy\": \"1\",\n    \"createdAt\": \"2022-05-02T09:38:04.000Z\"\n}"},{"id":"124c3615-f3d2-446d-84a0-b31232176e5b","name":"Bad Request","originalRequest":{"method":"DELETE","header":[{"key":"x-api-key","value":"{{x-api-key}}"}],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","server-responses","965cdd16-fe22-4d96-a161-3d05490ac421"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json; charset=utf-8"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"serverResponseNotFoundError\",\n        \"message\": \"We could not find the mock server response you are looking for.\"\n    }\n}"},{"id":"f4d4446f-7a73-4ccc-82e3-1ca8871bc29e","name":"Rate Limit Exceeded","originalRequest":{"method":"DELETE","header":[{"key":"x-api-key","value":"{{x-api-key}}"}],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","server-responses","965cdd16-fe22-4d96-a161-3d05490ac421"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json; charset=utf-8"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]}],"id":"e379435a-92eb-4381-a0c6-3ee355b13ae7","description":"These endpoints enable you manage mock server responses. Server responses let you simulate 5xx server-level responses, such as 500 or 503."},{"name":"Get a mock server","id":"8217cba2-fbc0-4cd0-a42e-a5b2bc80a4cf","request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/mocks/{{mockId}}","protocol":"https","host":["api","getpostman","com"],"path":["mocks","{{mockId}}"]},"description":"Gets information about a mock server."},"response":[{"id":"fb0eac3a-f0c7-4c25-ad23-4dbcabb6a6e7","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"mock\": {\n        \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"owner\": \"12345678\",\n        \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"mockUrl\": \"https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io\",\n        \"name\": \"Test Mock\",\n        \"config\": {\n            \"headers\": [],\n            \"matchBody\": false,\n            \"matchQueryParams\": true,\n            \"matchWildcards\": true,\n            \"delay\": {\n                \"type\": \"fixed\",\n                \"duration\": 140000\n            },\n            \"serverResponseId\": \"94d0f5d9-dbdf-4046-9a7d-a11f9b78ac65\"\n        },\n        \"createdAt\": \"2022-07-25T20:54:30.000Z\",\n        \"updatedAt\": \"2022-07-25T20:54:30.000Z\",\n        \"isPublic\": false,\n        \"deactivated\": false,\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"},{"id":"fc4ee581-af7b-4054-956c-96e37dc094fe","name":"Forbidden","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"}],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You don't have access to this mock.\"\n    }\n}"},{"id":"08b463b6-7e4c-4090-8ebf-f4f606c21588","name":"Not Found","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified mock does not exist.\"\n    }\n}"},{"id":"8e50f953-fa82-4c29-a9fd-923020febd83","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Create a mock server","id":"3fa93230-6889-4ff2-ab82-304e14e63097","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n\t\"mock\": {\n        \"name\": \"{{mockName}}\",\n\t\t\"collection\": \"{{collectionId}}\",\n\t\t\"environment\": \"{{environmentId}}\",\n        \"private\": {{boolean}}\n\t}\n}"},"url":{"raw":"https://api.getpostman.com/mocks","protocol":"https","host":["api","getpostman","com"],"path":["mocks"],"query":[{"key":"workspace","value":"{{workspaceId}}","description":"Optional. A workspace ID in which to create the mock server.\n\nIf you do not include this query parameter, the system creates the mock server in your \"My Workspace\" workspace.","disabled":true}]},"description":"**In Postman v10 and higher you cannot create mocks for collections added to an API definition.**\n\nCreates a mock server in a collection. Include a `mock` object in the request body that contains following properties:\n\n- `collection` — A **string** that contains the collection ID.\n    \n\nYou can include the following optional properties in the request body:\n\n- `environment` — A **string** that contains the environment ID to associate with the mock server.\n- `name` — A **string** that contains the the mock server's name.\n- `private` — A **boolean** value that, if true, sets the mock server as private. By default, mock servers are public and can receive requests from anyone and anywhere."},"response":[{"id":"348c2ab9-424e-42f6-881f-ce6d7dc2ed83","name":"Successful Response","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n\t\"mock\": {\n        \"name\": \"Test Mock\",\n\t\t\"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n\t\t\"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"private\": false\n\t}\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/mocks?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["mocks"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"The mime type of this content","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"mock\": {\n        \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"owner\": \"12345678\",\n        \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"mockUrl\": \"https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io\",\n        \"name\": \"Test Mock\",\n        \"config\": {\n            \"headers\": [],\n            \"matchBody\": false,\n            \"matchQueryParams\": true,\n            \"matchWildcards\": true,\n            \"delay\": null,\n            \"serverResponseId\": null\n        },\n        \"createdAt\": \"2022-06-09T19:00:39.000Z\",\n        \"updatedAt\": \"2022-06-09T19:00:39.000Z\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"},{"id":"af6302c5-07f6-4cb2-ac0e-1297181bf58d","name":"Bad Request","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n\t\"mock\": {\n\t\t\"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"name\": \"Test Mock\"\n\t}\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/mocks","protocol":"https","host":["api","getpostman","com"],"path":["mocks"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. A workspace ID in which to create the mock server.","disabled":true}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"The mime type of this content","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"paramMissingError\",\n        \"message\": \"Parameter is missing in the request.\",\n        \"details\": {\n            \"param\": [\n                \"collection\"\n            ]\n        }\n    }\n}"},{"id":"af365f50-5151-40d2-bb76-0e7fb3ac88d2","name":"Rate Limit Exceeded","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n\t\"mock\": {\n        \"name\": \"Test Mock\",\n\t\t\"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n\t\t\"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"private\": false\n\t}\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/mocks","protocol":"https","host":["api","getpostman","com"],"path":["mocks"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. A workspace ID in which to create the mock server.","disabled":true}]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"The mime type of this content","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Get all mock servers","id":"077fbb4e-aaf4-44a8-acd9-1014703b2092","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/mocks","protocol":"https","host":["api","getpostman","com"],"path":["mocks"],"query":[{"key":"teamId","value":"{{teamId}}","description":"Return only mock servers that belong the given team ID.","disabled":true},{"key":"workspace","value":"{{workspaceId}}","description":"Return only mock servers in the given workspace.","disabled":true}]},"description":"Gets all mock servers. By default, this endpoint returns only mock servers you created across all workspaces.\n\n**Note:**\n\nIf you pass both the `teamId` and `workspace` query parameters, this endpoint only accepts the `workspace` query."},"response":[{"id":"c11c9a14-78dc-4daf-8159-7bb2c8c20b98","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/mocks","protocol":"https","host":["api","getpostman","com"],"path":["mocks"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"mocks\": [\n        {\n            \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n            \"owner\": \"12345678\",\n            \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n            \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"mockUrl\": \"https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io\",\n            \"name\": \"Test Mock A\",\n            \"config\": {\n                \"headers\": [],\n                \"matchBody\": false,\n                \"matchQueryParams\": true,\n                \"matchWildcards\": true,\n                \"delay\": {\n                    \"type\": \"fixed\",\n                    \"duration\": 140000\n                },\n                \"serverResponseId\": null\n            },\n            \"createdAt\": \"2022-07-25T20:54:30.000Z\",\n            \"updatedAt\": \"2022-07-25T20:54:30.000Z\",\n            \"isPublic\": false,\n            \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n        },\n        {\n            \"id\": \"cf0f8f11-fe0e-455f-99f3-4177f10f0704\",\n            \"owner\": \"12345678\",\n            \"uid\": \"12345678-cf0f8f11-fe0e-455f-99f3-4177f10f0704\",\n            \"collection\": \"12345678-2cd8f6b1-e85b-46a6-8111-bd62e73e8aa8\",\n            \"mockUrl\": \"https://cf0f8f11-fe0e-455f-99f3-4177f10f0704.mock.pstmn.io\",\n            \"name\": \"Test Mock B\",\n            \"config\": {\n                \"headers\": [],\n                \"matchBody\": false,\n                \"matchHeader\": false,\n                \"matchQueryParams\": true,\n                \"matchWildcards\": true,\n                \"delay\": null,\n                \"serverResponseId\": \"94d0f5d9-dbdf-4046-9a7d-a11f9b78ac65\"\n            },\n            \"createdAt\": \"2023-01-26T18:59:05.000Z\",\n            \"updatedAt\": \"2023-01-26T18:59:05.000Z\",\n            \"isPublic\": false\n        }\n    ]\n}"},{"id":"38c8c6af-8d4c-4dbb-ba33-84ca28ec6b93","name":"Filter by teamId","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/mocks?teamId=1234","protocol":"https","host":["api","getpostman","com"],"path":["mocks"],"query":[{"key":"teamId","value":"1234"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"mocks\": [\n        {\n            \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n            \"owner\": \"12345678\",\n            \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n            \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"mockUrl\": \"https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io\",\n            \"name\": \"Test Mock A\",\n            \"config\": {\n                \"headers\": [],\n                \"matchBody\": false,\n                \"matchQueryParams\": true,\n                \"matchWildcards\": true,\n                \"delay\": {\n                    \"type\": \"fixed\",\n                    \"duration\": 140000\n                },\n                \"serverResponseId\": null\n            },\n            \"createdAt\": \"2022-07-25T20:54:30.000Z\",\n            \"updatedAt\": \"2022-07-25T20:54:30.000Z\",\n            \"isPublic\": false,\n            \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n        },\n        {\n            \"id\": \"cf0f8f11-fe0e-455f-99f3-4177f10f0704\",\n            \"owner\": \"12345678\",\n            \"uid\": \"12345678-cf0f8f11-fe0e-455f-99f3-4177f10f0704\",\n            \"collection\": \"12345678-2cd8f6b1-e85b-46a6-8111-bd62e73e8aa8\",\n            \"mockUrl\": \"https://cf0f8f11-fe0e-455f-99f3-4177f10f0704.mock.pstmn.io\",\n            \"name\": \"Test Mock B\",\n            \"config\": {\n                \"headers\": [],\n                \"matchBody\": false,\n                \"matchHeader\": false,\n                \"matchQueryParams\": true,\n                \"matchWildcards\": true,\n                \"delay\": null,\n                \"serverResponseId\": \"94d0f5d9-dbdf-4046-9a7d-a11f9b78ac65\"\n            },\n            \"createdAt\": \"2023-01-26T18:59:05.000Z\",\n            \"updatedAt\": \"2023-01-26T18:59:05.000Z\",\n            \"isPublic\": false\n        },\n        {\n            \"id\": \"e27fe349-bdc7-4f1c-b707-6b9fef7435e2\",\n            \"owner\": \"87654321\",\n            \"uid\": \"87654321-e27fe349-bdc7-4f1c-b707-6b9fef7435e2\",\n            \"collection\": \"87654321-b75dfb85-9209-4212-8f3d-a9d5e28167e5\",\n            \"mockUrl\": \"https://e27fe349-bdc7-4f1c-b707-6b9fef7435e2.mock.pstmn.io\",\n            \"name\": \"Test Mock C\",\n            \"config\": {\n                \"headers\": [],\n                \"matchBody\": false,\n                \"matchHeader\": false,\n                \"matchQueryParams\": true,\n                \"matchWildcards\": true,\n                \"delay\": null,\n                \"serverResponseId\": null\n            },\n            \"createdAt\": \"2023-06-30T14:21:54.000Z\",\n            \"updatedAt\": \"2023-06-30T14:26:55.000Z\",\n            \"isPublic\": true\n        }\n    ]\n}"},{"id":"6d125f89-b96d-454f-9a53-d9f20b974253","name":"Filter by workspace","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/mocks?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["mocks"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"mocks\": [\n        {\n            \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n            \"owner\": \"12345678\",\n            \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n            \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"mockUrl\": \"https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io\",\n            \"name\": \"Test Mock A\",\n            \"config\": {\n                \"headers\": [],\n                \"matchBody\": false,\n                \"matchQueryParams\": true,\n                \"matchWildcards\": true,\n                \"delay\": {\n                    \"type\": \"fixed\",\n                    \"duration\": 140000\n                },\n                \"serverResponseId\": null\n            },\n            \"createdAt\": \"2022-07-25T20:54:30.000Z\",\n            \"updatedAt\": \"2022-07-25T20:54:30.000Z\",\n            \"isPublic\": false,\n            \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n        },\n        {\n            \"id\": \"c929c990-59f1-480a-aea4-c37e25c8785d\",\n            \"owner\": \"12345678\",\n            \"uid\": \"12345678-b86af87f-7e1f-4476-85bb-c1f71424fd5e\",\n            \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"mockUrl\": \"https://c929c990-59f1-480a-aea4-c37e25c8785d.mock.pstmn.io\",\n            \"name\": \"Test\",\n            \"config\": {\n                \"headers\": [],\n                \"matchBody\": false,\n                \"matchHeader\": false,\n                \"matchQueryParams\": true,\n                \"matchWildcards\": true,\n                \"delay\": null,\n                \"serverResponseId\": null\n            },\n            \"createdAt\": \"2023-06-30T12:57:40.000Z\",\n            \"updatedAt\": \"2023-06-30T12:57:40.000Z\",\n            \"isPublic\": false,\n            \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n        }\n    ]\n}"},{"id":"46a02ed1-6dbe-46e9-b581-038738d9dd32","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/mocks","protocol":"https","host":["api","getpostman","com"],"path":["mocks"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Delete a mock server","id":"7c4aa6e9-1c5e-4df1-a3b5-6a8bbb5bf3a6","request":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/mocks/{{mockId}}","protocol":"https","host":["api","getpostman","com"],"path":["mocks","{{mockId}}"]},"description":"Deletes a mock server."},"response":[{"id":"1ca398e2-624c-4a5f-b0d7-e44c7fab2b53","name":"Successful Response","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"mock\": {\n        \"id\": \"0fca2246-c108-41f5-8454-cc032def329f\",\n        \"uid\": \"1679925-0fca2246-c108-41f5-8454-cc032def329f\"\n    }\n}"},{"id":"8fb22092-5ddf-4cd1-9ec1-0293b29e81b0","name":"Bad Request","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified mock does not exist.\",\n        \"details\": {}\n    }\n}"},{"id":"8f5daa7d-5a72-430c-a3fb-136050b59928","name":"Rate Limit Exceeded","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Unpublish a mock server","id":"81247429-3afc-4a31-a11a-bc24add2370f","request":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/mocks/{{mockId}}/unpublish","protocol":"https","host":["api","getpostman","com"],"path":["mocks","{{mockId}}","unpublish"]},"description":"Unpublishes a mock server. Unpublishing a mock server sets its **Access Control** configuration setting to private."},"response":[{"id":"a28e8f92-a829-4c1b-906f-32aa8300da52","name":"Success Response","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/unpublish","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","unpublish"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"mock\": {\n        \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\"\n    }\n}"},{"id":"4d3a52e1-09fa-4826-bb00-2bacb184deea","name":"Bad Request","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/unpublish","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","unpublish"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"mockAlreadyUnpublishedError\",\n        \"message\": \"This mock has already been deleted.\"\n    }\n}"},{"id":"fcb4410a-3a53-4328-b297-8797663eec39","name":"Rate Limit Exceeded","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/unpublish","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","unpublish"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Publish a mock server","id":"23532ecc-afe8-42e8-880b-028135e1cadb","request":{"method":"POST","header":[],"url":{"raw":"https://api.getpostman.com/mocks/{{mockId}}/publish","protocol":"https","host":["api","getpostman","com"],"path":["mocks","{{mockId}}","publish"]},"description":"Publishes a mock server. Publishing a mock server sets its **Access Control** configuration setting to public."},"response":[{"id":"03384731-3a1a-491c-931e-034e3ac7a3b9","name":"Success Response","originalRequest":{"method":"POST","header":[],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/publish","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","publish"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"mock\": {\n        \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\"\n    }\n}"},{"id":"0d77ae05-8e72-47d7-9984-ede7c59869f7","name":"Bad Request","originalRequest":{"method":"POST","header":[],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/publish","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","publish"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"mockAlreadyPublishedError\",\n        \"message\": \"This mock is already public.\"\n    }\n}"},{"id":"00bde81d-302f-4c1b-b5e6-2cce0068e1c6","name":"Rate Limit Exceeded","originalRequest":{"method":"POST","header":[],"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/publish","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","publish"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Update a mock server","id":"6f15657d-e7b6-4842-8d0d-ae7c4f95311c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"mock\": {\n        \"name\": \"{{mockName}}\",\n        \"environment\": \"{{environmentUid}}\",\n        \"private\": {{boolean}},\n        \"versionTag\": \"{{apiVersionTagId}}\",\n        \"config\": {\n          \"serverResponseId\": \"{{serverResponseId}}\"\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/mocks/{{mockId}}","protocol":"https","host":["api","getpostman","com"],"path":["mocks","{{mockId}}"]},"description":"Updates a mock server. Include the `mock` object in the request body with one or more of the following properties:\n\n- `name` — A **string** that contains the mock server's name.\n- `environment` — A **string** that contains the environment UID.\n- `private` — A **boolean** value that, if true, sets the mock server as private. By default, mock servers are public and can receive requests from anyone and anywhere.\n- `versionTag` — A **string** that contains the API's version tag ID.\n- `config` — An **object** that contains the following properties:\n    - `serverResponseId` — A **string** that contains the server response ID. This sets the given server response as the default response for each request."},"response":[{"id":"e6fe1688-21a3-46b2-bf76-c6774a8d5474","name":"Successful Response","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"mock\": {\n        \"name\": \"Test Mock\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"description\": \"This is a test mock server.\",\n        \"private\": true,\n        \"versionTag\": \"abf07d3d-f8ec-47d4-8015-9fe83078b4ec\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json"}],"cookie":[],"responseTime":null,"body":"{\n    \"mock\": {\n        \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"owner\": \"12345678\",\n        \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"mockUrl\": \"https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io\",\n        \"name\": \"Test Mock\",\n        \"config\": {\n            \"headers\": [],\n            \"matchBody\": false,\n            \"matchQueryParams\": true,\n            \"matchWildcards\": true\n        },\n        \"createdAt\": \"2022-06-09T19:38:06.000Z\",\n        \"updatedAt\": \"2022-06-13T18:55:25.000Z\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"},{"id":"0b8e1eec-e351-414b-bc49-f377d33bff8d","name":"Activate a Server Response","originalRequest":{"method":"PUT","header":[{"key":"x-api-key","value":"{{x-api-key}}"}],"body":{"mode":"raw","raw":"{\n    \"mock\": {\n        \"config\": {\n          \"serverResponseId\": \"9a291bbe-dc0a-44ba-a3c8-6dbd06a61460\"\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json; charset=utf-8"}],"cookie":[],"responseTime":null,"body":"{\n    \"mock\": {\n        \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"owner\": \"12345678\",\n        \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"mockUrl\": \"https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io\",\n        \"name\": \"Test Mock\",\n        \"config\": {\n            \"headers\": [],\n            \"matchBody\": false,\n            \"matchQueryParams\": true,\n            \"matchWildcards\": true,\n            \"delay\": null,\n            \"serverResponseId\": \"9a291bbe-dc0a-44ba-a3c8-6dbd06a61460\"\n        },\n        \"createdAt\": \"2022-06-09T19:38:06.000Z\",\n        \"updatedAt\": \"2022-06-13T18:55:25.000Z\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"},{"id":"6e1daf28-6809-444a-a944-db69323e16bd","name":"Deactivate a Server Response","originalRequest":{"method":"PUT","header":[{"key":"x-api-key","value":"{{x-api-key}}"}],"body":{"mode":"raw","raw":"{\n    \"mock\": {\n        \"config\": {\n          \"serverResponseId\": null\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json; charset=utf-8"}],"cookie":[],"responseTime":null,"body":"{\n    \"mock\": {\n        \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"owner\": \"12345678\",\n        \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"mockUrl\": \"https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io\",\n        \"name\": \"Test Mock\",\n        \"config\": {\n            \"headers\": [],\n            \"matchBody\": false,\n            \"matchQueryParams\": true,\n            \"matchWildcards\": true,\n            \"delay\": null,\n            \"serverResponseId\": null\n        },\n        \"createdAt\": \"2022-06-09T19:38:06.000Z\",\n        \"updatedAt\": \"2022-06-13T18:55:25.000Z\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"},{"id":"9a00d152-aacd-44de-97a3-d9978b5c29b8","name":"Rate Limit Exceeded","originalRequest":{"method":"PUT","header":[{"key":"x-api-key","value":"{{x-api-key}}"}],"body":{"mode":"raw","raw":"{\n    \"mock\": {\n        \"config\": {\n          \"serverResponseId\": null\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289","protocol":"https","host":["api","getpostman","com"],"path":["mocks","12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json; charset=utf-8"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]}],"id":"326a0fa0-19c6-4de0-a67f-a12441634f04","description":"The `/mocks` endpoints lets you manage your [mock servers](https://learning.postman.com/docs/designing-and-developing-your-api/mocking-data/setting-up-mock/).\n\n### Important\n\n**In Postman v10 and higher you cannot create mock servers for collections added to an API definition.** You can still create mock servers for collections that are not part of an API definition."},{"name":"Monitors","item":[{"name":"Create a monitor","id":"ba328db8-50c9-414d-aaff-83a357eab389","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"monitor\": {\n    \"name\": \"{{monitorName}}\",\n    \"schedule\": {\n      \"cron\": \"{{cronFrequencyPattern}}\",\n      \"timezone\": \"{{monitorTimezone}}\"\n    },\n    \"collection\": \"{{collectionUid}}\",\n    \"environment\": \"{{environmentUid}}\"\n  }\n}"},"url":{"raw":"https://api.getpostman.com/monitors","protocol":"https","host":["api","getpostman","com"],"path":["monitors"],"query":[{"key":"workspace","value":"{{workspaceId}}","description":"Optional. The workspace ID.","disabled":true}]},"description":"**In Postman v10 and higher you cannot create monitors for collections added to an API definition.**\n\nCreates a monitor. Include the following properties in the request body:\n\n- `name` — A **string** value that contains the monitor's name.\n- `schedule` — An **object** that contains the following properties:\n    - `cron` — A **string** value the monitor's run frequency. At this time you can only create monitors with limited schedules. For information about the available schedules, see our [Postman Monitors](https://monitor.getpostman.com) collection. See the table below for cron patterns.\n    - `timezone` — A string value that contains the monitor's [timezone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).\n- `collection` — A **string** value that contains the monitor's associated collection unique ID.\n- `environment` — A **string** value that contains the monitor's associated environment unique ID.\n    \n\n### Cron patterns\n\n| Frequency | Cron Pattern |\n| --- | --- |\n| Every 5 minutes | `\\\\\\*/5 \\\\\\* \\\\\\* \\\\\\* \\\\\\*` |\n| Every 30 minutes | `\\\\\\*/30 \\\\\\* \\\\\\* \\\\\\* \\\\\\*` |\n| Every Hour | `0 \\\\\\*/1 \\\\\\* \\\\\\* \\\\\\*` |\n| Every 6 Hours | `0 \\\\\\*/6 \\\\\\* \\\\\\* \\\\\\*` |\n| Every day at 5pm | `0 17 \\\\\\* \\\\\\* \\\\\\*` |\n| Every Monday at 12pm | `0 12 \\\\\\* \\\\\\* MON` |\n| Every weekday (Monday - Friday) at 6am | `0 6 \\\\\\* \\\\\\* MON-FRI` |"},"response":[{"id":"1ddd4d62-6512-4756-98b5-e6c207e64379","name":"Successful Response","originalRequest":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"monitor\": {\n        \"name\": \"Test Monitor\",\n        \"schedule\": {\n            \"cron\": \"0 0 * * *\",\n            \"timezone\": \"America/Chicago\"\n        },\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/monitors","protocol":"https","host":["api","getpostman","com"],"path":["monitors"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. The workspace ID.","disabled":true}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"yes","key":"getpostmanlogin"},{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"0e9f9b1f3e7218e7fd625cca14597bc771064a433bdd75b5a40196cef86c3fa29d483358e0b254b0a097ac305b132ec8481e2c5b835663fbed3bbb93b5a747cf8776efe85650e29a8e5f0a63906480e5b9e5a9860bef703234812ce9f65ea6dcbc099ac952d1c36338e2d192a793b82a1d8a2dd6dd031f831c08805a9e7ea1f55d46c54cf6ecaecbac84ddf581c8a267a116c0d6d935f19171bce93c6e040c0bd49fc1325bdb8929914548d7c0cae78796aba4073dc9ab63194a90e430919d8757c7ccb7b4dffc61b9cd4a748edc88d0b4ba727c83ea1af546908ff63a1e2ee9784a7b9af2f61997e0dd34adcb479151d11d0e8d67ba76050d55c7bbb88f2f700e14f848f6b929b441869fba53436eb7983660d0e4af82aa0dc5c47dddf974599280179889c03c3e38212eaa8270c641298f0a49b923ed3d04d61e2c6c25844b67df9e4814d378b440e8124e429dc292a147038a57c03e8b8ece700b376fcf8e002dca35142f97b5f49144e2f7477b99d767dff12bb37dd846419051bdaa4c6d931545a5df09bda8a80a336585e5d6ba44f087607512344f91321a359dc150cb411600fbf0d974f63116046d681d3f82a16e50e3bb69c463430e284f64e007f354a9ed4a2afdb27caad0414d451875ec78ea98924e32d8f881eb2c260b348e00baf782","key":"postman.sid"}],"responseTime":null,"body":"{\n    \"monitor\": {\n        \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n        \"name\": \"Test Monitor\",\n        \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n    }\n}"},{"id":"0458ae84-e4a5-4db3-b4f0-48fd22f7c9bb","name":"Create Monitor in a Workspace","originalRequest":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"monitor\": {\n        \"name\": \"Test Monitor\",\n        \"schedule\": {\n            \"cron\": \"0 0 * * *\",\n            \"timezone\": \"America/Chicago\"\n        },\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/monitors?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["monitors"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. The workspace ID."}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"monitor\": {\n        \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n        \"name\": \"Test Monitor\",\n        \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n    }\n}"},{"id":"fa022e8e-1d94-4754-8441-ed292f35bf68","name":"Invalid Cron Pattern","originalRequest":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n\t\"monitor\": {\n\t\t\"name\": \"Test Monitor\",\n\t\t\"schedule\": {\n\t\t\t\"cron\": \"* * * * *\",\n\t\t\t\"timezone\": \"America/Chicago\"\n\t\t},\n\t\t\"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n\t\t\"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n\t}\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/monitors","protocol":"https","host":["api","getpostman","com"],"path":["monitors"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. The workspace ID.","type":"text","disabled":true}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"yes","key":"getpostmanlogin"},{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a","key":"postman.sid"},{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b","key":"postman-staging.sid"}],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"cronPatternNotAllowedError\",\n        \"message\": \"The specified cron pattern is not allowed. Please check https://monitor.getpostman.com for the allowed schedules.\",\n        \"details\": {\n            \"pattern\": \"* * * * *\"\n        }\n    }\n}"},{"id":"e67ae9bc-f91d-4429-9474-aed4d9cc9c78","name":"Invalid Collection UID","originalRequest":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n\t\"monitor\": {\n\t\t\"name\": \"Test Monitor\",\n\t\t\"schedule\": {\n\t\t\t\"cron\": \"0 0 * * *\",\n\t\t\t\"timezone\": \"America/Chicago\"\n\t\t},\n\t\t\"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n\t\t\"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n\t}\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/monitors","protocol":"https","host":["api","getpostman","com"],"path":["monitors"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. The workspace ID.","type":"text","disabled":true}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"yes","key":"getpostmanlogin"},{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a","key":"postman.sid"},{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b","key":"postman-staging.sid"}],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"invalidUidError\",\n        \"message\": \"The specified uid is invalid.\",\n        \"details\": {\n            \"param\": \"collection\",\n            \"uid\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"},{"id":"f3b20b14-c059-4109-bdde-b58a69e06346","name":"Invalid Environment UID","originalRequest":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"monitor\": {\n        \"name\": \"Test Monitor\",\n        \"schedule\": {\n            \"cron\": \"0 0 * * *\",\n            \"timezone\": \"America/Chicago\"\n        },\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environment\": \"5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/monitors","protocol":"https","host":["api","getpostman","com"],"path":["monitors"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. The workspace ID.","disabled":true}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"yes","key":"getpostmanlogin"},{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a","key":"postman.sid"},{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b","key":"postman-staging.sid"}],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"invalidUidError\",\n        \"message\": \"The specified uid is invalid.\",\n        \"details\": {\n            \"param\": \"environment\",\n            \"uid\": \"5daabc50-8451-43f6-922d-96b403b4f28e\"\n        }\n    }\n}"},{"id":"725a44c0-509b-4b00-a681-a8127a1904aa","name":"Invalid Timezone","originalRequest":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"monitor\": {\n        \"name\": \"Test Monitor\",\n        \"schedule\": {\n            \"cron\": \"0 0 * * *\",\n            \"timezone\": \"USA\"\n        },\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/monitors","protocol":"https","host":["api","getpostman","com"],"path":["monitors"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. The workspace ID.","type":"text","disabled":true}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"yes","key":"getpostmanlogin"},{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a","key":"postman.sid"},{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b","key":"postman-staging.sid"}],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"invalidParamsError\",\n        \"message\": \"The request had invalid parameters\",\n        \"details\": {\n            \"param\": \"schedule.timezone\"\n        }\n    }\n}"},{"id":"910e08ab-be87-42cb-8376-80dc80c085f6","name":"Missing Parameter","originalRequest":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"monitor\": {\n        \"schedule\": {\n            \"cron\": \"0 0 * * *\",\n            \"timezone\": \"America/Chicago\"\n        },\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/monitors","protocol":"https","host":["api","getpostman","com"],"path":["monitors"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. The workspace ID.","disabled":true}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"yes","key":"getpostmanlogin"},{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a","key":"postman.sid"},{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b","key":"postman-staging.sid"}],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"paramMissingError\",\n        \"message\": \"Parameter is missing in the request.\",\n        \"details\": {\n            \"param\": [\n                \"name\"\n            ]\n        }\n    }\n}"},{"id":"5f87d6b0-8d38-45ce-ac5b-19c389df6c7a","name":"Forbidden Error","originalRequest":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"monitor\": {\n        \"name\": \"Test Monitor\",\n        \"schedule\": {\n            \"cron\": \"0 0 * * *\",\n            \"timezone\": \"America/Chicago\"\n        },\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/monitors","protocol":"https","host":["api","getpostman","com"],"path":["monitors"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. The workspace ID.","disabled":true}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You need read access to this collection in order to perform this action.\"\n    }\n}"},{"id":"f5bb36e9-b03d-461f-aea9-2c070b111600","name":"Rate Limit Exceeded","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"monitor\": {\n        \"name\": \"Test Monitor\",\n        \"schedule\": {\n            \"cron\": \"0 0 * * *\",\n            \"timezone\": \"America/Chicago\"\n        },\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/monitors","protocol":"https","host":["api","getpostman","com"],"path":["monitors"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. The workspace ID.","disabled":true}]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Run a monitor","id":"5c86d990-dcfb-4134-ab21-6d0c3ef9ffeb","request":{"method":"POST","header":[],"url":{"raw":"https://api.getpostman.com/monitors/{{monitorId}}/run","protocol":"https","host":["api","getpostman","com"],"path":["monitors","{{monitorId}}","run"]},"description":"Runs a monitor and returns its run results."},"response":[{"id":"689d52fb-efa8-4abd-b50e-3cae78a86b0a","name":"Successful Response","originalRequest":{"method":"POST","header":[],"url":{"raw":"https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8/run","protocol":"https","host":["api","getpostman","com"],"path":["monitors","12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8","run"]}},"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"run\": {\n        \"info\": {\n            \"jobId\": \"1ecee76a-e14e-47c0-bddc-256bf690c407\",\n            \"monitorId\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n            \"name\": \"Test Monitor\",\n            \"collectionUid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"environmentUid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n            \"status\": \"success\",\n            \"startedAt\": \"2022-06-17T19:50:04.019Z\",\n            \"finishedAt\": \"2022-06-17T19:50:06.439Z\"\n        },\n        \"stats\": {\n            \"assertions\": {\n                \"total\": 0,\n                \"failed\": 0\n            },\n            \"requests\": {\n                \"total\": 1,\n                \"failed\": 0\n            }\n        },\n        \"executions\": [\n            {\n                \"id\": 1,\n                \"item\": {\n                    \"name\": \"Sample POST Request\"\n                },\n                \"request\": {\n                    \"method\": \"POST\",\n                    \"url\": \"http://echo.getpostman.com/post\",\n                    \"headers\": {\n                        \"Content-Type\": \"application/json\",\n                        \"User-Agent\": \"PostmanRuntime/7.29.0\",\n                        \"Accept\": \"*/*\",\n                        \"Cache-Control\": \"no-cache\",\n                        \"Postman-Token\": null,\n                        \"Host\": \"echo.getpostman.com\",\n                        \"Accept-Encoding\": \"gzip, deflate, br\",\n                        \"Connection\": \"keep-alive\",\n                        \"Content-Length\": \"0\"\n                    },\n                    \"body\": {\n                        \"contentLength\": 0\n                    },\n                    \"timestamp\": \"2022-06-17T19:50:06.186Z\"\n                },\n                \"response\": {\n                    \"code\": 200,\n                    \"body\": {\n                        \"contentLength\": 50\n                    },\n                    \"responseTime\": 49,\n                    \"responseSize\": 50,\n                    \"headers\": {\n                        \"Date\": \"Fri, 17 Jun 2022 19:50:06 GMT\",\n                        \"Content-Type\": \"text/plain\",\n                        \"Content-Length\": \"50\",\n                        \"Connection\": \"keep-alive\",\n                        \"Server\": null\n                    }\n                }\n            }\n        ],\n        \"failures\": []\n    }\n}"},{"id":"c96c3e2c-00da-4a1d-9a67-9db7bea0026f","name":"Monitor Run Failed","originalRequest":{"method":"POST","header":[],"body":{"mode":"formdata","formdata":[]},"url":{"raw":"https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8/run","protocol":"https","host":["api","getpostman","com"],"path":["monitors","12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8","run"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"yes","key":"getpostmanlogin"},{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a","key":"postman.sid"},{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b","key":"postman-staging.sid"}],"responseTime":null,"body":"{\n    \"run\": {\n        \"info\": {\n            \"jobId\": \"1ecee76a-e14e-47c0-bddc-256bf690c407\",\n            \"monitorId\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n            \"name\": \"Test Monitor\",\n            \"collectionUid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"environmentUid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n            \"status\": \"failed\",\n            \"startedAt\": \"2022-06-17T20:00:41.659Z\",\n            \"finishedAt\": \"2022-06-17T20:00:42.693Z\"\n        },\n        \"stats\": {\n            \"assertions\": {\n                \"total\": 1,\n                \"failed\": 1\n            },\n            \"requests\": {\n                \"total\": 1,\n                \"failed\": 0\n            }\n        },\n        \"executions\": [\n            {\n                \"id\": 1,\n                \"item\": {\n                    \"name\": \"Sample POST Request\"\n                },\n                \"request\": {\n                    \"method\": \"POST\",\n                    \"url\": \"http://echo.getpostman.com/post\",\n                    \"headers\": {\n                        \"Content-Type\": \"application/json\",\n                        \"User-Agent\": \"PostmanRuntime/7.29.0\",\n                        \"Accept\": \"*/*\",\n                        \"Cache-Control\": \"no-cache\",\n                        \"Postman-Token\": null,\n                        \"Host\": \"echo.getpostman.com\",\n                        \"Accept-Encoding\": \"gzip, deflate, br\",\n                        \"Connection\": \"keep-alive\",\n                        \"Content-Length\": \"0\"\n                    },\n                    \"body\": {\n                        \"contentLength\": 0\n                    },\n                    \"timestamp\": \"2022-06-17T20:00:42.423Z\"\n                },\n                \"response\": {\n                    \"code\": 200,\n                    \"body\": {\n                        \"contentLength\": 50\n                    },\n                    \"responseTime\": 15,\n                    \"responseSize\": 50,\n                    \"headers\": {\n                        \"Date\": \"Fri, 17 Jun 2022 20:00:42 GMT\",\n                        \"Content-Type\": \"text/plain\",\n                        \"Content-Length\": \"50\",\n                        \"Connection\": \"keep-alive\",\n                        \"Server\": null\n                    }\n                }\n            }\n        ],\n        \"failures\": []\n    }\n}"},{"id":"8b942112-454a-4a82-9f96-d1e89b3bd11c","name":"Monitor Run with Errors","originalRequest":{"method":"POST","header":[],"body":{"mode":"formdata","formdata":[]},"url":{"raw":"https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8/run","protocol":"https","host":["api","getpostman","com"],"path":["monitors","12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8","run"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"yes","key":"getpostmanlogin"},{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a","key":"postman.sid"},{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b","key":"postman-staging.sid"}],"responseTime":null,"body":"{\n    \"run\": {\n        \"info\": {\n            \"jobId\": \"1ecee76a-e14e-47c0-bddc-256bf690c407\",\n            \"monitorId\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n            \"name\": \"Test Monitor\",\n            \"collectionUid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"environmentUid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n            \"status\": \"error\",\n            \"startedAt\": \"2022-06-17T20:04:47.183Z\",\n            \"finishedAt\": \"2022-06-17T20:04:48.858Z\"\n        },\n        \"stats\": {\n            \"assertions\": {\n                \"total\": 4,\n                \"failed\": 2\n            },\n            \"requests\": {\n                \"total\": 4,\n                \"failed\": 3\n            }\n        },\n        \"executions\": [\n            {\n                \"id\": 1,\n                \"item\": {\n                    \"name\": \"Sample GET Request\"\n                },\n                \"request\": {\n                    \"method\": \"GET\",\n                    \"url\": \"https://example.com/search?format=json&state=&city=&country=\",\n                    \"headers\": {\n                        \"User-Agent\": \"PostmanRuntime/7.29.0\",\n                        \"Accept\": \"*/*\",\n                        \"Cache-Control\": \"no-cache\",\n                        \"Postman-Token\": null,\n                        \"Host\": \"example.com\",\n                        \"Accept-Encoding\": \"gzip, deflate, br\",\n                        \"Connection\": \"keep-alive\"\n                    },\n                    \"body\": {\n                        \"contentLength\": 0\n                    },\n                    \"timestamp\": \"2022-06-17T20:04:47.926Z\"\n                },\n                \"response\": {\n                    \"code\": 200,\n                    \"body\": {\n                        \"contentLength\": 2\n                    },\n                    \"responseTime\": 257,\n                    \"responseSize\": 2,\n                    \"headers\": {\n                        \"Server\": null,\n                        \"Date\": \"Fri, 17 Jun 2022 20:04:47 GMT\",\n                        \"Content-Type\": \"application/json; charset=UTF-8\",\n                        \"Transfer-Encoding\": \"chunked\",\n                        \"Connection\": \"keep-alive\",\n                        \"Keep-Alive\": null,\n                        \"Access-Control-Allow-Origin\": \"*\",\n                        \"Access-Control-Allow-Methods\": \"OPTIONS,GET\"\n                    }\n                },\n                \"errors\": [\n                    {\n                        \"name\": \"TypeError\",\n                        \"message\": \"Cannot read property 'lat' of undefined\"\n                    }\n                ]\n            }\n        ],\n        \"failures\": [\n            {\n                \"executionId\": 1,\n                \"name\": \"TypeError\",\n                \"message\": \"Cannot read property 'lat' of undefined\"\n            }\n        ]\n    }\n}"},{"id":"5aeb10aa-3be3-4076-b8b1-64e3b63dedb6","name":"Rate Limit Exceeded","originalRequest":{"method":"POST","header":[],"body":{"mode":"formdata","formdata":[]},"url":{"raw":"https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8/run","protocol":"https","host":["api","getpostman","com"],"path":["monitors","12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8","run"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Delete a monitor","id":"c920763e-807e-4e7b-9d34-26a6cc8b18db","request":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/monitors/{{monitorId}}","protocol":"https","host":["api","getpostman","com"],"path":["monitors","{{monitorId}}"]},"description":"Deletes a monitor."},"response":[{"id":"0011fff4-0192-4e1c-8063-36d495ea50d2","name":"Successful Response","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8","protocol":"https","host":["api","getpostman","com"],"path":["monitors","12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"yes","key":"getpostmanlogin"},{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a","key":"postman.sid"},{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b","key":"postman-staging.sid"}],"responseTime":null,"body":"{\n    \"monitor\": {\n        \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n        \"uid\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n    }\n}"},{"id":"e2ae2549-c643-486b-8ee1-58999c74a056","name":"Bad Request","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8","protocol":"https","host":["api","getpostman","com"],"path":["monitors","12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"yes","key":"getpostmanlogin"},{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a","key":"postman.sid"},{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b","key":"postman-staging.sid"}],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"serverError\",\n        \"message\": \"An error has occurred on the server.\"\n    }\n}"},{"id":"7d209348-5ce9-4589-bc1e-b01759fce87b","name":"Rate Limit Exceeded","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8","protocol":"https","host":["api","getpostman","com"],"path":["monitors","12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Get all monitors","id":"2be830de-7c05-4821-8175-a5b74ef66b13","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/monitors","protocol":"https","host":["api","getpostman","com"],"path":["monitors"],"query":[{"key":"workspace","value":"<string>","description":"Return only the monitors that are in the given workspace ID.","disabled":true}]},"description":"Gets all monitors."},"response":[{"id":"2c9f5dcf-1ff2-42f4-8223-0572d3504021","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/monitors","protocol":"https","host":["api","getpostman","com"],"path":["monitors"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"yes","key":"getpostmanlogin"},{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"0e9f9b1f3e7218e7fd625cca14597bc771064a433bdd75b5a40196cef86c3fa29d483358e0b254b0a097ac305b132ec8481e2c5b835663fbed3bbb93b5a747cf8776efe85650e29a8e5f0a63906480e5b9e5a9860bef703234812ce9f65ea6dcbc099ac952d1c36338e2d192a793b82a1d8a2dd6dd031f831c08805a9e7ea1f55d46c54cf6ecaecbac84ddf581c8a267a116c0d6d935f19171bce93c6e040c0bd49fc1325bdb8929914548d7c0cae78796aba4073dc9ab63194a90e430919d8757c7ccb7b4dffc61b9cd4a748edc88d0b4ba727c83ea1af546908ff63a1e2ee9784a7b9af2f61997e0dd34adcb479151d11d0e8d67ba76050d55c7bbb88f2f700e14f848f6b929b441869fba53436eb7983660d0e4af82aa0dc5c47dddf974599280179889c03c3e38212eaa8270c641298f0a49b923ed3d04d61e2c6c25844b67df9e4814d378b440e8124e429dc292a147038a57c03e8b8ece700b376fcf8e002dca35142f97b5f49144e2f7477b99d767dff12bb37dd846419051bdaa4c6d931545a5df09bda8a80a336585e5d6ba44f087607512344f91321a359dc150cb411600fbf0d974f63116046d681d3f82a16e50e3bb69c463430e284f64e007f354a9ed4a2afdb27caad0414d451875ec78ea98924e32d8f881eb2c260b348e00baf782","key":"postman.sid"}],"responseTime":null,"body":"{\n  \"monitors\": [\n    {\n      \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n      \"name\": \"Test Monitor\",\n      \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n      \"owner\": 12345678\n    },\n    {\n      \"id\": \"1e6b6cb7-f13d-4000-acb7-0695757174a8\",\n      \"name\": \"Postman Echo Monitor\",\n      \"uid\": \"87654321-1e6b6cb7-f13d-4000-acb7-0695757174a8\",\n      \"owner\": 87654321\n    }\n  ]\n}"},{"id":"b5573da6-7aba-4067-b222-df7543409dc2","name":"Get Monitors in a Workspace","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/monitors?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["monitors"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n  \"monitors\": [\n    {\n      \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n      \"name\": \"Test Monitor\",\n      \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n      \"owner\": 12345678\n    }\n  ]\n}"},{"id":"56512b5a-ac5c-41a9-bfe4-01ef03935c70","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/monitors","protocol":"https","host":["api","getpostman","com"],"path":["monitors"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Get a monitor","id":"a4957538-a4ca-46cc-9a6e-c2641866d548","request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/monitors/{{monitorId}}","protocol":"https","host":["api","getpostman","com"],"path":["monitors","{{monitorId}}"]},"description":"Gets information about a monitor."},"response":[{"id":"0737636f-6947-4924-813d-1e49fab60d2e","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8","protocol":"https","host":["api","getpostman","com"],"path":["monitors","12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"yes","key":"getpostmanlogin"},{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"0e9f9b1f3e7218e7fd625cca14597bc771064a433bdd75b5a40196cef86c3fa29d483358e0b254b0a097ac305b132ec8481e2c5b835663fbed3bbb93b5a747cf8776efe85650e29a8e5f0a63906480e5b9e5a9860bef703234812ce9f65ea6dcbc099ac952d1c36338e2d192a793b82a1d8a2dd6dd031f831c08805a9e7ea1f55d46c54cf6ecaecbac84ddf581c8a267a116c0d6d935f19171bce93c6e040c0bd49fc1325bdb8929914548d7c0cae78796aba4073dc9ab63194a90e430919d8757c7ccb7b4dffc61b9cd4a748edc88d0b4ba727c83ea1af546908ff63a1e2ee9784a7b9af2f61997e0dd34adcb479151d11d0e8d67ba76050d55c7bbb88f2f700e14f848f6b929b441869fba53436eb7983660d0e4af82aa0dc5c47dddf974599280179889c03c3e38212eaa8270c641298f0a49b923ed3d04d61e2c6c25844b67df9e4814d378b440e8124e429dc292a147038a57c03e8b8ece700b376fcf8e002dca35142f97b5f49144e2f7477b99d767dff12bb37dd846419051bdaa4c6d931545a5df09bda8a80a336585e5d6ba44f087607512344f91321a359dc150cb411600fbf0d974f63116046d681d3f82a16e50e3bb69c463430e284f64e007f354a9ed4a2afdb27caad0414d451875ec78ea98924e32d8f881eb2c260b348e00baf782","key":"postman.sid"}],"responseTime":null,"body":"{\n    \"monitor\": {\n        \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n        \"name\": \"Test Monitor\",\n        \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n        \"owner\": 12345678,\n        \"collectionUid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environmentUid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"options\": {\n            \"strictSSL\": true,\n            \"followRedirects\": true,\n            \"requestTimeout\": 3000,\n            \"requestDelay\": 0\n        },\n        \"notifications\": {\n            \"onError\": [\n                {\n                    \"email\": \"user@example.com\"\n                }\n            ],\n            \"onFailure\": [\n                {\n                    \"email\": \"user@example.com\"\n                }\n            ]\n        },\n        \"distribution\": [],\n        \"schedule\": {\n            \"cron\": \"0 0 * * * *\",\n            \"timezone\": \"America/Chicago\",\n            \"nextRun\": \"2022-06-18T05:00:00.000Z\"\n        },\n        \"lastRun\": {\n            \"status\": \"failed\",\n            \"startedAt\": \"2022-06-17T18:39:52.852Z\",\n            \"finishedAt\": \"2022-06-17T18:39:53.707Z\"\n        },\n        \"stats\": {\n            \"assertions\": {\n                \"total\": 8,\n                \"failed\": 1\n            },\n            \"requests\": {\n                \"total\": 4\n            }\n\t\t}\n\t}\n}"},{"id":"63ba4950-1464-4f9d-88fc-4cba44541a31","name":"Not Found","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8","protocol":"https","host":["api","getpostman","com"],"path":["monitors","12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"yes","key":"getpostmanlogin"},{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"0e9f9b1f3e7218e7fd625cca14597bc771064a433bdd75b5a40196cef86c3fa29d483358e0b254b0a097ac305b132ec8481e2c5b835663fbed3bbb93b5a747cf8776efe85650e29a8e5f0a63906480e5b9e5a9860bef703234812ce9f65ea6dcbc099ac952d1c36338e2d192a793b82a1d8a2dd6dd031f831c08805a9e7ea1f55d46c54cf6ecaecbac84ddf581c8a267a116c0d6d935f19171bce93c6e040c0bd49fc1325bdb8929914548d7c0cae78796aba4073dc9ab63194a90e430919d8757c7ccb7b4dffc61b9cd4a748edc88d0b4ba727c83ea1af546908ff63a1e2ee9784a7b9af2f61997e0dd34adcb479151d11d0e8d67ba76050d55c7bbb88f2f700e14f848f6b929b441869fba53436eb7983660d0e4af82aa0dc5c47dddf974599280179889c03c3e38212eaa8270c641298f0a49b923ed3d04d61e2c6c25844b67df9e4814d378b440e8124e429dc292a147038a57c03e8b8ece700b376fcf8e002dca35142f97b5f49144e2f7477b99d767dff12bb37dd846419051bdaa4c6d931545a5df09bda8a80a336585e5d6ba44f087607512344f91321a359dc150cb411600fbf0d974f63116046d681d3f82a16e50e3bb69c463430e284f64e007f354a9ed4a2afdb27caad0414d451875ec78ea98924e32d8f881eb2c260b348e00baf782","key":"postman.sid"}],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified monitor does not exist.\"\n    }\n}"},{"id":"43e762f7-efe2-40d7-a457-ab4dfec412eb","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8","protocol":"https","host":["api","getpostman","com"],"path":["monitors","12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Update a monitor","id":"c3b3d55c-6dac-436a-97a4-66ff442cc494","request":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n\t\"monitor\": {\n\t\t\"name\": \"{{monitorName}}\",\n\t\t\"schedule\": {\n\t\t\t\"cron\": \"{{cronFrequencyPattern}}\",\n            \"timezone\": \"{{monitorTimezone}}\"\n\t\t}\n\t}\n}"},"url":{"raw":"https://api.getpostman.com/monitors/{{monitorId}}","protocol":"https","host":["api","getpostman","com"],"path":["monitors","{{monitorId}}"]},"description":"Updates a monitor. Include the following properties in the request body:\n\n- `name` — A **string** value that contains the monitor's name.\n- `schedule` — An **object** that contains the following properties:\n    - `cron` — A **string** value the monitor's run frequency. At this time you can only create monitors with limited schedules. For information about the available schedules, see our [Postman Monitors](https://monitor.getpostman.com) collection. See the table below for cron patterns.\n    - `timezone` — A string value that contains the monitor's [timezone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).\n\n### Cron patterns\n\n| Frequency | Cron Pattern |\n| --- | --- |\n| Every 5 minutes | `\\\\*/5 \\\\* \\\\* \\\\* \\\\*` |\n| Every 30 minutes | `\\\\*/30 \\\\* \\\\* \\\\* \\\\*` |\n| Every Hour | `0 \\\\*/1 \\\\* \\\\* \\\\*` |\n| Every 6 Hours | `0 \\\\*/6 \\\\* \\\\* \\\\*` |\n| Every day at 5pm | `0 17 \\\\* \\\\* \\\\*` |\n| Every Monday at 12pm | `0 12 \\\\* \\\\* MON` |\n| Every weekday (Monday - Friday) at 6am | `0 6 \\\\* \\\\* MON-FRI` |"},"response":[{"id":"b52b2519-2529-48ba-b13b-083e91fbce37","name":"Successful Response","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n\t\"monitor\": {\n\t\t\"name\": \"Test Monitor\",\n\t\t\"schedule\": {\n\t\t\t\"cron\": \"*/5 * * * *\",\n\t\t\t\"timezone\": \"America/Chicago\"\n\t\t}\n\t}\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8","protocol":"https","host":["api","getpostman","com"],"path":["monitors","12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"","type":"text/plain"}}],"cookie":[{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"yes","key":"getpostmanlogin"},{"expires":"Invalid Date","hostOnly":false,"httpOnly":false,"domain":"getpostman.com","path":"/","secure":false,"session":false,"value":"0e9f9b1f3e7218e7fd625cca14597bc771064a433bdd75b5a40196cef86c3fa29d483358e0b254b0a097ac305b132ec8481e2c5b835663fbed3bbb93b5a747cf8776efe85650e29a8e5f0a63906480e5b9e5a9860bef703234812ce9f65ea6dcbc099ac952d1c36338e2d192a793b82a1d8a2dd6dd031f831c08805a9e7ea1f55d46c54cf6ecaecbac84ddf581c8a267a116c0d6d935f19171bce93c6e040c0bd49fc1325bdb8929914548d7c0cae78796aba4073dc9ab63194a90e430919d8757c7ccb7b4dffc61b9cd4a748edc88d0b4ba727c83ea1af546908ff63a1e2ee9784a7b9af2f61997e0dd34adcb479151d11d0e8d67ba76050d55c7bbb88f2f700e14f848f6b929b441869fba53436eb7983660d0e4af82aa0dc5c47dddf974599280179889c03c3e38212eaa8270c641298f0a49b923ed3d04d61e2c6c25844b67df9e4814d378b440e8124e429dc292a147038a57c03e8b8ece700b376fcf8e002dca35142f97b5f49144e2f7477b99d767dff12bb37dd846419051bdaa4c6d931545a5df09bda8a80a336585e5d6ba44f087607512344f91321a359dc150cb411600fbf0d974f63116046d681d3f82a16e50e3bb69c463430e284f64e007f354a9ed4a2afdb27caad0414d451875ec78ea98924e32d8f881eb2c260b348e00baf782","key":"postman.sid"}],"responseTime":null,"body":"{\n    \"monitor\": {\n        \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n        \"name\": \"Test Monitor\",\n        \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n    }\n}"},{"id":"6f74b4ba-b609-45ee-8177-6ee4b606dca7","name":"Not Found","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n\t\"monitor\": {\n\t\t\"name\": \"Test Monitor\",\n\t\t\"schedule\": {\n\t\t\t\"cron\": \"*/5 * * * *\",\n\t\t\t\"timezone\": \"America/Chicago\"\n\t\t}\n\t}\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8","protocol":"https","host":["api","getpostman","com"],"path":["monitors","12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified monitor does not exist.\"\n    }\n}"},{"id":"e3df5ef4-7d66-4f31-a2e0-6547a944cc6f","name":"Rate Limit Exceeded","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n\t\"monitor\": {\n\t\t\"name\": \"Test Monitor\",\n\t\t\"schedule\": {\n\t\t\t\"cron\": \"*/5 * * * *\",\n\t\t\t\"timezone\": \"America/Chicago\"\n\t\t}\n\t}\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8","protocol":"https","host":["api","getpostman","com"],"path":["monitors","12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]}],"id":"f8bdc4f3-0f78-471d-b26d-961fc4ec7977","description":"The `/monitors` endpoints let you manage your [monitors](https://learning.postman.com/docs/monitoring-your-api/intro-monitors/).\n\n### Important\n\n**In Postman v10 and higher you cannot create monitors for collections added to an API definition.** You can still create monitors for collections that are not part of an API definition."},{"name":"Private API Network","item":[{"name":"Element Requests","item":[{"name":"Respond to an element add request","id":"d90c8823-f7e3-418c-a3a6-aaa9b398b498","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"response\": {\n        \"message\": {{responderMessage}}\n    },\n    \"status\": {{responseStatus}}\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private/network-entity/request/:id","protocol":"https","host":["api","getpostman","com"],"path":["network","private","network-entity","request",":id"],"variable":[{"id":"d8fbcc6a-dc75-4927-9336-7202b2926cb3","key":"id","value":"{{requestId}}","description":"The element request's ID."}]},"description":"Responds to a user's request to add an element to the [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/). Include the following in the request body:\n\n- `message` — A **string** value in a `response` object that contains a message that details why the user's request was denied.\n- `status` — A **string** value that contains the request's status. One of:\n    - `denied`\n    - `approved`"},"response":[{"id":"233ab5cb-83b9-4350-85dc-53abb812af14","name":"Request Denied","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"status\": \"denied\",\n    \"response\": {\n        \"message\": \"The requested collection has a lot of governance violations. Please fix them.\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private/network-entity/request/:id","protocol":"https","host":["api","getpostman","com"],"path":["network","private","network-entity","request",":id"],"variable":[{"key":"id","value":"232"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"request\": [\n        {\n            \"id\": 2,\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"createdBy\": 12345678,\n            \"message\": \"Please add this to the network\",\n            \"status\": \"denied\",\n            \"element\": {\n                \"type\": \"api\",\n                \"id\": \"5360b75f-447e-467c-9299-12fd3c92450d\",\n                \"name\": \"Test api\",\n                \"summary\": \"This is a test API\"\n            },\n            \"response\": {\n                \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n                \"createdBy\": 2272,\n                \"message\": \"Please fix the API issues first\"\n            }\n        }\n    ]\n}"},{"id":"b006cd50-2f63-441c-a5ba-f144f084503a","name":"Request Approved","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"status\": \"approved\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private/network-entity/request/:id","protocol":"https","host":["api","getpostman","com"],"path":["network","private","network-entity","request",":id"],"variable":[{"key":"id","value":"232"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"request\": [\n        {\n            \"id\": 1,\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"createdBy\": 12345678,\n            \"message\": \"Please add this to the network\",\n            \"status\": \"approved\",\n            \"element\": {\n                \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n                \"createdBy\": 2272,\n                \"type\": \"api\",\n                \"id\": \"5360b75f-447e-467c-9299-12fd3c92450d\",\n                \"name\": \"Test api\",\n                \"summary\": \"This is a test API\"\n            }\n        }\n    ]\n}"},{"id":"2e601705-96ee-4604-9d13-07f74552e62f","name":"Request Not Found","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"status\": \"approved\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private/network-entity/request/:id","protocol":"https","host":["api","getpostman","com"],"path":["network","private","network-entity","request",":id"],"variable":[{"key":"id","value":"232"}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"name\": \"RequestNotFound\",\n    \"message\": \"No request found for the corresponding ID\"\n}"},{"id":"207224a6-8855-4181-a514-1247e01901cc","name":"Invalid Request Payload","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"status\": \"accepted\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private/network-entity/request/:id","protocol":"https","host":["api","getpostman","com"],"path":["network","private","network-entity","request",":id"],"variable":[{"key":"id","value":"232"}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"name\": \"invalidParamsError\",\n    \"message\": \"Status type can only be denied or approved.\"\n}"},{"id":"6a0bcf5d-a2ec-4e1c-839e-c1262bccc3a3","name":"Requested Element Already Published","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"status\": \"approved\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private/network-entity/request/:id","protocol":"https","host":["api","getpostman","com"],"path":["network","private","network-entity","request",":id"],"variable":[{"key":"id","value":"232"}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"name\": \"requestEntityAlreadyPublished\",\n    \"message\": \"Test api has already been published to the network\"\n}"},{"id":"e2e85529-763b-4966-8b00-08887b1d03be","name":"Request Already Responded To","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"status\": \"approved\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private/network-entity/request/:id","protocol":"https","host":["api","getpostman","com"],"path":["network","private","network-entity","request",":id"],"variable":[{"key":"id","value":"232"}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"name\": \"requestAlreadyResponded\",\n    \"message\": \"This request is already responded.\"\n}"}]},{"name":"Get all element add requests","id":"69514a5b-40b8-4c96-8e93-c61330dc3e25","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/network/private/network-entity/request/all","protocol":"https","host":["api","getpostman","com"],"path":["network","private","network-entity","request","all"],"query":[{"key":"since","value":"{{since}}","description":"Optional. Return only elements updated at and after this time, in ISO 8601 UTC format.","disabled":true},{"key":"until","value":"{{until}}","description":"Optional. Return only elements updated at and before this time, in ISO 8601 UTC format.","disabled":true},{"key":"requestedBy","value":"{{requestedBy}}","description":"Optional. Return a user's element requests by their user ID.","disabled":true},{"key":"type","value":"{{type}}","description":"Optional. Filter by the element type. One of: `workspace`, `collection`, `api`.","disabled":true},{"key":"status","value":"{{status}}","description":"Optional. Filter by the request status. One of: `pending`, `denied`.","disabled":true},{"key":"name","value":"{{name}}","description":"Optional. Return only elements whose name includes the given value. Matching is not case-sensitive.","disabled":true},{"key":"sort","value":"{{sort}}","description":"Optional. Sort the results by the `name` or `updatedAt` properties. If you use this query parameter, you must also use the `direction` parameter.","disabled":true},{"key":"direction","value":"{{direction}}","description":"Optional. Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive. If you use this query parameter, you must also use the `sort` parameter.","disabled":true},{"key":"offset","value":"{{offset}}","description":"Optional. The zero-based offset of the first item to return. This value defaults to `0`.","disabled":true},{"key":"limit","value":"{{limit}}","description":"Optional. The maximum number of elements to return. If the value exceeds the maximum value of `1000`, then the system uses the `1000` value.","disabled":true}]},"description":"Gets a list requests to add elements to the [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/)."},"response":[{"id":"97c9c300-f6f6-41eb-8106-40865e24ab04","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/network/private/network-entity/request/all?since=2022-09-28T13:48:09.000Z&requestedBy=12345678&offset=5&limit=10","protocol":"https","host":["api","getpostman","com"],"path":["network","private","network-entity","request","all"],"query":[{"key":"since","value":"2022-09-28T13:48:09.000Z"},{"key":"requestedBy","value":"12345678"},{"key":"offset","value":"5"},{"key":"limit","value":"10"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"requests\": [\n        {\n            \"id\": 1,\n            \"createdBy\": 87654321,\n            \"createdAt\": \"2020-06-01T08:32:31.000Z\",\n            \"status\": \"pending\",\n            \"element\": {\n                \"type\": \"api\",\n                \"id\": \"360b75f-447e-467c-9299-12fd3c92450d\",\n                \"name\": \"Test api\",\n                \"summary\": \"Test api summary\"\n            }\n        },\n        {\n            \"id\": 2,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"message\": \"Please approve this collection\",\n            \"status\": \"denied\",\n            \"element\": {\n                \"type\": \"collection\",\n                \"id\": \"5360b75f-447e-467c-9299-12fd3c92450d\",\n                \"name\": \"Test Collection\",\n                \"summary\": \"This is a test collection.\"\n            },\n            \"response\": {\n                \"createdAt\": \"2020-06-01T08:32:31.000Z\",\n                \"createdBy\": 2272,\n                \"message\": \"Too many errors, please fix and resubmit\"\n            }\n        }\n    ],\n    \"meta\": {\n        \"limit\": 10,\n        \"offset\": 5,\n        \"totalCount\": 100\n    }\n}"},{"id":"df259876-750f-48f4-ae9c-e6176fd7e00d","name":"Bad Request","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/network/private/network-entity/request/all","protocol":"https","host":["api","getpostman","com"],"path":["network","private","network-entity","request","all"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"name\": \"invalidParamsError\",\n    \"message\": \"The specified request does not exist.\"\n}"}]}],"id":"b3ce8035-96b1-487f-bf90-bba06fcc5f6b","description":"These endpoints manage [requests](https://learning.postman.com/docs/collaborating-in-postman/private-api-network/private-network-requests/#requesting-to-add-elements-in-your-private-api-network) by users to add elements to the Private API Network."},{"name":"Get all elements and folders","id":"272a407f-1ff7-43c8-a207-82f37fe5acd6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/network/private","protocol":"https","host":["api","getpostman","com"],"path":["network","private"],"query":[{"key":"since","value":"{{since}}","description":"Optional. Return only elements updated at and after this time, in ISO 8601 UTC format.","disabled":true},{"key":"until","value":"{{until}}","description":"Optional. Return only elements updated at and before this time, in ISO 8601 UTC format.","disabled":true},{"key":"addedBy","value":"{{addedBy}}","description":"Optional. Return only elements published by the given user ID.","disabled":true},{"key":"name","value":"{{name}}","description":"Optional. Return only elements whose name includes the given value. Matching is not case-sensitive.","disabled":true},{"key":"summary","value":"{{summary}}","description":"Optional. Return only elements whose summary includes the given value. Matching is not case-sensitive.","disabled":true},{"key":"description","value":"{{description}}","description":"Optional. Return only elements whose description includes the given value. Matching is not case-sensitive.","disabled":true},{"key":"sort","value":"{{sort}}","description":"Optional. Sort the results by the given value. One of:\n- `createdAt`\n- `updatedAt`\n\nIf you use this query parameter, you must also use the `direction` parameter.","disabled":true},{"key":"direction","value":"{{direction}}","description":"Optional. Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive. If you use this query parameter, you must also use the `sort` parameter.","disabled":true},{"key":"createdBy","value":"{{createdBy}}","description":"Optional. Return only the elements created by the given user ID.","disabled":true},{"key":"offset","value":"{{offset}}","description":"Optional. The zero-based offset of the first item to return. This value defaults to `0`.","disabled":true},{"key":"limit","value":"{{limit}}","description":"Optional. The maximum number of elements to return. If the value exceeds the maximum value of `1000`, then the system uses the `1000` value.","disabled":true},{"key":"parentFolderId","value":"{{parentFolderId}}","description":"Optional. Return the folders and elements in a specific folder in the Private API Network. If this value is `0`, then the endpoint only returns the root folder's elements.","disabled":true},{"key":"type","value":"{{type}}","description":"Optional. Filter by the element type. One of:\n- `folder`\n- `workspace`\n- `collection`\n- `api`","disabled":true}]},"description":"Gets information about the folders and elements added to your [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/). Elements are APIs, collections, and workspaces.\n\n**Note:**\n\nThe `limit` and `offset` parameters are separately applied to elements and folders. For example, if you query a `limit` value of `10` and an `offset` value `0`, the endpoint returns 10 elements and 10 folders for a total of 20 items. The `totalCount` property in the `meta` response is the total count of **both** elements and folders."},"response":[{"id":"986f55c3-6b1f-4c80-af93-910bf2ceaed9","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/network/private","protocol":"https","host":["api","getpostman","com"],"path":["network","private"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"elements\": [\n        {\n            \"addedAt\": \"2021-11-29T06:31:24.000Z\",\n            \"addedBy\": 12345678,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2020-06-01T08:32:31.000Z\",\n            \"updatedBy\": 12345678,\n            \"updatedAt\": \"2021-11-29T06:31:24.000Z\",\n            \"type\": \"api\",\n            \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n            \"parentFolderId\": 1,\n            \"name\": \"Billing API\",\n            \"summary\": \"The payments and account services API.\",\n            \"description\": null,\n            \"href\": \"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d\"\n        },\n        {\n            \"addedAt\": \"2021-11-29T06:31:26.000Z\",\n            \"addedBy\": 12345678,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2020-06-01T13:59:34.000Z\",\n            \"updatedBy\": 12345678,\n            \"updatedAt\": \"2021-11-29T06:31:26.000Z\",\n            \"type\": \"api\",\n            \"id\": \"41f6dc6d-d8ab-45c6-8506-74a25acf5d5f\",\n            \"parentFolderId\": 2,\n            \"name\": \"Reporting API\",\n            \"summary\": \"The reporting API.\",\n            \"description\": null,\n            \"href\": \"https://api.getpostman.com/apis/41f6dc6d-d8ab-45c6-8506-74a25acf5d5f\"\n        }\n    ],\n    \"folders\": [\n        {\n            \"id\": 1,\n            \"parentFolderId\": 0,\n            \"updatedAt\": \"2021-11-29T06:31:24.000Z\",\n            \"updatedBy\": 12345678,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2020-06-01T08:32:31.000Z\",\n            \"name\": \"Billing\",\n            \"description\": \"The Billing API.\",\n            \"type\": \"folder\"\n        },\n        {\n            \"id\": 2,\n            \"parentFolderId\": 0,\n            \"updatedAt\": \"2022-10-17T11:54:51.000Z\",\n            \"updatedBy\": 12345678,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2021-03-05T06:27:24.000Z\",\n            \"name\": \"Reporting\",\n            \"description\": null,\n            \"type\": \"folder\"\n        }\n    ],\n    \"meta\": {\n        \"limit\": 1000,\n        \"offset\": 0,\n        \"totalCount\": 2\n    }\n}"},{"id":"e6bb9991-c200-469f-8980-f3cb8ed5a9c0","name":"List Root Folder's Elements","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/network/private?parentFolderId=0","protocol":"https","host":["api","getpostman","com"],"path":["network","private"],"query":[{"key":"parentFolderId","value":"0"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"elements\": [\n        {\n            \"addedAt\": \"2021-11-29T06:31:24.000Z\",\n            \"addedBy\": 12345678,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2020-06-01T08:32:31.000Z\",\n            \"updatedBy\": 12345678,\n            \"updatedAt\": \"2021-11-29T06:31:24.000Z\",\n            \"type\": \"api\",\n            \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n            \"parentFolderId\": 1,\n            \"name\": \"Billing API\",\n            \"summary\": \"The payments and account services API.\",\n            \"description\": null,\n            \"href\": \"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d\"\n        },\n        {\n            \"addedBy\": 12345678,\n            \"addedAt\": \"2022-12-07T18:22:15.000Z\",\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2022-12-07T18:22:15.000Z\",\n            \"updatedBy\": 12345678,\n            \"updatedAt\": \"2022-12-07T18:22:15.000Z\",\n            \"type\": \"collection\",\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Billing API Collection\",\n            \"summary\": \"The Billing API collection.\",\n            \"description\": null,\n            \"href\": \"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"parentFolderId\": 2,\n            \"environments\": [\n                \"120403-c6cf0fe2-c637-4d30-a640-ed64ec6d0ddb\",\n                \"7084-461d8126-22c8-43ed-b99d-27e8a34d8eef\"\n        ]\n      }\n    ],\n    \"folders\": [\n        {\n            \"id\": 1,\n            \"parentFolderId\": 0,\n            \"updatedAt\": \"2021-11-29T06:31:24.000Z\",\n            \"updatedBy\": 12345678,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2020-06-01T08:32:31.000Z\",\n            \"name\": \"Billing\",\n            \"description\": \"The Billing API.\",\n            \"type\": \"folder\"\n        }\n    ],\n    \"meta\": {\n        \"limit\": 1000,\n        \"offset\": 0,\n        \"totalCount\": 2\n    }\n}"},{"id":"4a715851-b875-4d1e-b898-affae777d5d6","name":"Unauthorized","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/network/private","protocol":"https","host":["api","getpostman","com"],"path":["network","private"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"AuthenticationError\",\n        \"message\": \"Invalid API Key. Every request requires a valid API Key to be sent.\"\n    }\n}"},{"id":"dd42e77e-1920-4ca9-96e6-087ac30cb832","name":"Forbidden","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/network/private","protocol":"https","host":["api","getpostman","com"],"path":["network","private"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You do not have enough permissions to perform this action.\"\n    }\n}"},{"id":"ea5baa9e-c832-4d52-9d63-02aeade12dd5","name":"Internal Server Error","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/network/private","protocol":"https","host":["api","getpostman","com"],"path":["network","private"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"serverError\",\n        \"message\": \"An error has occurred on the server.\"\n    }\n}"},{"id":"c9873e68-8165-4b7f-b408-af83519fd4c7","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/network/private","protocol":"https","host":["api","getpostman","com"],"path":["network","private"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Add an element or folder","id":"63741d30-e55f-484a-8391-c1c6f472ace1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"{{elementType}}\": {\n        \"id\": \"{{elementId}}\",\n        \"parentFolderId\": {{parentFolderId}}\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private","protocol":"https","host":["api","getpostman","com"],"path":["network","private"]},"description":"Publishes a element or creates a folder in your [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/). An element is a Postman API, collection, or workspace.\n\nInclude the following in the request body object:\n\n- `elementType` — The Private API Network element type. One of:\n    - `api`\n    - `folder`\n    - `collection`\n    - `workspace`\n\nIn the `elementType` object, include the following values:\n\n**For APIs and Workspaces:**\n\n- `id` — A **string** value that contains the element's ID.\n- `parentFolderId` — An **integer** value that contains the element's parent folder ID.\n    \n\n**For Collections:**\n\n- `id` — A **string** value that contains the collection's UID (`userId`\\-`collectionId`).\n- `summary` — A **string** value that contains the collection's summary.\n- `parentFolderId` — An **integer** value that contains the collection's parent folder ID.\n    \n\n**For Private API Network Folders:**\n\n- `name` — A **string** value that contains the folder's name.\n- `description` — A **string** value that contains the folder's description.\n- `parentFolderId` — An **integer** value that contains the folder's parent folder ID."},"response":[{"id":"42e42f55-b1d2-4b0b-b094-a83254e5b41f","name":"Add an API","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"parentFolderId\": 1\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private","protocol":"https","host":["api","getpostman","com"],"path":["network","private"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"addedAt\": \"2022-06-09T14:48:45.000Z\",\n    \"addedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2021-10-11T09:39:33.000Z\",\n    \"updatedBy\": 12345678,\n    \"updatedAt\": \"2022-12-07T17:54:33.000Z\",\n    \"type\": \"api\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"name\": \"Billing API\",\n    \"summary\": \"The payments and account services API.\",\n    \"description\": null,\n    \"href\": \"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"parentFolderId\": 1\n}"},{"id":"fa813c64-da73-4790-a52c-e08711e01c82","name":"Add a Collection","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"id\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"parentFolderId\": 1\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private","protocol":"https","host":["api","getpostman","com"],"path":["network","private"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"addedAt\": \"2022-12-07T18:22:15.000Z\",\n    \"addedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2022-12-07T18:22:15.000Z\",\n    \"updatedBy\": 12345678,\n    \"updatedAt\": \"2022-12-07T18:22:15.000Z\",\n    \"type\": \"collection\",\n    \"id\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"name\": \"Billing API Collection\",\n    \"summary\": \"The Billing API collection.\",\n    \"description\": null,\n    \"href\": \"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"parentFolderId\": 1\n}"},{"id":"b7c781a2-544d-474f-994c-5307d3ecae6c","name":"Add a Collection with Environments","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"id\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"parentFolderId\": 1,\n        \"environments\": [\n              \"120403-c6cf0fe2-c637-4d30-a640-ed64ec6d0ddb\",\n              \"7084-461d8126-22c8-43ed-b99d-27e8a34d8eef\"\n            ]\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private","protocol":"https","host":["api","getpostman","com"],"path":["network","private"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"addedAt\": \"2022-12-07T18:22:15.000Z\",\n    \"addedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2022-12-07T18:22:15.000Z\",\n    \"updatedBy\": 12345678,\n    \"updatedAt\": \"2022-12-07T18:22:15.000Z\",\n    \"type\": \"collection\",\n    \"id\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"name\": \"Billing API Collection\",\n    \"summary\": \"The Billing API collection.\",\n    \"description\": null,\n    \"href\": \"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"parentFolderId\": 1,\n    \"environments\": [\n        \"120403-c6cf0fe2-c637-4d30-a640-ed64ec6d0ddb\",\n        \"7084-461d8126-22c8-43ed-b99d-27e8a34d8eef\"\n    ]\n}"},{"id":"95015960-7a68-4486-8382-a7d4c5d5d45b","name":"Add a Workspace","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"parentFolderId\": 1\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private","protocol":"https","host":["api","getpostman","com"],"path":["network","private"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"addedAt\": \"2022-12-07T17:59:23.000Z\",\n    \"addedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2022-12-07T17:59:23.000Z\",\n    \"updatedBy\": 12345678,\n    \"updatedAt\": \"2022-12-07T17:59:23.000Z\",\n    \"type\": \"workspace\",\n    \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n    \"name\": \"Billing Team Workspace\",\n    \"summary\": \"The Billing team's workspace.\",\n    \"description\": null,\n    \"href\": \"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n    \"parentFolderId\": 1\n}"},{"id":"bc47c0e8-29a2-45d2-a6d1-de53a1585c5c","name":"Create a Folder","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"folder\": {\n        \"name\": \"Billing\",\n        \"description\": \"The Billing API.\",\n        \"parentFolderId\": 0\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private","protocol":"https","host":["api","getpostman","com"],"path":["network","private"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"id\": 1,\n    \"parentFolderId\": 0,\n    \"updatedAt\": \"2022-12-07T18:00:39.000Z\",\n    \"updatedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2022-12-07T18:00:39.000Z\",\n    \"name\": \"Billing\",\n    \"description\": \"The Billing API.\",\n    \"type\": \"folder\"\n}"},{"id":"3fb169e7-e654-4f4e-a2f0-d02c4e031944","name":"Not Found","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"parentFolderId\": 1\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private","protocol":"https","host":["api","getpostman","com"],"path":["network","private"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified API does not exist.\"\n    }\n}"},{"id":"2c8577f7-9f44-47ff-a031-9ff96851ef7d","name":"Forbidden","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"parentFolderId\": 1\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private","protocol":"https","host":["api","getpostman","com"],"path":["network","private"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You do not have enough permissions to perform this action.\"\n    }\n}"},{"id":"a67145c5-c5cb-40c9-b0e6-6137fcab3a9a","name":"Internal Server Error","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"parentFolderId\": 1\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private","protocol":"https","host":["api","getpostman","com"],"path":["network","private"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"serverError\",\n        \"message\": \"An error has occurred on the server.\"\n    }\n}"},{"id":"8e163239-1118-4e2d-a7ee-1a425f0cc240","name":"Unauthorized","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"parentFolderId\": 1\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private","protocol":"https","host":["api","getpostman","com"],"path":["network","private"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"AuthenticationError\",\n        \"message\": \"Invalid API Key. Every request requires a valid API Key to be sent.\"\n    }\n}"},{"id":"d319a213-fa6f-4d96-93a5-5d4a0e946971","name":"Rate Limit Exceeded","originalRequest":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"parentFolderId\": 1\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private","protocol":"https","host":["api","getpostman","com"],"path":["network","private"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Update an element or folder","id":"bbfbaf9e-4fce-4ed5-b347-26d1da45d13f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"{{elementType}}\": {\n        \"parentFolderId\": {{parentFolderId}}\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private/{{elementType}}/{{elementId}}","protocol":"https","host":["api","getpostman","com"],"path":["network","private","{{elementType}}","{{elementId}}"]},"description":"Updates an element or folder in your [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/). When you call this endpoint, the `elementType` property must be the `api`, `folder`, `collection`, or `workspace` value.\n\nThe `elementId` value is the `api`, `folder`, or `workspace` element's ID. For `collection`, this value is the collection's UID (`userId`\\-`collectionId`).\n\nInclude the following in the request body object:\n\n- `elementType` — The Private API Network element type. One of:\n    - `api`\n    - `folder`\n    - `collection`\n    - `workspace`\n\nIn the `elementType` object, include the following values:\n\n- `parentFolderId` — The element's new Private API Network folder ID.\n    \n\n**For Collections:**\n\n- `summary` — A **string** value that contains the collection's new summary.\n    \n\n**For Private API Network Folders:**\n\nYou can include the following optional properties:\n\n- `description` — A **string** value that contains the folder's new description.\n- `name` — A **string** value that contains the folder's new name."},"response":[{"id":"0a4e0a8f-00d3-4ddc-b38c-cbcc39a0ee5d","name":"Update an API","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"api\": {\n        \"parentFolderId\": 1\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d","protocol":"https","host":["api","getpostman","com"],"path":["network","private","api","5360b75f-447e-467c-9299-12fd6c92450d"]}},"status":"OK","code":200,"_postman_previewlanguage":"Text","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"addedAt\": \"2022-06-09T14:48:45.000Z\",\n    \"addedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2021-10-11T09:39:33.000Z\",\n    \"updatedBy\": 12345678,\n    \"updatedAt\": \"2022-12-07T17:54:33.000Z\",\n    \"type\": \"api\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"name\": \"Billing API\",\n    \"summary\": \"The payments and account services API.\",\n    \"description\": null,\n    \"href\": \"https://api.getpostman.com/apis/fcf87a6d-6d10-4cfa-bed2-0c234ff99f7b\",\n    \"parentFolderId\": 1\n}"},{"id":"2751e29f-30d7-41c9-9101-2828da1203e9","name":"Update a Collection","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"parentFolderId\": 1\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private/collection/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["network","private","collection","12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"OK","code":200,"_postman_previewlanguage":"Text","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"addedAt\": \"2022-12-07T18:22:15.000Z\",\n    \"addedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2022-12-07T18:22:15.000Z\",\n    \"updatedBy\": 12345678,\n    \"updatedAt\": \"2022-12-07T18:22:15.000Z\",\n    \"type\": \"collection\",\n    \"id\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"name\": \"Billing API Collection\",\n    \"summary\": \"The Billing API collection.\",\n    \"description\": null,\n    \"href\": \"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"parentFolderId\": 1\n}"},{"id":"a252be2d-8fc8-42a5-9716-e4c6ee460a45","name":"Update a Collection's Environments","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"collection\": {\n        \"parentFolderId\": 1,\n        \"environments\": {\n            \"$add\": [\n                \"660a6sa-c8sa37-46ca-9sa1d8-7e8c669d1\",\n                \"02466-c837-46ca-9sa1d8-7e669d1\"\n            ],\n            \"$remove\": [\n                \"024660a6-c837-46ca-9sa1d8-7e8dd7c669d1\"\n            ]\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private/collection/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["network","private","collection","12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"addedAt\": \"2022-12-07T18:22:15.000Z\",\n    \"addedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2022-12-07T18:22:15.000Z\",\n    \"updatedBy\": 12345678,\n    \"updatedAt\": \"2022-12-07T18:22:15.000Z\",\n    \"type\": \"collection\",\n    \"id\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"name\": \"Billing API Collection\",\n    \"summary\": \"The Billing API collection.\",\n    \"description\": null,\n    \"href\": \"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"parentFolderId\": 1,\n    \"environments\": [\n        \"660a6sa-c8sa37-46ca-9sa1d8-7e8c669d1\",\n        \"02466-c837-46ca-9sa1d8-7e669d1\"\n    ]\n}"},{"id":"ae17feac-e725-4ba0-a550-a749a5f91eac","name":"Update a Workspace","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"workspace\": {\n        \"parentFolderId\": 1\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private/workspace/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["network","private","workspace","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"]}},"status":"OK","code":200,"_postman_previewlanguage":"Text","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"addedAt\": \"2022-12-07T17:59:23.000Z\",\n    \"addedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2022-12-07T17:59:23.000Z\",\n    \"updatedBy\": 12345678,\n    \"updatedAt\": \"2022-12-07T17:59:23.000Z\",\n    \"type\": \"workspace\",\n    \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n    \"name\": \"Billing Team Workspace\",\n    \"summary\": \"The Billing team's workspace.\",\n    \"description\": null,\n    \"href\": \"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n    \"parentFolderId\": 1\n}"},{"id":"f5287507-19da-4d39-b950-58785ce2f6ed","name":"Update a Folder","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"folder\": {\n        \"name\": \"Billing\",\n        \"description\": \"The Billing API.\",\n        \"parentFolderId\": 0\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private/folder/1234","protocol":"https","host":["api","getpostman","com"],"path":["network","private","folder","1234"]}},"status":"OK","code":200,"_postman_previewlanguage":"Text","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"id\": 1,\n    \"parentFolderId\": 0,\n    \"updatedAt\": \"2022-12-07T20:27:06.000Z\",\n    \"updatedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2022-12-07T17:04:23.000Z\",\n    \"name\": \"Billing\",\n    \"description\": \"The Billing API.\",\n    \"type\": \"folder\"\n}"},{"id":"48259f50-b498-4b6f-be43-ceede85deae2","name":"Not Found","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"api\": {\n        \"parentFolderId\": 1\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d","protocol":"https","host":["api","getpostman","com"],"path":["network","private","api","5360b75f-447e-467c-9299-12fd6c92450d"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified API does not exist.\"\n    }\n}"},{"id":"eab8453b-1dba-42f8-8c19-0855b0eb9bcd","name":"Forbidden","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"api\": {\n        \"parentFolderId\": 1\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d","protocol":"https","host":["api","getpostman","com"],"path":["network","private","api","5360b75f-447e-467c-9299-12fd6c92450d"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You do not have enough permissions to perform this action.\"\n    }\n}"},{"id":"2d037ab6-acf0-42f0-acc4-5c6b635e0c9a","name":"Unauthorized","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"api\": {\n        \"parentFolderId\": 1\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d","protocol":"https","host":["api","getpostman","com"],"path":["network","private","api","5360b75f-447e-467c-9299-12fd6c92450d"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"AuthenticationError\",\n        \"message\": \"Invalid API Key. Every request requires a valid API Key to be sent.\"\n    }\n}"},{"id":"830e07eb-6477-4e88-b885-d7e51257f156","name":"Rate Limit Exceeded","originalRequest":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"api\": {\n        \"parentFolderId\": 1\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d","protocol":"https","host":["api","getpostman","com"],"path":["network","private","api","5360b75f-447e-467c-9299-12fd6c92450d"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Remove an element or folder","id":"563b89ae-5d4c-4df5-829f-dd53df7c70c8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/network/private/{{elementType}}/{{elementId}}","protocol":"https","host":["api","getpostman","com"],"path":["network","private","{{elementType}}","{{elementId}}"]},"description":"Removes an element or delete a folder from your [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/).\n\n**Note:**\n\nRemoving an API, collection, or workspace element does **not** delete it. It only removes it from the Private API Network folder."},"response":[{"id":"ebb2b3af-b49e-451e-ad57-521ee43025d1","name":"Remove an API","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d","protocol":"https","host":["api","getpostman","com"],"path":["network","private","api","5360b75f-447e-467c-9299-12fd6c92450d"]}},"status":"OK","code":200,"_postman_previewlanguage":"Text","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\"\n    }\n}"},{"id":"98abb42d-96a9-4e7a-a4cf-dd560c02716d","name":"Remove a Collection","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/network/private/collection/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2","protocol":"https","host":["api","getpostman","com"],"path":["network","private","collection","12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"collection\": {\n        \"id\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"},{"id":"dfc31258-f14c-428a-8048-8dc3f6be1cf1","name":"Remove a Workspace","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/network/private/workspace/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["network","private","workspace","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\"\n    }\n}"},{"id":"8ffdcf6b-2187-4dcc-89da-bc6c1b288027","name":"Delete a Folder","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/network/private/folder/1234","protocol":"https","host":["api","getpostman","com"],"path":["network","private","folder","1234"]}},"status":"OK","code":200,"_postman_previewlanguage":"Text","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"folder\": {\n        \"id\": \"1\"\n    }\n}"},{"id":"51513f49-366a-45a1-9523-5d88b12a3cde","name":"Not Found","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d","protocol":"https","host":["api","getpostman","com"],"path":["network","private","api","5360b75f-447e-467c-9299-12fd6c92450d"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified API does not exist.\"\n    }\n}"},{"id":"c718ca0a-e817-4bf1-8544-f9e1f027fd5f","name":"Folder Not Found","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/network/private/folder/1234","protocol":"https","host":["api","getpostman","com"],"path":["network","private","folder","1234"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"Text","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"name\": \"instanceNotFoundError\",\n    \"message\": \"Instance not found for the model Folder, id 1\"\n}"},{"id":"33d7a252-1091-4a70-a283-685941c8ae8a","name":"Forbidden","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d","protocol":"https","host":["api","getpostman","com"],"path":["network","private","api","5360b75f-447e-467c-9299-12fd6c92450d"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You do not have enough permissions to perform this action.\"\n    }\n}"},{"id":"d9d777c1-ed3a-4ff3-a626-d7a2d81cc6f9","name":"Folder Not Empty","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/network/private/folder/1234","protocol":"https","host":["api","getpostman","com"],"path":["network","private","folder","1234"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"name\": \"folderNotEmptyError\",\n    \"message\": \"You need to empty this folder before deleting it.\"\n}"},{"id":"b07972a7-c725-423b-9964-d6a1929292fc","name":"Unauthorized","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d","protocol":"https","host":["api","getpostman","com"],"path":["network","private","api","5360b75f-447e-467c-9299-12fd6c92450d"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"AuthenticationError\",\n        \"message\": \"Invalid API Key. Every request requires a valid API Key to be sent.\"\n    }\n}"},{"id":"7fdaa6df-0563-4bf6-97cc-6cad351bf22b","name":"Rate Limit Exceeded","originalRequest":{"method":"DELETE","header":[],"body":{"mode":"raw","raw":"{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"parentFolderId\": 1234\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d","protocol":"https","host":["api","getpostman","com"],"path":["network","private","api","5360b75f-447e-467c-9299-12fd6c92450d"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]}],"id":"b827009a-d688-4715-aa0a-6f1e09a07c89","description":"These endpoints enable you to manage and work with your team's [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/)."},{"name":"Workspaces","item":[{"name":"Tags","item":[{"name":"Get a workspace's tags","id":"61bb02f7-d388-4774-ba56-cd1e31b6096b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces/{{workspaceId}}/tags","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","{{workspaceId}}","tags"]},"description":"Gets all the tags associated with a workspace."},"response":[{"id":"b8d775d5-ded3-4124-b839-5421858b5ac8","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","e361eeb4-00dd-4225-9774-6146a2555999","tags"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        },\n        {\n            \"slug\": \"test-api\"\n        }\n    ]\n}"},{"id":"6adf4de1-7513-4b5e-926c-f9482e34d2fa","name":"Unauthorized","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","e361eeb4-00dd-4225-9774-6146a2555999","tags"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"status\": 401\n}"},{"id":"e6e641f8-38d4-4cc2-996b-cecdb4d71185","name":"Invalid Credentials","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","e361eeb4-00dd-4225-9774-6146a2555999","tags"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"The request lacks valid credentials.\",\n    \"status\": 401\n}"},{"id":"fb2c6e62-9c96-401c-961a-ac6a6333560c","name":"Forbidden","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","e361eeb4-00dd-4225-9774-6146a2555999","tags"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"You do not have developer role. Ask your (super)admin to grant you developer role\",\n    \"status\": 403\n}"},{"id":"9ad99e67-e627-4940-8623-8cb900975b15","name":"Not Enterprise","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","e361eeb4-00dd-4225-9774-6146a2555999","tags"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"The tags feature is only available to enterprise teams\",\n    \"status\": 403\n}"},{"id":"8a71bcce-64e9-4b30-8422-f6abdff0ae30","name":"No View Permissions","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","e361eeb4-00dd-4225-9774-6146a2555999","tags"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"status\": 403,\n    \"detail\": \"You do not have view permission\",\n    \"instance\": \"/tags/workspaces/12345678-e361eeb4-00dd-4225-9774-6146a2555999\"\n}"},{"id":"fd44ac73-af36-4111-954b-931edd3263a4","name":"Internal Server Error","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","e361eeb4-00dd-4225-9774-6146a2555999","tags"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"status\": 500\n}"}]},{"name":"Update a workspace's tags","id":"56b1c5df-828a-486c-864d-3687accaa63d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"{{tagName}}\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/{{workspaceId}}/tags","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","{{workspaceId}}","tags"]},"description":"Updates a workspace's associated tags. This endpoint replaces all existing tags with those you pass in the request body.\n\n**Note:**\n\n- You can only add a maximum of five tags to an API.\n    \n- Tags must be between `2` and `64` characters long.\n    \n- Tags must follow the `^[a-z][a-z0-9-]\\\\\\\\*[a-z0-9]+$` pattern."},"response":[{"id":"82eece45-ce98-48c1-8780-d3a60a942705","name":"Successful Response","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        },\n        {\n            \"slug\": \"test-api\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","e361eeb4-00dd-4225-9774-6146a2555999","tags"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        },\n        {\n            \"slug\": \"test-api\"\n        }\n    ]\n}"},{"id":"44165e8f-18b4-4204-82ef-262a3bf879c7","name":"Tag Exceeds Max Size","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"oS1Z9gHS9lDaAhX3xu0ekJRZwt0CPIikGYApohSPJVu3n3iiHxdISMqMFVo6wPf8N\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","e361eeb4-00dd-4225-9774-6146a2555999","tags"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"title\": \"Bad Request\",\n    \"detail\": \"body/tags/0/slug must NOT have more than 64 characters\",\n    \"status\": 400\n}"},{"id":"cb8b8b82-bd48-4767-a1fc-d8b0477943b4","name":"Exceeds Max Number of Tags","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        },\n        {\n            \"slug\": \"test-api\"\n        },\n        {\n            \"slug\": \"test-collection\"\n        },\n        {\n            \"slug\": \"preview\"\n        },\n        {\n            \"slug\": \"pre-release\"\n        },\n        {\n            \"slug\": \"api-team\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","e361eeb4-00dd-4225-9774-6146a2555999","tags"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/badrequest\",\n    \"title\": \"Bad Request\",\n    \"detail\": \"body/tags must NOT have more than 5 items\",\n    \"status\": 400\n}"},{"id":"24811079-4374-4c6e-915b-fc676bd9455b","name":"Special Character Present","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"test-api!\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","e361eeb4-00dd-4225-9774-6146a2555999","tags"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"title\": \"Bad Request\",\n    \"detail\": \"body/tags/0/slug must match pattern \\\"^[a-z][a-z0-9-]*[a-z0-9]+$\\\"\",\n    \"status\": 400\n}"},{"id":"0faa92f7-ac01-4efb-8c0a-93a406e6a913","name":"Missing tags Object","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","e361eeb4-00dd-4225-9774-6146a2555999","tags"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"statusCode\": 400,\n    \"error\": \"Bad Request\",\n    \"message\": \"body must have required property 'tags'\"\n}"},{"id":"b7a4429c-9934-4d1f-b560-f001d0a2b043","name":"Tag Does Not Start with Letter","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"1test\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","e361eeb4-00dd-4225-9774-6146a2555999","tags"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"title\": \"Bad Request\",\n    \"detail\": \"body/tags/0/slug must match pattern \\\"^[a-z][a-z0-9-]*[a-z0-9]+$\\\"\",\n    \"status\": 400\n}"},{"id":"6c8a5e54-532f-4a42-8a79-0b47582d995c","name":"Unauthorized","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        },\n        {\n            \"slug\": \"test-api\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","e361eeb4-00dd-4225-9774-6146a2555999","tags"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"status\": 401\n}"},{"id":"093cee86-e10c-4f24-aeaa-a6315acc8d47","name":"Invalid Credentials","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        },\n        {\n            \"slug\": \"test-api\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","e361eeb4-00dd-4225-9774-6146a2555999","tags"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"The request lacks valid credentials.\",\n    \"status\": 401\n}"},{"id":"19d0a274-573d-43ee-90ab-a837c75d31a5","name":"Forbidden","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        },\n        {\n            \"slug\": \"test-api\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","e361eeb4-00dd-4225-9774-6146a2555999","tags"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"You do not have developer role. Ask your (super)admin to grant you developer role\",\n    \"status\": 403\n}"},{"id":"ea5e10c9-7e36-47a9-b821-6257323181cc","name":"Not Enterprise","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        },\n        {\n            \"slug\": \"test-api\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","e361eeb4-00dd-4225-9774-6146a2555999","tags"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"The tags feature is only available to enterprise teams\",\n    \"status\": 403\n}"},{"id":"28d27deb-2f10-4708-b77d-16733252a304","name":"No View Permissions","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        },\n        {\n            \"slug\": \"test-api\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","e361eeb4-00dd-4225-9774-6146a2555999","tags"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"status\": 403,\n    \"detail\": \"You do not have view permission\",\n    \"instance\": \"/tags/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n}"},{"id":"bbfeff42-8a2d-4735-9cf9-34a262c8d380","name":"Internal Server Error","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        },\n        {\n            \"slug\": \"test-api\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","e361eeb4-00dd-4225-9774-6146a2555999","tags"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"status\": 500\n}"}]}],"id":"1413576b-b0ea-498b-a6cf-a19224348262","description":"The **Tags** endpoints enable you to manage workspace tags with Postman's [tagging](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#tagging-a-workspace) feature. Tagging is available on [Postman Enterprise plans](https://www.postman.com/pricing/)."},{"name":"Global Variables","item":[{"name":"Get global variables","id":"dc641c19-7dc3-4913-825b-5eeef595f894","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces/{{workspaceId}}/global-variables","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","{{workspaceId}}","global-variables"]},"description":"Gets a workspace's global [variables](https://learning.postman.com/docs/sending-requests/variables/#variable-scopes)."},"response":[{"id":"197c89c5-4a2f-4d8b-802e-48efb371720e","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/global-variables","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","global-variables"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"values\": [\n        {\n            \"value\": \"PMAK-XXXX\",\n            \"key\": \"api-key\",\n            \"enabled\": true,\n            \"type\": \"secret\"\n        },\n        {\n            \"value\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"key\": \"collection_uid\",\n            \"enabled\": true,\n            \"type\": \"default\"\n        }\n    ]\n}"},{"id":"b432ecaa-e7c7-4e23-a645-7d1afe3bb5b7","name":"Internal Server Error","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/global-variables","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","global-variables"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/servererror\",\n    \"title\": \"Internal server error\",\n    \"detail\": \"Details about the error\"\n}"}]},{"name":"Update global variables","id":"070dae0d-2003-42d2-801e-006a98597cd6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"values\": [\n    {\n      \"key\": \"{{keyName}}\",\n      \"type\": \"{{keyType}}\",\n      \"value\": \"{{keyValue}}\",\n      \"enabled\": {{boolean}}\n    }\n  ]\n}"},"url":{"raw":"https://api.getpostman.com/workspaces/{{workspaceId}}/global-variables","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","{{workspaceId}}","global-variables"]},"description":"Updates and replaces a workspace's global [variables](https://learning.postman.com/docs/sending-requests/variables/#variable-scopes). This endpoint replaces all existing global variables with the variables you pass in the request body:\n\n- `key` — A **string** that contains the variable's name.\n- `type` — A **string** that contains the [type](https://learning.postman.com/docs/sending-requests/variables/#variable-types) of variable. Accepts `default` or `secret`.\n- `value` — A **string** that contains the variable's value.\n- `enabled` — A **boolean** that, if true, enables the variable."},"response":[{"id":"27d282b8-b1d9-4fb0-aa1d-404cf1390a4e","name":"Successful Response","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"values\": [\n    {\n      \"key\": \"api-key\",\n      \"type\": \"secret\",\n      \"value\": \"PMAK-XXXX\",\n      \"enabled\": true\n    },\n    {\n      \"key\": \"collection_uid\",\n      \"type\": \"default\",\n      \"value\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n      \"enabled\": true\n    }\n  ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/global-variables","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","global-variables"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"values\": [\n        {\n            \"value\": \"PMAK-XXXX\",\n            \"key\": \"api-key\",\n            \"enabled\": true,\n            \"type\": \"secret\"\n        },\n        {\n            \"value\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"key\": \"collection_uid\",\n            \"enabled\": true,\n            \"type\": \"default\"\n        }\n    ]\n}"},{"id":"d794de26-c760-426e-944d-efc6a1696ac8","name":"Internal Server Error","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"values\": [\n    {\n      \"key\": \"api-key\",\n      \"type\": \"secret\",\n      \"value\": \"PMAK-XXXX\",\n      \"enabled\": true\n    },\n    {\n      \"key\": \"collection_uid\",\n      \"type\": \"default\",\n      \"value\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n      \"enabled\": true\n    }\n  ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/global-variables","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","global-variables"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/servererror\",\n    \"title\": \"Internal server error\",\n    \"detail\": \"Details about the error\"\n}"}]}],"id":"2bcb32db-8975-4884-a167-e3375e3d97dd","description":"The **Global Variables** endpoints enable you to manage global [variables](https://learning.postman.com/docs/sending-requests/variables/). Global variables are available throughout a workspace and have the broadest scope in Postman."},{"name":"Roles","item":[{"name":"Get all roles","id":"59ec211e-786e-4b76-b4af-f53dac90d969","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces-roles","protocol":"https","host":["api","getpostman","com"],"path":["workspaces-roles"]},"description":"Gets information about all roles in a workspace, based on the team's [plan](https://www.postman.com/pricing/)."},"response":[{"id":"4282a6dc-7722-401b-9a6f-42dfe6090e42","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces-roles","protocol":"https","host":["api","getpostman","com"],"path":["workspaces-roles"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"roles\": {\n        \"user\": [\n            {\n                \"id\": 3,\n                \"displayName\": \"Admin\",\n                \"description\": \"Can manage workspace details and members.\"\n            },\n            {\n                \"id\": 1,\n                \"displayName\": \"Viewer\",\n                \"description\": \"Can view, fork, and export workspace resources.\"\n            },\n            {\n                \"id\": 2,\n                \"displayName\": \"Editor\",\n                \"description\": \"Can create and edit workspace resources.\"\n            }\n        ],\n        \"usergroup\": [\n            {\n                \"id\": 3,\n                \"displayName\": \"Admin\",\n                \"description\": \"Can manage workspace details and members.\"\n            },\n            {\n                \"id\": 1,\n                \"displayName\": \"Viewer\",\n                \"description\": \"Can view, fork, and export workspace resources.\"\n            },\n            {\n                \"id\": 2,\n                \"displayName\": \"Editor\",\n                \"description\": \"Can create and edit workspace resources.\"\n            }\n        ]\n    }\n}"},{"id":"476a1e13-73d5-4857-b4ca-abe5d059c07b","name":"Unauthorized","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces-roles","protocol":"https","host":["api","getpostman","com"],"path":["workspaces-roles"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"An API key must be provided in the request header or query string\",\n    \"status\": 401\n}"},{"id":"594a2a57-9839-40b5-a859-3461829478f9","name":"Forbidden","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces-roles","protocol":"https","host":["api","getpostman","com"],"path":["workspaces-roles"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Resource cannot be accessed\",\n    \"detail\": \"Inadequate permissions. Resource access forbidden.\",\n    \"status\": 403\n}"},{"id":"1bbb692f-a732-4a50-864b-a2c7169f9318","name":"Internal Server Error","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces-roles","protocol":"https","host":["api","getpostman","com"],"path":["workspaces-roles"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"}]},{"name":"Update user or user group roles","id":"24abd9bb-ec74-40e7-994c-6853ae4cdf58","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{\n    \"roles\": [\n        {\n            \"op\": \"{{operationType}}\",\n            \"path\": \"{{pathValue}}\",\n            \"value\": [\n                {\n                    \"id\": \"{{userId}}\",\n                    \"role\": {{workspaceRoleId}}\n                }\n            ]\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/{{workspaceId}}/roles","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","{{workspaceId}}","roles"]},"description":"Updates the roles of users or [user groups](https://learning.postman.com/docs/collaborating-in-postman/user-groups/) in a workspace. Include the following values in the `roles` array of objects:\n\n- `op` — Required. A **string** that contains the operation to perform. Accepts the `add` or `remove` value.\n- `path` — Required. A **string** that contains the resource to perform the action on. Accepts the `/user` or `/usergroup` value.\n- `value` — Required. A list of objects that contain user or user group IDs and an assigned role ID.\n    - `id` — Required. A **string** that contains the user or user group ID.\n    - `role` — Required. A **number** that contains the workspace role's ID.\n\n**Note:**\n\n- This endpoint does not support the external [Partner or Guest roles](https://learning.postman.com/docs/collaborating-in-postman/roles-and-permissions/#team-roles).\n    \n- This endpoint is restricted to 50 operations per call.\n- The request body must contain one unique action per user or user group. For example, you cannot add and remove multiple roles for a user in the same request body."},"response":[{"id":"100ab17b-437a-499c-9a16-51514a4bafd1","name":"Successful Response","originalRequest":{"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{\n    \"roles\": [\n        {\n            \"op\": \"add\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": \"12345678\",\n                    \"role\": 1\n                },\n                {\n                    \"id\": \"87654321\",\n                    \"role\": 2\n                }\n            ]\n        },\n        {\n            \"op\": \"remove\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": \"87612345\",\n                    \"role\": 1\n                }\n            ]\n        },\n        {\n            \"op\": \"add\",\n            \"path\": \"/usergroup\",\n            \"value\": [\n                {\n                    \"id\": \"123\",\n                    \"role\": 2\n                }\n            ]\n        },\n        {\n            \"op\": \"remove\",\n            \"path\": \"/usergroup\",\n            \"value\": [\n                {\n                    \"id\": \"312\",\n                    \"role\": 3\n                }\n            ]\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/roles","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","roles"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"roles\": [\n        {\n            \"id\": 1,\n            \"displayName\": \"Viewer\",\n            \"user\": [\n                12345678\n            ],\n            \"usergroup\": [\n                123\n            ]\n        },\n        {\n            \"id\": 2,\n            \"displayName\": \"Editor\",\n            \"user\": [\n                87654321\n            ],\n            \"usergroup\": [\n                123\n            ]\n        },\n        {\n            \"id\": 3,\n            \"displayName\": \"Admin\",\n            \"user\": [\n                13428756\n            ],\n            \"usergroup\": [\n                132\n            ]\n        }\n    ]\n}"},{"id":"d9d1912f-f073-404d-bb0d-64076f6a43df","name":"Bad Request","originalRequest":{"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{\n    \"roles\": [\n        {\n            \"id\": 1,\n            \"user\": [\n                12345678\n            ],\n            \"usergroup\": [\n                123\n            ],\n            \"displayName\": \"Viewer\"\n        },\n        {\n            \"id\": 2,\n            \"user\": [\n                87654321\n            ],\n            \"usergroup\": [\n                321\n            ],\n            \"displayName\": \"Editor\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/roles","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","roles"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"status\": 400,\n    \"detail\": \"\",\n    \"title\": \"body.roles[0] should have required property 'op'\",\n    \"type\": \"invalidParamError\"\n}"},{"id":"b8836014-130b-4dbd-ac81-8273ec8e0b92","name":"Unauthorized","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"roles\": [\n        {\n            \"op\": \"add\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": \"12345678\",\n                    \"role\": 1\n                },\n                {\n                    \"id\": \"87654321\",\n                    \"role\": 2\n                }\n            ]\n        },\n        {\n            \"op\": \"remove\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": \"87612345\",\n                    \"role\": 1\n                }\n            ]\n        },\n        {\n            \"op\": \"add\",\n            \"path\": \"/usergroup\",\n            \"value\": [\n                {\n                    \"id\": \"123\",\n                    \"role\": 2\n                }\n            ]\n        },\n        {\n            \"op\": \"remove\",\n            \"path\": \"/usergroup\",\n            \"value\": [\n                {\n                    \"id\": \"312\",\n                    \"role\": 3\n                }\n            ]\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/roles","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","roles"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"An API key must be provided in the request header or query string\",\n    \"status\": 401\n}"},{"id":"d2432e28-dd33-4574-a6e3-e9d3820a5ea1","name":"Forbidden","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"roles\": [\n        {\n            \"op\": \"add\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": \"12345678\",\n                    \"role\": 1\n                },\n                {\n                    \"id\": \"87654321\",\n                    \"role\": 2\n                }\n            ]\n        },\n        {\n            \"op\": \"remove\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": \"87612345\",\n                    \"role\": 1\n                }\n            ]\n        },\n        {\n            \"op\": \"add\",\n            \"path\": \"/usergroup\",\n            \"value\": [\n                {\n                    \"id\": \"123\",\n                    \"role\": 2\n                }\n            ]\n        },\n        {\n            \"op\": \"remove\",\n            \"path\": \"/usergroup\",\n            \"value\": [\n                {\n                    \"id\": \"312\",\n                    \"role\": 3\n                }\n            ]\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/roles","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","roles"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Resource cannot be accessed\",\n    \"detail\": \"Inadequate permissions. Resource access forbidden.\",\n    \"status\": 403\n}"},{"id":"d776990d-2227-4ae2-8fad-6f1cb8b8d8bc","name":"Not Found","originalRequest":{"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{\n    \"roles\": [\n        {\n            \"id\": 1,\n            \"user\": [\n                12345678\n            ],\n            \"usergroup\": [\n                123\n            ],\n            \"displayName\": \"Viewer\"\n        },\n        {\n            \"id\": 2,\n            \"user\": [\n                87654321\n            ],\n            \"usergroup\": [\n                321\n            ],\n            \"displayName\": \"Editor\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/roles","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","roles"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"title\": \"https://api.postman.com/problems/not-found\",\n    \"type\": \"Resource not found\",\n    \"detail\": \"\",\n    \"status\": 404\n}"},{"id":"b9aac741-f922-4202-8e09-9f0775050666","name":"Internal Server Error","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"roles\": [\n        {\n            \"op\": \"add\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": \"12345678\",\n                    \"role\": 1\n                },\n                {\n                    \"id\": \"87654321\",\n                    \"role\": 2\n                }\n            ]\n        },\n        {\n            \"op\": \"remove\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": \"87612345\",\n                    \"role\": 1\n                }\n            ]\n        },\n        {\n            \"op\": \"add\",\n            \"path\": \"/usergroup\",\n            \"value\": [\n                {\n                    \"id\": \"123\",\n                    \"role\": 2\n                }\n            ]\n        },\n        {\n            \"op\": \"remove\",\n            \"path\": \"/usergroup\",\n            \"value\": [\n                {\n                    \"id\": \"312\",\n                    \"role\": 3\n                }\n            ]\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/roles","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","roles"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"}]}],"id":"cf62828a-b544-4332-8db0-3c7d66fc3b32","description":"The **Roles** endpoints enable you to manage [workspace roles](https://learning.postman.com/docs/collaborating-in-postman/roles-and-permissions/#workspace-roles). Roles define user permissions within a Postman workspace."},{"name":"Update a workspace","id":"7c9df911-0b0c-4d9c-8190-d7b9e87fa603","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"name":"Content-Type","key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"workspace\": {\n        \"name\": \"{{workspaceName}}\",\n        \"type\": \"{{workspaceType}}\",\n        \"description\": \"{{workspaceDescription}}\"\n    }\n}"},"url":{"raw":"https://api.getpostman.com/workspaces/{{workspaceId}}","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","{{workspaceId}}"]},"description":"Updates a workspace. Use the following request body properties to update the workspace:\n\n- `name` — A **string** that contains the workspace's new name.\n- `description` — A **string** that contains the new workspace description.\n- `type` — A **string** that contains the new workspace visibility [type](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#changing-workspace-visibility). This property does <u>not</u> support the following workspace visibility changes:\n    - `private` to `public`\n    - `public` to `private`\n    - `private` to `personal`\n    - `team` to `personal`\n    - `public` to `personal` for a team user\n\n### **Important**\n\nWe **deprecated** linking collections or environments between workspaces. We do **not** recommend that you do this.\n\nIf you have a linked collection or environment, note the following:\n\n- The endpoint does **not** create a clone of a collection or environment.\n- Any changes you make to a linked collection or environment changes them in **all** workspaces.\n- If you delete a collection or environment linked between workspaces, the system deletes it in **all** the workspaces."},"response":[{"id":"b6b90f02-848e-445a-8893-3b29d5cd8738","name":"Successful Response","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"workspace\": {\n        \"name\": \"Team Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a team workspace.\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Test Workspace\"\n    }\n}"},{"id":"2bc83f3e-e2f9-4487-86d6-09f26076399a","name":"Cannot Convert Private to Public","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"workspace\": {\n        \"name\": \"Private Workspace\",\n        \"type\": \"public\",\n        \"description\": \"This is a private workspace.\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"cannotConvertToPublicWorkspace\",\n        \"message\": \"Can not convert workspaces to public workspaces for team user. First convert to team.\"\n    }\n}"},{"id":"2f4ec20f-b43b-4d2c-a35b-cef90a5411b5","name":"Cannot Convert to Personal","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"workspace\": {\n        \"name\": \"Test Workspace\",\n        \"type\": \"personal\",\n        \"description\": \"This is a team workspace.\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You are not authorized to perform this action\"\n    }\n}"},{"id":"65d47d6e-542b-4fc7-af84-c2ba656762a6","name":"Cannot Convert from Public","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"workspace\": {\n        \"name\": \"Public Workspace\",\n        \"type\": \"private\",\n        \"description\": \"This is a public workspace.\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"cannotConvertFromPublicWorkspace\",\n        \"message\": \"Can not convert workspaces from public workspaces for team user. First convert to team.\"\n    }\n}"},{"id":"b8d828b3-cfe0-4305-8d18-3305632eafea","name":"Workspace Missing","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"Test Workspace\",\n    \"type\": \"team\",\n    \"description\": \"This is a test team workspace.\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"malformedRequestError\",\n        \"message\": \"'workspace' object missing in the request\"\n    }\n}"},{"id":"ab33dad2-e682-4350-85f7-f2e12b33433d","name":"Not Found","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"workspace\": {\n        \"name\": \"Test Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a test team workspace.\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified workspace with id 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9 does not exist.\"\n    }\n}"},{"id":"3a1e9585-6fb3-4b3a-af3a-9900b6313f74","name":"Forbidden","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"workspace\": {\n        \"name\": \"Test Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a test team workspace.\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You do not have access to update this workspace.\"\n    }\n}"},{"id":"65db53d4-47f2-4e32-ab54-38a28a079c01","name":"Rate Limit Exceeded","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"workspace\": {\n        \"name\": \"Test Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a test team workspace.\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Create a workspace","id":"64c335ac-ca78-42dd-901d-7b6629002609","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"name":"Content-Type","key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"workspace\": {\n        \"name\": \"{{workspaceName}}\",\n        \"type\": \"{{workspaceType}}\",\n        \"description\": \"{{workspaceDescription}}\"\n    }\n}"},"url":{"raw":"https://api.getpostman.com/workspaces","protocol":"https","host":["api","getpostman","com"],"path":["workspaces"]},"description":"Creates a new [workspace](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/creating-workspaces/). Include the following properties in the request body:\n\n- `name` — A **string** that contains the workspace's name.\n- `type` — A **string** that contains the workspace type:\n    - `personal`\n    - `private` — Private workspaces are available on Postman [Professional and Enterprise plans](https://www.postman.com/pricing).\n    - `public`\n    - `team`\n    - `partner` — [Partner Workspaces](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/partner-workspaces/) are available on Postman [Enterprise Ultimate plans](https://www.postman.com/pricing).\n- `description` — Optional. A **string** that contains a description of the workspace.\n    \n\n**Note:**\n\nThis endpoint returns a 403 `Forbidden` response if the user does not have permission to create workspaces. [Admins and Super Admins](https://learning.postman.com/docs/collaborating-in-postman/roles-and-permissions/#team-roles) can configure workspace permissions to restrict users and/or user groups from creating workspaces or require approvals for the creation of team workspaces.\n\n### Important\n\nWe **deprecated** linking collections or environments between workspaces. We do **not** recommend that you do this.\n\nIf you have a linked collection or environment, note the following:\n\n- The endpoint does **not** create a clone of a collection or environment.\n- Any changes you make to a linked collection or environment changes them in **all** workspaces.\n- If you delete a collection or environment linked between workspaces, the system deletes it in **all** the workspaces."},"response":[{"id":"231a9c6a-a5aa-44fc-8166-25ed71d08042","name":"Create a Personal Workspace","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"workspace\": {\n        \"name\": \"Personal Workspace\",\n        \"type\": \"personal\",\n        \"description\": \"This is a personal workspace.\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces","protocol":"https","host":["api","getpostman","com"],"path":["workspaces"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Personal Workspace\"\n    }\n}"},{"id":"1983a861-fdee-438c-8677-f4e8df302b34","name":"Create a Public Workspace","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"workspace\": {\n        \"name\": \"Public Workspace\",\n        \"type\": \"public\",\n        \"description\": \"This is a public workspace.\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces","protocol":"https","host":["api","getpostman","com"],"path":["workspaces"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Public Workspace\"\n    }\n}"},{"id":"d7ab11ae-cd28-46c7-b760-d70646176c62","name":"Create a Private Workspace","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"workspace\": {\n        \"name\": \"Private Workspace\",\n        \"type\": \"private\",\n        \"description\": \"This is a private workspace.\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces","protocol":"https","host":["api","getpostman","com"],"path":["workspaces"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Private Workspace\"\n    }\n}"},{"id":"8fbf3b7d-30bb-4f14-b21d-48cc12950831","name":"Create a Team Workspace","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"workspace\": {\n        \"name\": \"Team Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a team workspace.\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces","protocol":"https","host":["api","getpostman","com"],"path":["workspaces"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Team Workspace\"\n    }\n}"},{"id":"2fad560a-478d-452c-8b3c-466586690731","name":"Create a Partner Workspace","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"workspace\": {\n        \"name\": \"Team Workspace\",\n        \"type\": \"partner\",\n        \"description\": \"This is a partner workspace.\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces","protocol":"https","host":["api","getpostman","com"],"path":["workspaces"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Partner Workspace\"\n    }\n}"},{"id":"6eb10e86-9671-4188-9aa3-6863e34f39b0","name":"Workspace Missing","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"Personal Workspace\",\n    \"type\": \"personal\",\n    \"description\": \"This is a personal workspace.\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces","protocol":"https","host":["api","getpostman","com"],"path":["workspaces"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"malformedRequestError\",\n        \"message\": \"'workspace' object missing in the request\"\n    }\n}"},{"id":"eae68220-0ed9-4732-a8d0-af7d308d4ee0","name":"Bad Request","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"workspace\": {\n        \"type\": \"personal\",\n        \"description\": \"This is a test personal workspace.\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces","protocol":"https","host":["api","getpostman","com"],"path":["workspaces"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"invalidParamError\",\n        \"message\": \"body should have required property 'name'\"\n    }\n}"},{"id":"cc7901af-0853-4886-8d42-3111d7f82acb","name":"No Permission","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"name\": \"Personal Workspace\",\n    \"type\": \"personal\",\n    \"description\": \"This is a personal workspace.\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces","protocol":"https","host":["api","getpostman","com"],"path":["workspaces"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"status\": 403,\n        \"name\": \"forbiddenError\",\n        \"message\": \"You are not authorized to perform this action\",\n        \"detail\": \"You do not have permission to create team workspaces.\",\n        \"instance\": \"\"\n    }\n}"},{"id":"b6adb565-2bc6-41ee-8f59-49c9e31c952e","name":"Rate Limit Exceeded","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"workspace\": {\n        \"name\": \"Test Workspace\",\n        \"type\": \"personal\",\n        \"description\": \"This is a test personal workspace.\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/workspaces","protocol":"https","host":["api","getpostman","com"],"path":["workspaces"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Get a workspace","id":"dd961d40-c4ec-4888-8c9f-0b4ee1373634","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces/{{workspaceId}}","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","{{workspaceId}}"],"query":[{"key":"include","value":"<string>","description":"Include the following information in the endpoint's response:\n- `mocks:deactivated` — Include all deactivated mock servers in the response.","disabled":true}]},"description":"Gets information about a workspace.\n\n**Note:**\n\nThis endpoint's response also contains the `visibility` field. [Visibility](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#changing-workspace-visibility) determines who can access the workspace:\n\n- `personal` — Only you can access the workspace.\n- `team` — All team members can access the workspace.\n- `private` — Only invited team members can access the workspace ([Professional and Enterprise plans only](https://www.postman.com/pricing)).\n- `public` — Everyone can access the workspace.\n- `partner` — Only invited team members and [partners](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/partner-workspaces/) can access the workspace ([Enterprise Ultimate plans](https://www.postman.com/pricing) only).\n    \n\n### Important\n\nWe have **deprecated** the `name` and `uid` responses in the following array of objects:\n\n- `collections`\n- `environments`\n- `mocks`\n- `monitors`\n- `apis`"},"response":[{"id":"c6c8f35d-626c-466c-b886-36bc47c66a58","name":"Get a Personal Workspace","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"My Workspace\",\n        \"type\": \"personal\",\n        \"description\": \"This is your personal, private workspace to play around in. Only you can see the collections and APIs you create here - unless you share them with your team.\",\n        \"visibility\": \"personal\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"createdAt\": \"2022-07-06T16:18:32.000Z\",\n        \"updatedAt\": \"2022-07-06T20:55:13.000Z\",\n        \"collections\": [\n            {\n                \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"name\": \"Test Collection\",\n                \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        ],\n        \"environments\": [\n            {\n                \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n                \"name\": \"Test Environment\",\n                \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n            }\n        ],\n        \"mocks\": [\n            {\n                \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"name\": \"Test Mock\",\n                \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"deactivated\": false\n            }\n        ],\n        \"monitors\": [\n            {\n                \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n                \"name\": \"Test Monitor\",\n                \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n            }\n        ],\n        \"apis\": [\n            {\n                \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n                \"name\": \"Test API\",\n                \"uid\": \"12345678-387c2863-6ee3-4a56-8210-225f774edade\"\n            }\n        ]\n    }\n}"},{"id":"13c6a7ac-7eca-42dd-8c5f-798a35cbae39","name":"Get a Public Workspace","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Public Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a public workspace.\",\n        \"visibility\": \"public\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"createdAt\": \"2022-07-06T16:18:32.000Z\",\n        \"updatedAt\": \"2022-07-06T20:55:13.000Z\",\n        \"collections\": [\n            {\n                \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"name\": \"Test Collection\",\n                \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        ],\n        \"environments\": [\n            {\n                \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n                \"name\": \"Test Environment\",\n                \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n            }\n        ],\n        \"mocks\": [\n            {\n                \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"name\": \"Test Mock\",\n                \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"deactivated\": false\n            }\n        ],\n        \"monitors\": [\n            {\n                \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n                \"name\": \"Test Monitor\",\n                \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n            }\n        ],\n        \"apis\": [\n            {\n                \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n                \"name\": \"Test API\",\n                \"uid\": \"12345678-387c2863-6ee3-4a56-8210-225f774edade\"\n            }\n        ]\n    }\n}"},{"id":"56482168-89b8-4e95-8d7b-78303edf9ea6","name":"Get a Private Workspace","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Private Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a private workspace.\",\n        \"visibility\": \"private\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"createdAt\": \"2022-07-06T16:18:32.000Z\",\n        \"updatedAt\": \"2022-07-06T20:55:13.000Z\",\n        \"collections\": [\n            {\n                \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"name\": \"Test Collection\",\n                \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        ],\n        \"environments\": [\n            {\n                \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n                \"name\": \"Test Environment\",\n                \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n            }\n        ],\n        \"mocks\": [\n            {\n                \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"name\": \"Test Mock\",\n                \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"deactivated\": false\n            }\n        ],\n        \"monitors\": [\n            {\n                \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n                \"name\": \"Test Monitor\",\n                \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n            }\n        ],\n        \"apis\": [\n            {\n                \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n                \"name\": \"Test API\",\n                \"uid\": \"12345678-387c2863-6ee3-4a56-8210-225f774edade\"\n            }\n        ]\n    }\n}"},{"id":"8b8b4616-b04d-4710-82a0-f59e0c8aeb59","name":"Get a Team Workspace","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Team Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a team workspace.\",\n        \"visibility\": \"team\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"createdAt\": \"2022-07-06T16:18:32.000Z\",\n        \"updatedAt\": \"2022-07-06T20:55:13.000Z\",\n        \"collections\": [\n            {\n                \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"name\": \"Test Collection\",\n                \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        ],\n        \"environments\": [\n            {\n                \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n                \"name\": \"Test Environment\",\n                \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n            }\n        ],\n        \"mocks\": [\n            {\n                \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"name\": \"Test Mock\",\n                \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"deactivated\": false\n            }\n        ],\n        \"monitors\": [\n            {\n                \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n                \"name\": \"Test Monitor\",\n                \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n            }\n        ],\n        \"apis\": [\n            {\n                \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n                \"name\": \"Test API\",\n                \"uid\": \"12345678-387c2863-6ee3-4a56-8210-225f774edade\"\n            }\n        ]\n    }\n}"},{"id":"bc8c088c-60b5-4f8a-b879-51b814b6cd39","name":"Get a Partner Workspace","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Partner Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a partner workspace.\",\n        \"visibility\": \"partner\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"createdAt\": \"2022-07-06T16:18:32.000Z\",\n        \"updatedAt\": \"2022-07-06T20:55:13.000Z\",\n        \"collections\": [\n            {\n                \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"name\": \"Test Collection\",\n                \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        ],\n        \"environments\": [\n            {\n                \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n                \"name\": \"Test Environment\",\n                \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n            }\n        ],\n        \"mocks\": [\n            {\n                \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"name\": \"Test Mock\",\n                \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"deactivated\": false\n            }\n        ],\n        \"monitors\": [\n            {\n                \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n                \"name\": \"Test Monitor\",\n                \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n            }\n        ],\n        \"apis\": [\n            {\n                \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n                \"name\": \"Test API\",\n                \"uid\": \"12345678-387c2863-6ee3-4a56-8210-225f774edade\"\n            }\n        ]\n    }\n}"},{"id":"a00d977e-a3e5-40bb-9aa5-2c6e147d0765","name":"Not Found","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","name":"Content-Type","description":{"content":"The mime type of this content","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"workspaceNotFoundError\",\n        \"message\": \"Workspace not found\",\n        \"statusCode\": 404\n    }\n}"},{"id":"f30ca358-09bd-43a3-a159-23437410cc78","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"The mime type of this content","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"Instance not found in the database.\"\n    }\n}"}]},{"name":"Delete a workspace","id":"685131f4-1632-4477-a42c-e10f443ac9b8","request":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/workspaces/{{workspaceId}}","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","{{workspaceId}}"]},"description":"Deletes an existing workspace.\n\n### **Important:**\n\nIf you delete a workspace that has a linked collection or environment with another workspace, this will delete the collection and environment in **all** workspaces."},"response":[{"id":"f997d393-5a44-4132-bc79-eb72e2b98503","name":"Successful Response","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\"\n    }\n}"},{"id":"1a5f5c5a-c681-40ac-ad03-0c6b5de9bba1","name":"Not Found","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified workspace does not exist.\"\n    }\n}"},{"id":"c6a082b7-b8e5-481b-94ad-147198177459","name":"Rate Limit Exceeded","originalRequest":{"method":"DELETE","header":[],"url":{"raw":"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]},{"name":"Get all workspaces","id":"66b7694f-0333-43fc-bf9e-4487243c6fbf","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces","protocol":"https","host":["api","getpostman","com"],"path":["workspaces"],"query":[{"key":"type","value":"<string>","description":"The type of workspace to filter the response by:\n\n* `personal`\n* `team`\n* `private`\n* `public`\n* `partner`","disabled":true},{"key":"include","value":"<string>","description":"Include the following information in the endpoint's response:\n- `mocks:deactivated` — Include all deactivated mock servers in the response.","disabled":true}]},"description":"Gets all [workspaces](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/creating-workspaces/). The response includes your workspaces and any workspaces that you have access to.\n\n**Note:**\n\nThis endpoint's response contains the `visibility` field. [Visibility](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#changing-workspace-visibility) determines who can access the workspace:\n\n- `personal` — Only you can access the workspace.\n- `team` — All team members can access the workspace.\n- `private` — Only invited team members can access the workspace ([Professional and Enterprise plans only](https://www.postman.com/pricing)).\n- `public` — Everyone can access the workspace.\n- `partner` — Only invited team members and [partners](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/partner-workspaces/) can access the workspace ([Enterprise Ultimate plans](https://www.postman.com/pricing) only)."},"response":[{"id":"e5d542e0-8867-47cc-ba75-45db04a2d01f","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces","protocol":"https","host":["api","getpostman","com"],"path":["workspaces"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"workspaces\": [\n        {\n            \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n            \"name\": \"My Workspace\",\n            \"type\": \"personal\",\n            \"visibility\": \"personal\"\n        },\n        {\n            \"id\": \"a0f46158-1529-11ee-be56-0242ac120002\",\n            \"name\": \"Private Workspace\",\n            \"type\": \"team\",\n            \"visibility\": \"private\"\n        },\n        {\n            \"id\": \"f8801e9e-03a4-4c7b-b31e-5db5cd771696\",\n            \"name\": \"Team Workspace\",\n            \"type\": \"team\",\n            \"visibility\": \"team\"\n        },\n        {\n            \"id\": \"74dbfab8-1529-11ee-be56-0242ac120002\",\n            \"name\": \"Public Workspace\",\n            \"type\": \"team\",\n            \"visibility\": \"public\"\n        },\n        {\n            \"id\": \"74dbfab8-1529-11ee-be56-0242ac120002\",\n            \"name\": \"Partner Workspace\",\n            \"type\": \"team\",\n            \"visibility\": \"partner\"\n        }\n    ]\n}"},{"id":"77b69421-0e73-416d-9696-afc0ea36fd13","name":"Filter by type Team","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces?type=team","protocol":"https","host":["api","getpostman","com"],"path":["workspaces"],"query":[{"key":"type","value":"team"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"workspaces\": [\n        {\n            \"id\": \"f8801e9e-03a4-4c7b-b31e-5db5cd771696\",\n            \"name\": \"Team Workspace\",\n            \"type\": \"team\",\n            \"visibility\": \"team\"\n        }\n    ]\n}"},{"id":"8d1c8802-e6c4-4670-926c-93eff9fead12","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/workspaces","protocol":"https","host":["api","getpostman","com"],"path":["workspaces"],"query":[{"key":"type","value":"<string>","description":"Optional. The type of workspace to filter the response by:\n\n* `team` — Return only team workspaces.\n* `personal` — Return only personal workspaces.","disabled":true}]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]}],"id":"8f1a5207-9c4f-439b-ac20-d823799bc272","description":"The `/workspaces` endpoints let you manage your [workspaces](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/creating-workspaces/)."},{"name":"Tags","item":[{"name":"Get elements by tag","id":"d8312a3b-508c-48d4-9237-d1b824a2a2b2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/tags/:slug/entities","protocol":"https","host":["api","getpostman","com"],"path":["tags",":slug","entities"],"query":[{"key":"limit","value":"{{limit}}","description":"The maximum number of tagged elements to return in a single call.","disabled":true},{"key":"direction","value":"{{direction}}","description":"The ascending (`asc`) or descending (`desc`) order to sort the results by, based on the time of the element's tagging.","disabled":true},{"key":"cursor","value":"{{cursor}}","description":"The cursor to get the next set of results in the paginated response. Use the `nextCursor` value in the response's `meta` object for this value.\n\nIf you pass an invalid value, the API only returns the first set of results.","disabled":true},{"key":"entityType","value":"{{elementType}}","description":"Filter results for the given element type:\n- `api`\n- `collection`\n- `workspace`","disabled":true}],"variable":[{"id":"a4f75653-05e6-4c93-a719-45f7554cea51","key":"slug","value":"{{slugId}}","description":"The tag's ID within a team or individual (non-team) user scope."}]},"description":"Gets Postman elements (entities) by a given tag. Tags enable you to organize and search [workspaces](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#tagging-a-workspace), [APIs](https://learning.postman.com/docs/designing-and-developing-your-api/managing-apis/#tagging-apis), and [collections](https://learning.postman.com/docs/collections/using-collections/#tagging-a-collection) that contain shared tags.\n\n**Note:**\n\nTagging is available on [Postman Enterprise plans](https://www.postman.com/pricing/)."},"response":[{"id":"85d54249-a7e0-4f52-ab9c-55020e587066","name":"Successful Response","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"}],"url":{"raw":"https://api.getpostman.com/tags/:slug/entities","protocol":"https","host":["api","getpostman","com"],"path":["tags",":slug","entities"],"variable":[{"key":"slug","value":"needs-review"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"data\": {\n        \"entities\": [\n            {\n                \"entityId\": \"8b86dfe8-de72-44e6-81ea-79d19805bc6a\",\n                \"entityType\": \"api\"\n            }\n        ]\n    },\n    \"meta\": {\n        \"count\": 1\n    }\n}"},{"id":"1ddbea91-bcc9-4997-a280-eb0b1094a9f5","name":"Successful Response With Next Cursor","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"}],"url":{"raw":"https://api.getpostman.com/tags/:slug/entities?cursor=eyJpZCI6ODYsImVudGl0eVR5cGUiOiJhcGkifQ==","protocol":"https","host":["api","getpostman","com"],"path":["tags",":slug","entities"],"query":[{"key":"cursor","value":"eyJpZCI6ODYsImVudGl0eVR5cGUiOiJhcGkifQ==","description":"The `nextCursor` value from previous page's response."}],"variable":[{"key":"slug","value":"needs-review"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n  \"data\": {\n    \"entities\": [\n      {\n        \"entityId\": \"12345678-6fd634a3-79ba-451d-8f07-56a953f96667\",\n        \"entityType\": \"collection\"\n      },\n      {\n        \"entityId\": \"7a95cfe8-de72-44e6-81ea-79d19805bd7b\",\n        \"entityType\": \"api\"\n      }\n    ]\n  },\n  \"meta\": {\n    \"count\": 2,\n    \"nextCursor\": \"eyJpZCI6ODYsImVudGl0eVR5cGUiOiJhcGkifQ==\"\n  }\n}"},{"id":"375e1ab8-1ead-4f54-8eb6-b2aa171b9990","name":"Bad Request","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"}],"url":{"raw":"https://api.getpostman.com/tags/:slug/entities","protocol":"https","host":["api","getpostman","com"],"path":["tags",":slug","entities"],"variable":[{"key":"slug","value":"23894fhsjrs"}]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/problem+json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"Bad Request\",\n    \"message\": \"params/slug must match pattern \\\"^[a-z][a-z0-9-]*[a-z0-9]+$\\\"\",\n    \"statusCode\": 400\n}"},{"id":"874152e0-2d9c-4c37-b25f-cb2f6e7e2d77","name":"Unauthorized","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"}],"url":{"raw":"https://api.getpostman.com/tags/:slug/entities","protocol":"https","host":["api","getpostman","com"],"path":["tags",":slug","entities"],"variable":[{"key":"slug","value":"needs-review"}]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/problem+json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"The request lacks valid credentials.\",\n    \"status\": 401\n}"},{"id":"b1ef22e0-7fe8-441d-9c20-12b59e06adab","name":"Forbidden","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"}],"url":{"raw":"https://api.getpostman.com/tags/:slug/entities","protocol":"https","host":["api","getpostman","com"],"path":["tags",":slug","entities"],"variable":[{"key":"slug","value":"needs-review"}]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/problem+json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"You do not have developer role. Ask your (super)admin to grant you developer role\",\n    \"status\": 403\n}"},{"id":"887ccb45-6ebb-4cac-986c-a158b1995310","name":"Not Found","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"}],"url":{"raw":"https://api.getpostman.com/tags/:slug/entities","protocol":"https","host":["api","getpostman","com"],"path":["tags",":slug","entities"],"variable":[{"key":"slug","value":"needs-review"}]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/problem+json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Resource Not Found\",\n    \"detail\": \"Slug 'needs-review' does not exist\",\n    \"status\": 404,\n    \"instance\": \"/slugs/needs-review/entities\"\n}"},{"id":"a42c0533-bb76-4eeb-83e7-3348d1c9e214","name":"Unexpected Error","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"}],"url":{"raw":"https://api.getpostman.com/tags/:slug/entities","protocol":"https","host":["api","getpostman","com"],"path":["tags",":slug","entities"],"variable":[{"key":"slug","value":"needs-review"}]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/problem+json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Something went wrong\",\n    \"detail\": \"Something went wrong while fetching entities having the provided slug\",\n    \"status\": 500,\n    \"instance\": \"/tags/hello-world/entities\"\n}"}]}],"id":"04369d77-12c9-43d3-907d-018c1dc53dbb","description":"The `/tags` endpoint lets you manage Postman's tagging feature. Enterprise users can add tags to collections, APIs, and workspaces. Tags enable users [search Postman elements](https://learning.postman.com/docs/getting-started/navigating-postman/#search-postman) using these tags. Tagging is available on [Postman Enterprise plans](https://www.postman.com/pricing/)."},{"name":"Secret Scanner","item":[{"name":"Detected Secrets","item":[{"name":"Update detected secret resolution status","id":"50201cfe-fd89-42e1-802e-f2e9a567f1ac","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"resolution\": \"{{secretResolutionStatus}}\",\n    \"workspaceId\": \"{{workspaceId}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/detected-secrets/{{secretId}}","protocol":"https","host":["api","getpostman","com"],"path":["detected-secrets","{{secretId}}"]},"description":"Updates the resolution status of a secret detected in a workspace.\n\nInclude the following in the request body:\n\n- `resolution` — The secret's updated resolution status:\n    \n    - `FALSE_POSITIVE` — The discovered secret is not an actual secret.\n        \n    - `REVOKED` — The secret is valid, but the user rotated their key to resolve the issue.\n        \n    - `ACCEPTED_RISK` — The Secret Scanner found the secret, but user accepts the risk of publishing it.\n        \n- `workspaceId` — The ID of the workspace that contains the secret."},"response":[{"id":"85d8abdd-369e-46e0-ba4d-b8f034ffa960","name":"Successful Response","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"resolution\": \"ACCEPTED_RISK\",\n    \"workspaceId\": \"e361eeb4-00dd-4225-9774-6146a2555999\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/detected-secrets/OTI3OTYx","protocol":"https","host":["api","getpostman","com"],"path":["detected-secrets","OTI3OTYx"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n  \"history\": [\n    {\n      \"actor\": 12345678,\n      \"createdAt\": \"2023-05-19T12:45:49.000Z\",\n      \"resolution\": \"FALSE_POSITIVE\"\n    },\n    {\n      \"actor\": 12345678,\n      \"createdAt\": \"2023-05-19T12:45:37.000Z\",\n      \"resolution\": \"REVOKED\",\n      \"secretHash\": \"002aba6bb52023846544058145f356e0cfb2478de095e5c5145c31f059fbe9b0\",\n      \"workspaceId\": \"e361eeb4-00dd-4225-9774-6146a2555999\"\n    }\n  ]\n}"},{"id":"66459924-2c33-45be-b69d-37728027c5d4","name":"Unauthorized","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"resolution\": \"ACCEPTED_RISK\",\n    \"workspaceId\": \"e361eeb4-00dd-4225-9774-6146a2555999\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/detected-secrets/OTI3OTYx","protocol":"https","host":["api","getpostman","com"],"path":["detected-secrets","OTI3OTYx"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"instance\": \"\",\n    \"status\": 401,\n    \"title\": \"Unauthorized. Please try again with valid credentials.\",\n    \"type\": \"UNAUTHORIZED\"\n}"},{"id":"c5de40f7-c7fd-4962-933e-47aa7abac6d1","name":"Forbidden","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"resolution\": \"ACCEPTED_RISK\",\n    \"workspaceId\": \"e361eeb4-00dd-4225-9774-6146a2555999\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/detected-secrets/OTI3OTYx","protocol":"https","host":["api","getpostman","com"],"path":["detected-secrets","OTI3OTYx"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"instance\": \"\",\n    \"status\": 403,\n    \"title\": \"Only members with Superadmin, Admin, or Workspace Admin roles can view the detected secrets.\",\n    \"type\": \"FORBIDDEN\"\n}"},{"id":"ae3c5d2a-f4d3-4165-8b7b-88f7d56ee160","name":"Not Enterprise Ultimate","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"resolution\": \"ACCEPTED_RISK\",\n    \"workspaceId\": \"e361eeb4-00dd-4225-9774-6146a2555999\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/detected-secrets/OTI3OTYx","protocol":"https","host":["api","getpostman","com"],"path":["detected-secrets","OTI3OTYx"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"instance\": \"\",\n    \"status\": 403,\n    \"title\": \"This feature is only available for Enterprise Ultimate teams\",\n    \"type\": \"FORBIDDEN\"\n}"},{"id":"f496e389-2359-438e-b1a0-7d19700ca3d6","name":"Internal Server Error","originalRequest":{"method":"PUT","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"resolution\": \"ACCEPTED_RISK\",\n    \"workspaceId\": \"e361eeb4-00dd-4225-9774-6146a2555999\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/detected-secrets/OTI3OTYx","protocol":"https","host":["api","getpostman","com"],"path":["detected-secrets","OTI3OTYx"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"instance\": \"\",\n    \"status\": 500,\n    \"title\": \"An error occurred\",\n    \"type\": \"SERVER_ERROR\"\n}"}]},{"name":"Get detected secrets locations","id":"8ac8c2ac-6e9f-4b9f-bbf9-e172bc9b1843","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/detected-secrets/{{secretId}}/locations?workspaceId={{workspaceId}}","protocol":"https","host":["api","getpostman","com"],"path":["detected-secrets","{{secretId}}","locations"],"query":[{"key":"workspaceId","value":"{{workspaceId}}","description":"Required. The workspace's ID."},{"key":"limit","value":"{{limit}}","description":"The maximum number of rows to return in the response.","disabled":true},{"key":"cursor","value":"{{cursor}}","description":"The pointer to the first record of the set of paginated results.","disabled":true}]},"description":"Gets the locations of secrets detected by Postman's [Secret Scanner](https://learning.postman.com/docs/administration/secret-scanner/)."},"response":[{"id":"90dd9ea6-42ca-404a-b119-09467e0b53bb","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/detected-secrets/OTI3OTYx/locations?workspaceId=e361eeb4-00dd-4225-9774-6146a2555999&limit=2","protocol":"https","host":["api","getpostman","com"],"path":["detected-secrets","OTI3OTYx","locations"],"query":[{"key":"workspaceId","value":"e361eeb4-00dd-4225-9774-6146a2555999"},{"key":"limit","value":"2"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n  \"data\": [\n    {\n      \"isResourceDeleted\": false,\n      \"leakedBy\": 12345678,\n      \"location\": \"Headers\",\n      \"occurrences\": 1,\n      \"parentResourceId\": \"12345678-14728df4-c7af-424f-b665-5047b7d25866\",\n      \"resourceId\": \"12345678-e0df25e0-d245-40dd-89b5-68720d186d3f\",\n      \"resourceType\": \"example\",\n      \"detectedAt\": \"2023-04-25T08:13:48.000Z\",\n      \"url\": \"https://go.postman-beta.co/build/workspace/80ab14ae-c17d-4fd6-88d5-99bf13f0b7f0/example/12345678-e0df25e0-d245-40dd-89b5-68720d186d3f\"\n    }\n  ],\n  \"meta\": {\n    \"activityFeed\": [\n      {\n        \"resolvedBy\": null,\n        \"status\": \"ACTIVE\",\n        \"resolvedAt\": null\n      }\n    ],\n    \"cursor\": \"MTIyNjY5Nw==\",\n    \"limit\": 2,\n    \"nextCursor\": null,\n    \"obfuscatedSecret\": \"PMAK-644781584627df042afa6655-******ba\",\n    \"secretHash\": \"0096b35ef6621d7571f106fefee5b10e8ed360cc9bf04f343f267ca4ff65bb5d\",\n    \"secretType\": \"Postman API Key\",\n    \"total\": 3\n  }\n}"},{"id":"a500b50c-fe62-4bf4-b41b-649e273a4ae4","name":"Bad Request","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/detected-secrets/OTI3OTYx/locations?workspaceId=e361eeb4-00dd-4225-9774-6146a2555999&limit=2","protocol":"https","host":["api","getpostman","com"],"path":["detected-secrets","OTI3OTYx","locations"],"query":[{"key":"workspaceId","value":"e361eeb4-00dd-4225-9774-6146a2555999"},{"key":"limit","value":"2"}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"instance\": \"aaa\",\n    \"status\": 400,\n    \"title\": \"limit specified is invalid\",\n    \"type\": \"BAD_REQUEST\"\n}"},{"id":"0727a53b-2f29-46ad-85c6-9cac00b362ac","name":"Unauthorized","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/detected-secrets/OTI3OTYx/locations?workspaceId=e361eeb4-00dd-4225-9774-6146a2555999&limit=2","protocol":"https","host":["api","getpostman","com"],"path":["detected-secrets","OTI3OTYx","locations"],"query":[{"key":"workspaceId","value":"e361eeb4-00dd-4225-9774-6146a2555999"},{"key":"limit","value":"2"}]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"instance\": \"\",\n    \"status\": 401,\n    \"title\": \"Unauthorized. Please try again with valid credentials.\",\n    \"type\": \"UNAUTHORIZED\"\n}"},{"id":"c37318b0-5541-4946-aa28-9576771241ef","name":"Forbidden","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/detected-secrets/OTI3OTYx/locations?workspaceId=e361eeb4-00dd-4225-9774-6146a2555999&limit=2","protocol":"https","host":["api","getpostman","com"],"path":["detected-secrets","OTI3OTYx","locations"],"query":[{"key":"workspaceId","value":"e361eeb4-00dd-4225-9774-6146a2555999"},{"key":"limit","value":"2"}]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"instance\": \"\",\n    \"status\": 403,\n    \"title\": \"Only members with Superadmin, Admin, or Workspace Admin roles can view the detected secrets.\",\n    \"type\": \"FORBIDDEN\"\n}"},{"id":"2221593b-4ca9-464b-9d2f-375fade7af74","name":"Not Enterprise Ultimate","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/detected-secrets/OTI3OTYx/locations?workspaceId=e361eeb4-00dd-4225-9774-6146a2555999&limit=2","protocol":"https","host":["api","getpostman","com"],"path":["detected-secrets","OTI3OTYx","locations"],"query":[{"key":"workspaceId","value":"e361eeb4-00dd-4225-9774-6146a2555999"},{"key":"limit","value":"2"}]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"instance\": \"\",\n    \"status\": 403,\n    \"title\": \"This feature is only available for Enterprise Ultimate teams\",\n    \"type\": \"FORBIDDEN\"\n}"},{"id":"b92ec4dc-181a-4ee2-8c65-b8b6f1eb8d44","name":"Internal Server Error","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/detected-secrets/OTI3OTYx/locations?workspaceId=e361eeb4-00dd-4225-9774-6146a2555999&limit=2","protocol":"https","host":["api","getpostman","com"],"path":["detected-secrets","OTI3OTYx","locations"],"query":[{"key":"workspaceId","value":"e361eeb4-00dd-4225-9774-6146a2555999"},{"key":"limit","value":"2"}]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"instance\": \"\",\n    \"status\": 500,\n    \"title\": \"An error occurred\",\n    \"type\": \"SERVER_ERROR\"\n}"}]},{"name":"Search detected secrets","id":"23a96476-c095-44ee-aacb-be02bf693d9e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"secretTypes\": [\n        \"{{secretTypeIds}}\"\n    ],\n    \"resolved\": {{boolean}},\n    \"statuses\": [\n        \"{{secretStatuses}}\"\n    ],\n    \"workspaceIds\": [\n        \"{{workspaceIds}}\"\n    ],\n    \"workspaceVisiblities\": [\n        \"{{workspaceVisibility}}\"\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/detected-secrets-queries","protocol":"https","host":["api","getpostman","com"],"path":["detected-secrets-queries"],"query":[{"key":"limit","value":"{{limit}}","description":"The maximum number of rows to return in the response.","disabled":true},{"key":"cursor","value":"{{cursor}}","description":"The pointer to the first record of the set of paginated results.","disabled":true},{"key":"include","value":"{{include}}","description":"The additional fields to be included as a part of this API request.","disabled":true}]},"description":"Returns all secrets detected by Postman's [Secret Scanner](https://learning.postman.com/docs/administration/secret-scanner/), grouped by workspace. If you pass an empty request body, this endpoint returns all results.\n\nYou can include the following properties in the request body:\n\n- `secretTypes` — A list of secrets types to query. For a list of valid IDs, use the GET `/secret-types` endpoint.\n    \n- `resolved` — If true, return secrets with a `resolved` status.\n- `statuses` — The secret resolution status type:\n    - `FALSE_POSITIVE` — The discovered secret is not an actual secret.\n    - `REVOKED` — The secret is valid, but the user rotated their key to resolve the issue.\n    - `ACCEPTED_RISK` — The Secret Scanner found the secret, but user accepts the risk of publishing it.\n- `workspaceIds` — A list of workspaces IDs to query.\n- `workspaceVisibilities` — A list of workspace [visibility settings](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#changing-workspace-visibility) to query. This currently supports the `team` and `public` settings."},"response":[{"id":"6fedfd41-1e4b-408b-a91d-297ea1b6f4d2","name":"Successful Response","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"secretTypes\": [\n        \"1a7ec5d1-dcba-4ec7-8220-3c1ee490416b\",\n        \"3b6ec9d2-dabc-5e67-1220-6coie490416b\"\n    ],\n    \"resolved\": true,\n    \"statuses\": [\n        \"ACCEPTED_RISK\",\n        \"REVOKED\"\n    ],\n    \"workspaceIds\": [\n        \"0fe6c2f2-022d-48f7-8e7e-3244369445b0\",\n        \"80ab14ae-c17d-4fd6-88d5-99bf13f0b7f0\"\n    ],\n    \"workspaceVisiblities\": [\n        \"team\"\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/detected-secrets-queries?limit=2","protocol":"https","host":["api","getpostman","com"],"path":["detected-secrets-queries"],"query":[{"key":"limit","value":"2"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n  \"data\": [\n    {\n      \"obfuscatedSecret\": \"keyTF2WAH******\",\n      \"occurrences\": 3,\n      \"resolution\": \"FALSE_POSITIVE\",\n      \"secretHash\": \"07afd1f787f3555d441b04870dbe1025db8309fbeb31f25b3a20f2f1241478b3\",\n      \"secretId\": \"OTI3OTYx\",\n      \"secretType\": \"Airtable API Key\",\n      \"detectedAt\": \"2023-05-19T02:45:31.000Z\",\n      \"workspaceId\": \"e361eeb4-00dd-4225-9774-6146a2555999\",\n      \"workspaceVisibility\": \"team\"\n    },\n    {\n      \"obfuscatedSecret\": \"xoxp-25519******\",\n      \"occurrences\": 1,\n      \"resolution\": \"ACCEPTED_RISK\",\n      \"secretHash\": \"08074c0954fd29d1ee82ab5af9b4ad16f56b0907eca72446e98dc97e10da80a3\",\n      \"secretId\": \"NDcyMjA=\",\n      \"secretType\": \"Slack Access Token\",\n      \"detectedAt\": \"2023-03-23T19:38:49.000Z\",\n      \"workspaceId\": \"e361eeb4-00dd-4225-9774-6146a2555999\",\n      \"workspaceVisibility\": \"team\"\n    }\n  ],\n  \"meta\": {\n    \"limit\": 2,\n    \"nextCursor\": null,\n    \"total\": 20\n  }\n}"},{"id":"8110d761-2db2-461a-ba88-42b436f3bf48","name":"Bad Request","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"secretTypes\": [\n        \"1a7ec5d1-dcba-4ec7-8220-3c1ee490416b\",\n        \"3b6ec9d2-dabc-5e67-1220-6coie490416b\"\n    ],\n    \"resolved\": true,\n    \"statuses\": [\n        \"ACCEPTED_RISK\",\n        \"REVOKED\"\n    ],\n    \"workspaceIds\": [\n        \"0fe6c2f2-022d-48f7-8e7e-3244369445b0\",\n        \"80ab14ae-c17d-4fd6-88d5-99bf13f0b7f0\"\n    ],\n    \"workspaceVisiblities\": [\n        \"team\"\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/detected-secrets-queries?limit=aaa","protocol":"https","host":["api","getpostman","com"],"path":["detected-secrets-queries"],"query":[{"key":"limit","value":"aaa"}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"instance\": \"aaa\",\n    \"status\": 400,\n    \"title\": \"limit specified is invalid\",\n    \"type\": \"BAD_REQUEST\"\n}"},{"id":"e53ea76e-5d5e-4eca-bc10-87b7c04bae50","name":"Unauthorized","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"secretTypes\": [\n        \"1a7ec5d1-dcba-4ec7-8220-3c1ee490416b\",\n        \"3b6ec9d2-dabc-5e67-1220-6coie490416b\"\n    ],\n    \"resolved\": true,\n    \"statuses\": [\n        \"ACCEPTED_RISK\",\n        \"REVOKED\"\n    ],\n    \"workspaceIds\": [\n        \"0fe6c2f2-022d-48f7-8e7e-3244369445b0\",\n        \"80ab14ae-c17d-4fd6-88d5-99bf13f0b7f0\"\n    ],\n    \"workspaceVisiblities\": [\n        \"team\"\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/detected-secrets-queries?limit=2","protocol":"https","host":["api","getpostman","com"],"path":["detected-secrets-queries"],"query":[{"key":"limit","value":"2"}]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"instance\": \"\",\n    \"status\": 401,\n    \"title\": \"Unauthorized. Please try again with valid credentials.\",\n    \"type\": \"UNAUTHORIZED\"\n}"},{"id":"3ee6cc3f-778b-46b6-bf2d-a908bf9dc4e2","name":"Forbidden","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"secretTypes\": [\n        \"1a7ec5d1-dcba-4ec7-8220-3c1ee490416b\",\n        \"3b6ec9d2-dabc-5e67-1220-6coie490416b\"\n    ],\n    \"resolved\": true,\n    \"statuses\": [\n        \"ACCEPTED_RISK\",\n        \"REVOKED\"\n    ],\n    \"workspaceIds\": [\n        \"0fe6c2f2-022d-48f7-8e7e-3244369445b0\",\n        \"80ab14ae-c17d-4fd6-88d5-99bf13f0b7f0\"\n    ],\n    \"workspaceVisiblities\": [\n        \"team\"\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/detected-secrets-queries?limit=2","protocol":"https","host":["api","getpostman","com"],"path":["detected-secrets-queries"],"query":[{"key":"limit","value":"2"}]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"instance\": \"\",\n    \"status\": 403,\n    \"title\": \"Only members with Superadmin, Admin, or Workspace Admin roles can view the detected secrets.\",\n    \"type\": \"FORBIDDEN\"\n}"},{"id":"f1a06d89-a9e1-4da1-a07f-7000a576c3c1","name":"Not Enterprise Ultimate","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"secretTypes\": [\n        \"1a7ec5d1-dcba-4ec7-8220-3c1ee490416b\",\n        \"3b6ec9d2-dabc-5e67-1220-6coie490416b\"\n    ],\n    \"resolved\": true,\n    \"statuses\": [\n        \"ACCEPTED_RISK\",\n        \"REVOKED\"\n    ],\n    \"workspaceIds\": [\n        \"0fe6c2f2-022d-48f7-8e7e-3244369445b0\",\n        \"80ab14ae-c17d-4fd6-88d5-99bf13f0b7f0\"\n    ],\n    \"workspaceVisiblities\": [\n        \"team\"\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/detected-secrets-queries?limit=2","protocol":"https","host":["api","getpostman","com"],"path":["detected-secrets-queries"],"query":[{"key":"limit","value":"2"}]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"instance\": \"\",\n    \"status\": 403,\n    \"title\": \"This feature is only available for Enterprise Ultimate teams\",\n    \"type\": \"FORBIDDEN\"\n}"},{"id":"54128cd0-4eb7-4c88-a35d-6de65f18e742","name":"Internal Server Error","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"secretTypes\": [\n        \"1a7ec5d1-dcba-4ec7-8220-3c1ee490416b\",\n        \"3b6ec9d2-dabc-5e67-1220-6coie490416b\"\n    ],\n    \"resolved\": true,\n    \"statuses\": [\n        \"ACCEPTED_RISK\",\n        \"REVOKED\"\n    ],\n    \"workspaceIds\": [\n        \"0fe6c2f2-022d-48f7-8e7e-3244369445b0\",\n        \"80ab14ae-c17d-4fd6-88d5-99bf13f0b7f0\"\n    ],\n    \"workspaceVisiblities\": [\n        \"team\"\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/detected-secrets-queries?limit=2","protocol":"https","host":["api","getpostman","com"],"path":["detected-secrets-queries"],"query":[{"key":"limit","value":"2"}]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"instance\": \"\",\n    \"status\": 500,\n    \"title\": \"An error occurred\",\n    \"type\": \"SERVER_ERROR\"\n}"}]}],"id":"84127016-14d9-4e83-930a-3ad58c2f4a77","description":"These endpoints manage secrets detected by the Postman [Secret Scanner](https://learning.postman.com/docs/administration/secret-scanner/)."},{"name":"Get secret types","id":"4aa43f51-63c9-406b-86dc-d9559ae7c8ec","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/secret-types","protocol":"https","host":["api","getpostman","com"],"path":["secret-types"]},"description":"Gets the metadata of the secret types supported by Postman's [Secret Scanner](https://learning.postman.com/docs/administration/secret-scanner/). You can use a secret type's ID in the response to query data with the POST `/detected-secrets/{secretId}` endpoint."},"response":[{"id":"d52dd130-6ee2-49ca-a63e-a02a6ac32145","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/secret-types","protocol":"https","host":["api","getpostman","com"],"path":["secret-types"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"meta\": {\n        \"total\": 4\n    },\n    \"data\": [\n        {\n            \"name\": \"Postman Collection Key\",\n            \"id\": \"04084949-0dda-4735-ace5-f83038f7b200\",\n            \"type\": \"DEFAULT\"\n        },\n        {\n            \"name\": \"Planetscale API Token\",\n            \"id\": \"082351ca-810e-476b-8437-d098b20fba4b\",\n            \"type\": \"DEFAULT\"\n        },\n        {\n            \"name\": \"Open AI API Key\",\n            \"id\": \"0987c237-c1d0-4f07-a1af-a5772facf866\",\n            \"type\": \"DEFAULT\"\n        },\n        {\n            \"name\": \"Picatic API Key\",\n            \"id\": \"0eac968d-f65e-4f3d-9a34-c02138072835\",\n            \"type\": \"DEFAULT\"\n        }\n    ]\n}"},{"id":"1560dfe2-0363-449b-a339-230e72fc3e3b","name":"Unauthorized","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/secret-types","protocol":"https","host":["api","getpostman","com"],"path":["secret-types"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"instance\": \"\",\n    \"status\": 401,\n    \"title\": \"Unauthorized. Please try again with valid credentials.\",\n    \"type\": \"UNAUTHORIZED\"\n}"},{"id":"41effd40-b3aa-4f4c-9796-18338ddde1b9","name":"Forbidden","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/secret-types","protocol":"https","host":["api","getpostman","com"],"path":["secret-types"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"instance\": \"\",\n    \"status\": 403,\n    \"title\": \"Only members with Superadmin, Admin, or Workspace Admin roles can view the detected secrets.\",\n    \"type\": \"FORBIDDEN\"\n}"},{"id":"dddd32bb-e7e6-4e01-8655-0f70e231090f","name":"Not Enterprise Ultimate","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/secret-types","protocol":"https","host":["api","getpostman","com"],"path":["secret-types"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"instance\": \"\",\n    \"status\": 403,\n    \"title\": \"This feature is only available for Enterprise Ultimate teams\",\n    \"type\": \"FORBIDDEN\"\n}"},{"id":"c62d516c-28a0-40fa-b214-5fd0793d6e48","name":"Internal Server Error","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/secret-types","protocol":"https","host":["api","getpostman","com"],"path":["secret-types"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":""}],"cookie":[],"responseTime":null,"body":"{\n    \"instance\": \"\",\n    \"status\": 500,\n    \"title\": \"An error occurred\",\n    \"type\": \"SERVER_ERROR\"\n}"}]}],"id":"cfbbe542-52a3-45fd-8c00-dc998ec1129b","description":"These endpoints let you to manage the secrets detected by Postman's [Secret Scanner](https://learning.postman.com/docs/administration/secret-scanner/). These endpoints are only available on [Enterprise Ultimate plans](https://www.postman.com/pricing/#enterprise-solutions)."},{"name":"User","item":[{"name":"Get authenticated user","id":"beb71cb6-b244-4b78-a76c-0e55dea441b8","request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/me","protocol":"https","host":["api","getpostman","com"],"path":["me"]},"description":"Gets information about the authenticated user.\n\n**Note:**\n\nThis API returns a different response for users with the [Guest role](https://learning.postman.com/docs/collaborating-in-postman/roles-and-permissions/#team-roles)."},"response":[{"id":"461d6e20-1508-41f4-b150-4084e7bfb90a","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/me","protocol":"https","host":["api","getpostman","com"],"path":["me"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"user\": {\n        \"id\": 12345678,\n        \"teamId\": 123,\n        \"username\": \"taylor-lee\",\n        \"email\": \"taylor.lee@example.com\",\n        \"fullName\": \"Taylor Lee\",\n        \"avatar\": \"https://example.com/user/r5u9qpvmujfjf6lbqmga.jpg\",\n        \"isPublic\": true\n    },\n    \"operations\": [\n        {\n            \"name\": \"mock_usage\",\n            \"limit\": 1000000,\n            \"usage\": 110276,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"monitor_request_runs\",\n            \"limit\": 10000000,\n            \"usage\": 1141750,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"api_usage\",\n            \"limit\": 1000000,\n            \"usage\": 16240,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"custom_domains\",\n            \"limit\": 25,\n            \"usage\": 25,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"serverless_requests\",\n            \"limit\": 10000,\n            \"usage\": 0,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"integrations\",\n            \"limit\": 5000,\n            \"usage\": 1018,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"cloud_agent_requests\",\n            \"limit\": 1000000,\n            \"usage\": 1615,\n            \"overage\": 0\n        }\n    ]\n}"},{"id":"faa53884-0ede-4311-8e98-a390ec7f5f82","name":"Guest User Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/me","protocol":"https","host":["api","getpostman","com"],"path":["me"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"user\": {\n        \"id\": 12345678,\n        \"teamId\": 0,\n        \"username\": \"taylor-lee\",\n        \"email\": \"taylor.lee@example.com\",\n        \"fullName\": \"Taylor Lee\",\n        \"avatar\": \"https://example.com/user/r5u9qpvmujfjf6lbqmga.jpg\",\n        \"isPublic\": true\n    }\n}"},{"id":"9957fd30-92c1-4c1c-889e-8d98bf104532","name":"Unauthorized","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/me","protocol":"https","host":["api","getpostman","com"],"path":["me"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"AuthenticationError\",\n        \"message\": \"Invalid API Key. Every request requires a valid API Key to be sent.\"\n    }\n}"},{"id":"449d5608-46ca-459a-b141-a52ccb59cb40","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/me","protocol":"https","host":["api","getpostman","com"],"path":["me"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","value":"application/json","description":{"content":"","type":"text/plain"}}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]}],"id":"f1baa206-cb12-43ba-91cc-1bff7d7a237b","description":"The `/me` endpoints let you manage information about the authenticated user."},{"name":"Webhooks","item":[{"name":"Create a webhook","id":"2425bb63-6933-425c-b956-1cab19b90cfc","request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"webhook\":{\n        \"name\": \"{{webhookName}}\",\n        \"collection\": \"{{collectionUid}}\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/webhooks","protocol":"https","host":["api","getpostman","com"],"path":["webhooks"],"query":[{"key":"workspace","value":"{{workspaceId}}","description":"Optional. A workspace ID in which to create the webhook.\n\nIf you do not include this query parameter, the system creates the webhook in your \"My Workspace\" workspace.","disabled":true}]},"description":"Creates a webhook that triggers a collection with a custom payload. You can get the webhook's URL from the `webhookUrl` property in the endpoint's response.\n\nInclude the following properties in a `webhook` object in the request body:\n\n*   `name` — The webhook's name. On success, the system creates a new monitor with this name in the **Monitors** tab.\n*   `collection` — The collection UID to trigger when calling this webhook."},"response":[{"id":"a9bf665a-926b-4e45-b6ed-dd27473819a2","name":"Successful Response","originalRequest":{"method":"POST","header":[{"key":"x-workspace-id","value":"c90a3482-f80d-43d6-9dfb-0830f5e43605"}],"body":{"mode":"raw","raw":"{\n    \"webhook\":{\n        \"name\": \"Test Webhook\",\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/webhooks?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["webhooks"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. A workspace ID in which to create the webhook.\n\nIf you do not include this query parameter, the system creates the webhook in your \"My Workspace\" workspace."}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"webhook\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Test Webhook\",\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"webhookUrl\": \"https://newman-api.getpostman.com/run/12345678/267a6e99-b6da-407c-a96f-03be2d6282fb\",\n        \"uid\": \"12345678-1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\"\n    }\n}"},{"id":"63d44c71-cdaa-4ecb-b3ea-9d45bef59264","name":"Rate Limit Exceeded","originalRequest":{"method":"POST","header":[{"key":"x-workspace-id","value":"c90a3482-f80d-43d6-9dfb-0830f5e43605"}],"body":{"mode":"raw","raw":"{\n    \"webhook\":{\n        \"name\": \"Test Webhook\",\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/webhooks?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","protocol":"https","host":["api","getpostman","com"],"path":["webhooks"],"query":[{"key":"workspace","value":"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9","description":"Optional. A workspace ID in which to create the webhook.\n\nIf you do not include this query parameter, the system creates the webhook in your \"My Workspace\" workspace."}]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]}],"id":"28222891-6d97-4d4c-b158-7f147bf0bf9a","description":"The `/webhooks` endpoints let you manage [custom webhooks](https://learning.postman.com/docs/running-collections/collection-webhooks/)."},{"name":"SCIM 2.0 - Identity","item":[{"name":"User Provisioning","item":[{"name":"Get a user resource","id":"0ef52576-eac8-4641-9aa3-a98cfcf88443","request":{"auth":{"type":"noauth"},"method":"GET","header":[{"key":"Authorization","value":"{{apiKey}}","type":"text"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Users/{{userId}}","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","{{userId}}"]},"description":"Gets information about a Postman team member."},"response":[{"id":"40509ccd-0e10-4c89-971c-66b162f9c750","name":"Successful Response","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apikey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"active\": true,\n    \"meta\": {\n        \"resourceType\": \"User\",\n        \"created\": \"2021-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n    }\n}"},{"id":"ff78ff4f-ae3b-4855-9f9e-5a0f313b6573","name":"Bad Request","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apiKey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"},{"id":"987c5299-b14e-4a5e-980a-2dcc940fc40d","name":"Unauthorized","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"invalidApiKey"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"},{"id":"3c8fd63d-13b1-4d40-ba73-cb8d0768506c","name":"Forbidden","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apiKey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"},{"id":"69ae723d-e960-4e05-b7c8-42050dddd01b","name":"Not Found","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apiKey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This person isn’t a member of the team.\",\n    \"status\": \"404\"\n}"},{"id":"826dda7d-4cac-43b6-83bb-cfc31491fab8","name":"Too Many Requests","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apiKey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"code":429,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 300 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"},{"id":"5121c15d-12da-4f13-85b6-61f6695b1036","name":"Internal Server Error","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apiKey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to fetch information about this team member.\",\n    \"status\": \"500\"\n}"}]},{"name":"Update a user","id":"2c23a6af-4e4a-4fd9-a592-6743758fd327","request":{"method":"PUT","header":[{"key":"Authorization","value":"{{apiKey}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"{{userName}}\",\n    \"name\": {\n        \"givenName\": \"{{firstName}}\",\n        \"familyName\": \"{{lastName}}\"\n    },\n    \"externalId\": \"{{externalId}}\",\n    \"locale\": \"{{locale}}\",\n    \"groups\": [\n        \"{{groupId}}\"\n    ],\n    \"active\": {{boolean}}\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users/{{userId}}","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","{{userId}}"]},"description":"Updates a user's first and last name in Postman.\n\n**Note:**\n\nThis endpoint only updates a user's first and last name and pushes it to Postman. You cannot update any other user attributes with the SCIM API."},"response":[{"id":"70465c26-f273-4a1f-93ec-72c3a40468f3","name":"Successful Response","originalRequest":{"method":"PUT","header":[{"key":"Authorization","value":"{{apikey}}"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"active\": true,\n    \"meta\": {\n        \"resourceType\": \"User\",\n        \"created\": \"2021-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n    }\n}"},{"id":"faed620e-c1b9-4cb3-918e-f4dca53de099","name":"Bad Request","originalRequest":{"method":"PUT","header":[{"key":"Authorization","value":"{{apiKey}}"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}s","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Couldn’t update this team member’s username. Try again — it should work next time around.\",\n    \"status\": \"400\"\n}"},{"id":"e6e40b2e-6fea-4f4d-a1cb-5e2803846a04","name":"Invalid Team","originalRequest":{"method":"PUT","header":[{"key":"Authorization","value":"{{apiKey}}"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"},{"id":"e879a7a5-7cc5-441e-9b8b-a114b0a4d53b","name":"Invalid Syntax","originalRequest":{"method":"PUT","header":[{"key":"Authorization","value":"{{apiKey}}"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"scimType\": \"invalidSyntax\",\n    \"detail\": \"The request body seems to be incomplete or have unsupported characters.\",\n    \"status\": \"400\"\n}"},{"id":"55ff9bb0-5d51-48dd-92bc-cfd4cbbd9cab","name":"Unauthorized","originalRequest":{"method":"PUT","header":[{"key":"Authorization","value":"invalidApiKey"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"},{"id":"7d8799cb-5911-41ff-9b93-4960a0d169c8","name":"Forbidden","originalRequest":{"method":"PUT","header":[{"key":"Authorization","value":"{{apiKey}}"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"},{"id":"83d8fac6-955f-41e4-a096-9273cf5a1c45","name":"Admin Action Not Allowed","originalRequest":{"method":"PUT","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"The admin is not allowed to perform this action.\",\n    \"status\": \"403\"\n}"},{"id":"c8cfe4af-5b0c-445e-a5c4-438f2da5ab9e","name":"User Not in Team","originalRequest":{"method":"PUT","header":[{"key":"Authorization","value":"{{apiKey}}"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This person isn’t a member of the team.\",\n    \"status\": \"403\"\n}"},{"id":"b578f038-c417-4fc5-93b9-6ca5be3683bd","name":"Not Found","originalRequest":{"method":"PUT","header":[{"key":"Authorization","value":"{{apiKey}}"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This person isn’t a member of the team.\",\n    \"status\": \"404\"\n}"},{"id":"86db9c08-2f62-4f0c-856e-57a880c1cd48","name":"Too Many Requests","originalRequest":{"method":"PUT","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"code":429,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 180 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"},{"id":"0ec2ef05-b2c9-4e21-a9b8-744e169e75bb","name":"Internal Server Error","originalRequest":{"method":"PUT","header":[{"key":"Authorization","value":"{{apiKey}}"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Couldn’t update this team member’s information. Try again — it should work next time around.\",\n    \"status\": \"500\"\n}"}]},{"name":"Create a user","id":"642f6b0f-e6f5-4fc6-b3f9-1a52b7b121cf","request":{"method":"POST","header":[{"key":"Authorization","value":"{{apiKey}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"{{userEmail}}\",\n    \"name\": {\n        \"givenName\": \"{{firstName}}\",\n        \"familyName\": \"{{lastName}}\"\n    },\n    \"locale\": \"{{locale}}\",\n    \"groups\": [\n        \"{{groupId}}\"\n    ],\n    \"active\": {{boolean}}\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users"]},"description":"Creates a new user account in Postman and adds the user to your organization's Postman team. If the account does not already exist, this also activates the user so they can authenticate in to your Postman team.\n\nIf the account already exists, the system sends the user an [email invite](https://learning.postman.com/docs/administration/managing-your-team/managing-your-team/#inviting-users) to join the Postman team. The user joins the team once they accept the invite.\n\nBy default, the system assigns new users the developer role. You can [update user roles in Postman](https://learning.postman.com/docs/administration/managing-your-team/managing-your-team/#managing-team-roles)."},"response":[{"id":"251bc756-5c67-4d4b-ac12-860eb71838a3","name":"Created","originalRequest":{"method":"POST","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users"]}},"status":"Created","code":201,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Test\",\n        \"familyName\": \"User\"\n    },\n    \"emails\": [\n        {\n            \"primary\": true,\n            \"value\": \"taylor-lee@example.com\",\n            \"type\": \"work\",\n            \"display\": \"taylor-lee@example.com\"\n        }\n    ],\n    \"externalId\": \"12345678\",\n    \"active\": true,\n    \"meta\": {\n        \"resourceType\": \"User\",\n        \"created\": \"2021-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n    }\n}"},{"id":"87d0c68e-1e8e-47d2-8a32-f657f993245a","name":"Create User In Group","originalRequest":{"method":"POST","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"groups\": [\n        \"g3d420314611061d6461b2b27487dcf2e58e39d744c8542f\"\n    ],\n    \"active\": true\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users"]}},"status":"Created","code":201,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Test\",\n        \"familyName\": \"User\"\n    },\n    \"emails\": [\n        {\n            \"primary\": true,\n            \"value\": \"taylor-lee@example.com\",\n            \"type\": \"work\",\n            \"display\": \"taylor-lee@example.com\"\n        }\n    ],\n    \"externalId\": \"12345678\",\n    \"active\": true,\n    \"meta\": {\n        \"resourceType\": \"User\",\n        \"created\": \"2021-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n    }\n}"},{"id":"fe3cc934-6092-4dae-866a-650f795c9a31","name":"Invalid Syntax","originalRequest":{"method":"POST","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"scimType\": \"invalidSyntax\",\n    \"detail\": \"The request body seems to be incomplete or have unsupported characters.\",\n    \"status\": \"400\"\n}"},{"id":"cd2e7361-3c21-4d19-8382-cb73718f6ba2","name":"Invalid Team","originalRequest":{"method":"POST","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"},{"id":"53db7030-e866-4b70-b931-24f00bcd679c","name":"Not Enterprise","originalRequest":{"method":"POST","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Only Postman teams on the Enterprise plan can use SCIM provisioning. Upgrade your plan.\",\n    \"status\": \"400\"\n}"},{"id":"deaed26f-08fa-4725-9ffa-fbf0e8e4b399","name":"No Slots Available","originalRequest":{"method":"POST","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"No slots available on your Postman team. Purchase or free up slots to invite more members. For help, contact Team Admins or members with a Billing role.\",\n    \"status\": \"400\"\n}"},{"id":"bdf65d44-8289-4463-9814-05cf0f07ba03","name":"Unauthorized","originalRequest":{"method":"POST","header":[{"key":"Authorization","value":""}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"},{"id":"ac0c1de8-9aec-4303-95ef-067e107ef4dd","name":"Forbidden","originalRequest":{"method":"POST","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"},{"id":"7a10de2a-f4e9-427b-8579-ae97213f230a","name":"Conflict","originalRequest":{"method":"POST","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users"]}},"status":"Conflict","code":409,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This person is already a member of the team.\",\n    \"scimType\": \"uniqueness\",\n    \"status\": \"409\"\n}"},{"id":"f952c9de-0b96-4f41-9b21-ffe5eae78ebe","name":"Too Many Requests","originalRequest":{"method":"POST","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users"]}},"code":429,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 180 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"},{"id":"19224382-45c5-4d1e-a60d-992a1ae8d1a8","name":"Internal Server Error","originalRequest":{"method":"POST","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to add members to the team. Try again — it should work next time around.\",\n    \"status\": \"500\"\n}"}]},{"name":"Get all user resources","id":"1cbc2332-787c-4dd4-95f4-cdc93ed8ad11","request":{"method":"GET","header":[{"key":"Authorization","value":"{{apiKey}}","type":"text"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Users","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users"],"query":[{"key":"startIndex","value":"<integer>","description":"The index entry by which to begin the list of returned results.","disabled":true},{"key":"count","value":"<integer>","description":"Limit the number of results returned in a single response. By default, the system returns a list of 100 users.","disabled":true},{"key":"filter","value":"<string>","description":"Filter results by a specific word or phrase. For example, user the `userName eq \"user%40example.com\"` value to filter for the `user@example.com` username.","disabled":true}]},"description":"Gets information about all Postman team members."},"response":[{"id":"4bd51871-3f97-4b4d-a5df-20d4e64b3878","name":"Successful Response","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apikey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Users?startIndex=1&count=50","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users"],"query":[{"key":"startIndex","value":"1","description":"The index entry by which to begin the list of returned results."},{"key":"count","value":"50","description":"Limit the number of results returned in a single response. By default, the system returns a list of 100 users."}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:ListResponse\"\n    ],\n    \"totalResults\": 2,\n    \"startIndex\": 1,\n    \"itemsPerPage\": 2,\n    \"Resources\": [\n        {\n            \"schemas\": [\n                \"urn:ietf:params:scim:schemas:core:2.0:User\"\n            ],\n            \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n            \"userName\": \"taylor-lee@example.com\",\n            \"name\": {\n                \"givenName\": \"Taylor\",\n                \"familyName\": \"Lee\"\n            },\n            \"externalId\": \"12345678\",\n            \"active\": true,\n            \"meta\": {\n                \"resourceType\": \"User\",\n                \"created\": \"2021-02-22T04:24:13.000Z\",\n                \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n            }\n        },\n        {\n            \"schemas\": [\n                \"urn:ietf:params:scim:schemas:core:2.0:User\"\n            ],\n            \"id\": \"123775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n            \"userName\": \"alex-cruz@okta.local\",\n            \"name\": {\n                \"givenName\": \"Alex\",\n                \"familyName\": \"Cruz\"\n            },\n            \"externalId\": \"87654321\",\n            \"active\": true,\n            \"meta\": {\n                \"resourceType\": \"User\",\n                \"created\": \"2021-02-22T04:24:13.000Z\",\n                \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n            }\n        }\n    ]\n}"},{"id":"0dc9ae02-5728-46c1-844c-de8dacc11047","name":"No Results Found","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apikey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Users?startIndex=1&count=50","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users"],"query":[{"key":"startIndex","value":"1","description":"The index entry by which to begin the list of returned results."},{"key":"count","value":"50","description":"Limit the number of results returned in a single response. By default, the system returns a list of 100 users."}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:ListResponse\"\n    ],\n    \"totalResults\": 2,\n    \"startIndex\": 1,\n    \"itemsPerPage\": 0,\n    \"Resources\": []\n}"},{"id":"2dc6b02d-d9fe-47d2-ae4a-b11357b7d717","name":"Filter Results","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apikey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Users?filter=userName eq \"taylor-lee%40example.com\"","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users"],"query":[{"key":"filter","value":"userName eq \"taylor-lee%40example.com\"","description":"Filter results by a specific word or phrase. For example, user the `userName eq \"user%40example.com\"` value to filter for the `user@example.com` username."}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:ListResponse\"\n    ],\n    \"totalResults\": 2,\n    \"startIndex\": 1,\n    \"itemsPerPage\": 1,\n    \"Resources\": [\n        {\n            \"schemas\": [\n                \"urn:ietf:params:scim:schemas:core:2.0:User\"\n            ],\n            \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n            \"userName\": \"taylor-lee@example.com\",\n            \"name\": {\n                \"givenName\": \"Taylor\",\n                \"familyName\": \"Lee\"\n            },\n            \"externalId\": \"12345678\",\n            \"active\": true,\n            \"meta\": {\n                \"resourceType\": \"User\",\n                \"created\": \"2021-02-22T04:24:13.000Z\",\n                \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n            }\n        }\n    ]\n}"},{"id":"ab0eef86-1ef0-4f83-964f-f46aeb75625a","name":"Invalid Filter","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apikey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Users?filter=username ne \"test%40domain.com\"","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users"],"query":[{"key":"filter","value":"username ne \"test%40domain.com\"","description":"Filter results by a specific word or phrase. For example, user the `userName eq \"user%40example.com\"` value to filter for the `user@example.com` username."}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"You’ve used filter(s) that Postman doesn’t support.\",\n    \"status\": \"400\"\n}"},{"id":"5152166e-ad81-498a-a0e4-46b2191ca559","name":"Bad Request","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apikey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Users?startIndex=1&count=50","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users"],"query":[{"key":"startIndex","value":"1","description":"The index entry by which to begin the list of returned results."},{"key":"count","value":"50","description":"Limit the number of results returned in a single response. By default, the system returns a list of 100 users."}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"},{"id":"8fce64e2-1d33-4a58-84ed-7817de9e8afe","name":"Unauthorized","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"invalidApiKey"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Users","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"},{"id":"e234881a-644d-4775-a0ef-f8a41359683f","name":"Forbidden","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apikey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Users","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"},{"id":"92f03699-d37d-467d-823c-b23959a6a447","name":"Too Many Requests","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apiKey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Users","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users"],"query":[{"key":"startIndex","value":"1","disabled":true},{"key":"count","value":"10","disabled":true}]}},"code":429,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 300 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"},{"id":"2d43bf2d-aa16-4360-a0c6-90686272c992","name":"Internal Server Error","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apiKey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Users","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Couldn’t fetch members of the team.\",\n    \"status\": \"500\"\n}"}]},{"name":"Update a user's state","id":"aba0a145-84d6-4345-a7b7-221240d7f0db","request":{"method":"PATCH","header":[{"key":"Authorization","value":"{{apiKey}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": {{boolean}}\n            }\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users/{{userId}}","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","{{userId}}"]},"description":"Updates a user's active state in Postman. Set the `active` property in the request body to one of the following values:\n\n- `true` — Activates the user. This lets them authenticate in to your Postman team.\n- `false` — Removes the user from your Postman team and deactivates the account. This blocks the user from authenticating in to Postman.\n    \n\n### Reactivating users\n\nBy setting the `active` property from `false` to `true`, this reactivates an account. This allows the account to authenticate in to Postman and adds the account back on to your Postman team."},"response":[{"id":"db3ce189-5801-4c2d-9908-88507f41228a","name":"Successful Response","originalRequest":{"method":"PATCH","header":[{"key":"Authorization","value":"{{apikey}}"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"active\": false,\n    \"meta\": {\n        \"resourceType\": \"User\",\n        \"created\": \"2021-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n    }\n}"},{"id":"8966694e-a2b1-44e9-b7f4-f9fc1604bc4e","name":"Bad Request","originalRequest":{"method":"PATCH","header":[{"key":"Authorization","value":"{{apiKey}}"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"scimType\": \"invalidSyntax\",\n    \"detail\": \"You’ve used operation that Postman doesn’t support.\",\n    \"status\": \"400\"\n}"},{"id":"23cadd46-307b-470c-9507-8c8920d5bca2","name":"Invalid Team","originalRequest":{"method":"PATCH","header":[{"key":"Authorization","value":"invalidApiKey"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Team doesn't exist.\",\n    \"status\": \"400\"\n}"},{"id":"82ede800-be3c-4b50-960c-cfb9b23738db","name":"Unauthorized","originalRequest":{"method":"PATCH","header":[{"key":"Authorization","value":"invalidApiKey"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"},{"id":"3c6ad66f-125a-48d5-b738-741ab8150f9f","name":"Forbidden","originalRequest":{"method":"PATCH","header":[{"key":"Authorization","value":"{{apiKey}}"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This person isn’t a member of the team.\",\n    \"status\": \"403\"\n}"},{"id":"648478d5-0e86-4024-81ca-b2c89b45d535","name":"Admin Team Mismatch","originalRequest":{"method":"PATCH","header":[{"key":"Authorization","value":"{{apiKey}}"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"},{"id":"7f0fb247-c746-4ef1-9476-6267fafd5d65","name":"Not Found","originalRequest":{"method":"PATCH","header":[{"key":"Authorization","value":"{{apiKey}}"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This person isn’t a member of the team.\",\n    \"status\": \"404\"\n}"},{"id":"24017ad4-9808-47a1-9e8a-68984e359631","name":"Too Many Requests","originalRequest":{"method":"PATCH","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Too Many Requests","_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 180 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"},{"id":"74f427ff-c71f-4f5f-aade-a48124080b7a","name":"Internal Server Error","originalRequest":{"method":"PATCH","header":[{"key":"Authorization","value":"{{apiKey}}"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Users","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Couldn’t update this team member’s information. Try again — it should work next time around.\",\n    \"status\": \"500\"\n}"}]}],"id":"2510fca4-9286-40d0-9cf7-e5a2dcf8d903","description":"The `/scim/v2/Users` endpoint lets you provision and manage your Postman users.\n\n**Note:**\n\nYou can only deactivate users with the SCIM API. You **cannot** permanently delete users with the API.\n\n### Provisioning users with the SCIM API\n\n- You can only deactivate users with the SCIM API. You **cannot** permanently delete users with the API.\n- Users created with the SCIM API are automatically created in Postman.\n    - If the account's email ID does not exist, the user is also added to their organization's Postman team.\n    - If the account's email ID already exists, the system sends the user an email invite to join the Postman team. After they accept the invite, the are added to the team.\n- By default, new users are given the developer role in Postman. Postman user roles cannot be updated via the SCIM API. You must manage user and group roles in Postman."},{"name":"Group Provisioning","item":[{"name":"Get all group resources","id":"df098a94-d86c-4d66-ba9f-169317485c25","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Authorization","value":"{{apiKey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Groups","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups"]},"description":"Gets all Postman groups within the team."},"response":[{"id":"3f62b636-b356-42ac-9d73-ef450a367982","name":"Successful Response","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apikey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Groups","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:ListResponse\"\n    ],\n    \"totalResults\": 2,\n    \"startIndex\": 1,\n    \"itemsPerPage\": 2,\n    \"Resources\": [\n        {\n            \"schemas\": [\n                \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n            ],\n            \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n            \"displayName\": \"Test-API\",\n            \"members\": [\n                {\n                    \"value\": \"23a35c2723d34c03b4c56443c09e7173\",\n                    \"display\": \"Taylor Lee\"\n                }\n            ],\n            \"externalId\": \"1234\",\n            \"meta\": {\n                \"resourceType\": \"Group\",\n                \"created\": \"2022-02-22T04:24:13.000Z\",\n                \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n            }\n        },\n        {\n            \"schemas\": [\n                \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n            ],\n            \"id\": \"123775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n            \"displayName\": \"Test Group\",\n            \"members\": [\n                {\n                    \"value\": \"23a35c2723d34c03b4c56443c09e7173\",\n                    \"display\": \"Taylor Lee\"\n                },\n                {\n                    \"value\": \"ghc794f24f4c49f4b5d503a4cb2686e90\",\n                    \"display\": \"Alex Cruz\"\n                }\n            ],\n            \"externalId\": \"4321\",\n            \"meta\": {\n                \"resourceType\": \"Group\",\n                \"created\": \"2022-02-22T04:24:13.000Z\",\n                \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n            }\n        }\n    ]\n}"},{"id":"8d936fd0-c4f0-43b4-871b-e5cf70c00300","name":"Filter Results","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apikey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Groups?filter=displayName eq \"Test-API\"","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups"],"query":[{"key":"filter","value":"displayName eq \"Test-API\""}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:ListResponse\"\n    ],\n    \"totalResults\": 1,\n    \"startIndex\": 1,\n    \"itemsPerPage\": 1,\n    \"Resources\": [\n        {\n            \"schemas\": [\n                \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n            ],\n            \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n            \"displayName\": \"Test-API\",\n            \"members\": [\n                {\n                    \"value\": \"b1c794f24f4c49f4b5d503a4cb2686ea\",\n                    \"display\": \"Taylor Lee\"\n                }\n            ],\n            \"externalId\": \"1234\",\n            \"meta\": {\n                \"resourceType\": \"Group\",\n                \"created\": \"2022-02-22T04:24:13.000Z\",\n                \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n            }\n        }\n    ]\n}"},{"id":"c9a27de9-33e6-480f-9037-578d3f19dddc","name":"No Results Found","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apikey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Groups?startIndex=1&count=2","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups"],"query":[{"key":"startIndex","value":"1"},{"key":"count","value":"2"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:ListResponse\"\n    ],\n    \"totalResults\": 0,\n    \"startIndex\": 1,\n    \"itemsPerPage\": 0,\n    \"Resources\": []\n}"},{"id":"01db8906-70b5-489b-b714-b8d021611b29","name":"Invalid Team","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apikey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Groups","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"},{"id":"8cdabbc3-d50e-46c9-9794-20167e901e02","name":"Invalid Filter","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apikey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Groups?startIndex=1&count=2&filter=displayName ne \"Test SCIMv2\"","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups"],"query":[{"key":"startIndex","value":"1"},{"key":"count","value":"2"},{"key":"filter","value":"displayName ne \"Test SCIMv2\"","description":"Enter URL encoded email"}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"You’ve used filter(s) that Postman doesn’t support.\",\n    \"status\": \"400\"\n}"},{"id":"13d2248e-3feb-4e13-909a-1900d1cf5541","name":"Unauthorized","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"invalidApiKey"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Groups","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"},{"id":"0a6757a5-adf7-4926-9858-367039bcf91a","name":"Forbidden","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apikey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Groups","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"},{"id":"d547eeed-cc28-40d7-8970-54115662109e","name":"Too Many Requests","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apiKey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Groups","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups"]}},"code":429,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 300 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"},{"id":"68861946-95f1-490a-a329-6ac604a550b3","name":"Internal Server Error","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apiKey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Groups","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Couldn’t fetch members of the team.\",\n    \"status\": \"500\"\n}"}]},{"name":"Update a group","id":"daed6ef7-9a6b-4d4f-8037-42b85bc7b29a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PATCH","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"{{operation}}\",\n            \"value\": {\n                \"id\": \"{{groupId}}\",\n                \"displayName\": \"{{userGroupName}}\"\n            }\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/{{groupId}}","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","{{groupId}}"]},"description":"Updates a group's information. Using this endpoint you can:\n\n- Update a group's name.\n- Add or remove members from a Postman group.\n    \n\nInclude the following properties in the request body:\n\n- `Operations` — An **object** that contains the following properties:\n    - `op` — The operation to perform. One of:\n        - `add`\n        - `remove`\n        - `replace`\n    - `value` — An **object** that contains the following properties:\n        - `id` — The group's ID.\n        - `displayName` — The group's display name."},"response":[{"id":"14b94767-77d8-4597-a899-5c7444a44a15","name":"Update a Group Name","originalRequest":{"method":"PATCH","header":[{"key":"Authorization","value":"{{apikey}}"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n    \"displayName\": \"Test-API\",\n    \"members\": null,\n    \"externalId\": \"1234\",\n    \"meta\": {\n        \"resourceType\": \"Group\",\n        \"created\": \"2022-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n    }\n}"},{"id":"b798bcae-78f0-40b6-969c-4e71175cdf65","name":"Add Team Members","originalRequest":{"method":"PATCH","header":[{"key":"Authorization","value":"{{apikey}}"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"add\",\n            \"path\": \"members\",\n            \"value\": [\n                {\n                    \"value\": \"89bb1940b90545759e7f6f887cfb368e\",\n                    \"display\": \"alex.cruz@example.com\"\n                }\n            ]\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n    \"displayName\": \"Test-API\",\n    \"members\": [\n        {\n            \"value\": \"23a35c2723d34c03b4c56443c09e7173\",\n            \"display\": \"taylor.lee@example.com\"\n        },\n        {\n            \"value\": \"89bb1940b90545759e7f6f887cfb368e\",\n            \"display\": \"alex.cruz@example.com\"\n        }\n    ],\n    \"externalId\": \"1234\",\n    \"meta\": {\n        \"resourceType\": \"Group\",\n        \"created\": \"2022-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n    }\n}"},{"id":"bdd2f023-e68c-4608-aaad-73d58fc28eea","name":"Remove Team Members","originalRequest":{"method":"PATCH","header":[{"key":"Authorization","value":"{{apikey}}"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"remove\",\n            \"path\": \"members[value eq \\\"89bb1940b90545759e7f6f887cfb368e\\\"]\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n    \"displayName\": \"Test-API\",\n    \"members\": [\n        {\n            \"value\": \"23a35c2723d34c03b4c56443c09e7173\",\n            \"display\": \"taylor.lee@example.com\"\n        }\n    ],\n    \"externalId\": \"1234\",\n    \"meta\": {\n        \"resourceType\": \"Group\",\n        \"created\": \"2022-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n    }\n}"},{"id":"ba0ebb8d-a7ed-4b6c-83fc-dc5b20f274ad","name":"Replace Team Members","originalRequest":{"method":"PATCH","header":[{"key":"Authorization","value":"{{apikey}}"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"path\": \"members\",\n            \"value\": [\n                {\n                    \"value\": \"23a35c2723d34c03b4c56443c09e7173\",\n                    \"display\": \"taylor.lee@example.com\"\n                },\n                {\n                    \"value\": \"89bb1940b90545759e7f6f887cfb368e\",\n                    \"display\": \"alex.cruz@example.com\"\n                }\n            ]\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n    \"displayName\": \"Test-API\",\n    \"members\": [\n        {\n            \"value\": \"23a35c2723d34c03b4c56443c09e7173\",\n            \"display\": \"taylor.lee@example.com\"\n        },\n        {\n            \"value\": \"89bb1940b90545759e7f6f887cfb368e\",\n            \"display\": \"alex.cruz@example.com\"\n        }\n    ],\n    \"externalId\": \"1234\",\n    \"meta\": {\n        \"resourceType\": \"Group\",\n        \"created\": \"2022-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n    }\n}"},{"id":"0c51aa29-2e0b-4276-96e5-a8a22130eaca","name":"Add and Remove Team Members","originalRequest":{"method":"PATCH","header":[{"key":"Authorization","value":"{{apikey}}"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"remove\",\n            \"path\": \"members[value eq \\\"89bb1940b90545759e7f6f887cfb368e\\\"]\"\n        },\n        {\n            \"op\": \"add\",\n            \"path\": \"members\",\n            \"value\": [\n                {\n                    \"value\": \"23a35c2723d34c03b4c56443c09e7173\",\n                    \"display\": \"taylor.lee@example.com\"\n                }\n            ]\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n    \"displayName\": \"Test-API\",\n    \"members\": [\n        {\n            \"value\": \"23a35c2723d34c03b4c56443c09e7173\",\n            \"display\": \"taylor.lee@example.com\"\n        }\n    ],\n    \"externalId\": \"1234\",\n    \"meta\": {\n        \"resourceType\": \"Group\",\n        \"created\": \"2022-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n    }\n}"},{"id":"67251f9a-5d2b-424a-9684-67d2432effd6","name":"Bad Request","originalRequest":{"method":"PATCH","header":[{"key":"Authorization","value":"{{apikey}}"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Couldn’t update this team member’s username. Try again — it should work next time around.\",\n    \"status\": \"400\"\n}"},{"id":"29bad829-949f-43d5-af17-fd3e34873ffc","name":"Bad Request","originalRequest":{"method":"PATCH","header":[{"key":"Authorization","value":"{{apiKey}}"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Couldn’t update this team member’s username. Try again — it should work next time around.\",\n    \"status\": \"400\"\n}"},{"id":"c795fc2b-f9cb-4e3b-a3e7-08ab60ff5ccf","name":"Invalid Team","originalRequest":{"method":"PATCH","header":[{"key":"Authorization","value":"{{apiKey}}"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"},{"id":"e9b44365-4719-4666-a477-5fbea1349674","name":"Invalid Syntax","originalRequest":{"method":"PATCH","header":[{"key":"Authorization","value":"{{apiKey}}"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"scimType\": \"invalidSyntax\",\n    \"detail\": \"The request body seems to be incomplete or have unsupported characters.\",\n    \"status\": \"400\"\n}"},{"id":"f44e4f72-3cd4-428a-ad41-f81ef5d036aa","name":"Invalid API Key","originalRequest":{"method":"PATCH","header":[{"key":"Authorization","value":"invalidApiKey"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"},{"id":"d8158f1a-6ec7-4103-aeda-7a5c501b7f09","name":"Admin Team Mismatch","originalRequest":{"method":"PATCH","header":[{"key":"Authorization","value":"{{apiKey}}"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"The admin is not allowed to perform this action.\",\n    \"status\": \"403\"\n}"},{"id":"4b6288f7-f0e9-496e-8355-0447e4178a8b","name":"Forbidden","originalRequest":{"method":"PATCH","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This person isn’t a member of the team.\",\n    \"status\": \"403\"\n}"},{"id":"231f4a93-0df5-41db-a2e9-57816ad1d659","name":"Not Found","originalRequest":{"method":"PATCH","header":[{"key":"Authorization","value":"{{apiKey}}"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Group isn’t a member of the team.\",\n    \"status\": \"404\"\n}"},{"id":"886c84e3-efc6-4634-95cd-f75c6d78b36b","name":"Too Many Requests","originalRequest":{"method":"PATCH","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"code":429,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 180 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"},{"id":"3058dbdf-c6b9-4b13-b774-c33427dfc17d","name":"Internal Server Error","originalRequest":{"method":"PATCH","header":[{"key":"Authorization","value":"{{apiKey}}"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Couldn’t update this team member’s information. Try again — it should work next time around.\",\n    \"status\": \"500\"\n}"}]},{"name":"Get a group resource","id":"5f44c1dd-57b3-467a-8c46-84617d6c8369","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[{"key":"Authorization","value":"{{apiKey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/{{groupId}}","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","{{groupId}}"]},"description":"Gets information about a Postman group within the team."},"response":[{"id":"952de744-b1ec-4560-a177-74a5e3dfe711","name":"Successful Response","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apikey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n    \"displayName\": \"Test-API\",\n    \"members\": [\n        {\n            \"value\": \"b1c794f24f4c49f4b5d503a4cb2686ea\",\n            \"display\": \"Taylor Lee\"\n        }\n    ],\n    \"externalId\": \"1234\",\n    \"meta\": {\n        \"resourceType\": \"Group\",\n        \"created\": \"2022-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n    }\n}"},{"id":"96facd12-126d-43a4-8dd4-ebc64e2c3865","name":"Invalid Team","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apiKey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"},{"id":"b031060a-99b4-4bf5-bc08-bded4210c6e9","name":"Unauthorized","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"invalidApiKey"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"},{"id":"f8916766-77df-40de-8f15-16a5eaaa8785","name":"Forbidden","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apiKey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"},{"id":"bf06ccc5-146f-40c5-9f39-c5833eb8c602","name":"Not Found","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apiKey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This group isn’t a member of the team.\",\n    \"status\": \"404\"\n}"},{"id":"c38b8c37-f8b4-4a49-a254-a89fd5fb9cba","name":"Too Many Request","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apiKey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"code":429,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 300 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"},{"id":"49771b54-0e97-469b-bac6-fadb74f29698","name":"Internal Server Error","originalRequest":{"method":"GET","header":[{"key":"Authorization","value":"{{apiKey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to fetch information about this team member.\",\n    \"status\": \"500\"\n}"}]},{"name":"Create a group","id":"d424af21-3a22-4589-bf6d-5992950db2d7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\"urn:ietf:params:scim:schemas:core:2.0:Group\"],\n    \"displayName\": {{ userGroup }},\n    \"members\": []\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups"]},"description":"Creates a new user group in Postman and creates a new account for each group member.\n\nEach account is added to your Postman team and authentication is activated for each user. If an existing Postman account uses an email that matches a group member's email ID, an [email invite](https://postman.postman.co/docs/administration/managing-your-team/managing-your-team/#invites) to join your Postman team is sent to that user. Once the user accepts the invite, they'll be added to your team.\n\nBy default, the system assigns new users the developer role. You can [update user roles in Postman](https://learning.postman.com/docs/administration/managing-your-team/managing-your-team/#managing-team-roles)."},"response":[{"id":"b03af249-07af-40fc-b4a7-b57673d95ae7","name":"Group Created","originalRequest":{"method":"POST","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"Test-API\",\n    \"members\": []\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups"]}},"status":"Created","code":201,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n    \"displayName\": \"Test-API\",\n    \"members\": [],\n    \"externalId\": \"1234\",\n    \"meta\": {\n        \"resourceType\": \"Group\",\n        \"created\": \"2022-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n    }\n}"},{"id":"40b0b460-b440-41b8-982e-2fc4555fbf6f","name":"Group Created with Members","originalRequest":{"method":"POST","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"Test-API\",\n    \"members\": [\n        {\n            \"value\": \"b1c794f24f4c49f4b5d503a4cb2686ea\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups"]}},"status":"Created","code":201,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n    \"displayName\": \"Test-API\",\n    \"members\": [\n        {\n            \"value\": \"b1c794f24f4c49f4b5d503a4cb2686ea\",\n            \"display\": \"Taylor Lee\"\n        }\n    ],\n    \"externalId\": \"1234\",\n    \"meta\": {\n        \"resourceType\": \"Group\",\n        \"created\": \"2022-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n    }\n}"},{"id":"28973523-f371-483d-87a6-5a050c95aeb1","name":"Invalid Syntax","originalRequest":{"method":"POST","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"Test-API\",\n    \"members\": []\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"scimType\": \"invalidSyntax\",\n    \"detail\": \"The request body seems to be incomplete or have unsupported characters.\",\n    \"status\": \"400\"\n}"},{"id":"c97d974d-fdf0-4ba5-a32a-da886dae71ad","name":"Invalid Team","originalRequest":{"method":"POST","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"Test-API\",\n    \"members\": []\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"},{"id":"78d5b93b-c9be-4563-b239-7c5ac9cd7859","name":"Not Enterprise","originalRequest":{"method":"POST","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"Test-API\",\n    \"members\": []\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Only Postman teams on the Enterprise plan can use SCIM provisioning. Upgrade your plan.\",\n    \"status\": \"400\"\n}"},{"id":"52efb15a-0bd6-4524-8b50-99dbe9b8d554","name":"No Slots Available","originalRequest":{"method":"POST","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"Test-API\",\n    \"members\": []\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"No slots available on your Postman team. Purchase or free up slots to invite more members. For help, contact Team Admins or members with a Billing role.\",\n    \"status\": \"400\"\n}"},{"id":"02f14ca4-1409-4ef9-b9b0-56e3addbe903","name":"Unauthorized","originalRequest":{"method":"POST","header":[{"key":"Authorization","value":""}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"Test-API\",\n    \"members\": []\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"},{"id":"a8c2cf2f-dcdc-48be-a791-67067c5ea561","name":"Invalid API Key","originalRequest":{"method":"POST","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"Test-API\",\n    \"members\": []\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"},{"id":"c5df6763-2141-44c1-8db1-65b9d25ea843","name":"Conflict","originalRequest":{"method":"POST","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"Test-API\",\n    \"members\": []\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups"]}},"status":"Conflict","code":409,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"scimType\": \"uniqueness\",\n    \"detail\": \"This person is already a member of the team.\",\n    \"status\": \"409\"\n}"},{"id":"aa338924-ddfe-4876-8fc7-8c3315b45bb6","name":"Too Many Requests","originalRequest":{"method":"POST","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"Test-API\",\n    \"members\": []\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups"]}},"code":429,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 180 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"},{"id":"aa024129-5cf9-4d4a-90e9-8290ece2e3cf","name":"Internal Server Error","originalRequest":{"method":"POST","header":[{"key":"Authorization","value":"{{apiKey}}"}],"body":{"mode":"raw","raw":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"Test-API\",\n    \"members\": []\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/scim/v2/Groups","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to add members to the team. Try again — it should work next time around.\",\n    \"status\": \"500\"\n}"}]},{"name":"Delete a group","id":"fd5d2b77-766a-4390-99de-b379bb8129eb","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"DELETE","header":[{"key":"Authorization","value":"{{apiKey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/{{groupId}}","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","{{groupId}}"]},"description":"Deletes a group in Postman.\n\nUser accounts that were in the deleted group are deactivated in Postman if the app is assigned to the user only with the deleted group.\n\nUser accounts and the data corresponding to them are **not** deleted. To permanently delete user accounts and their data, [contact Postman support](https://www.postman.com/support/)."},"response":[{"id":"6cd8871c-c9fe-49c8-b5c1-4218c2df9524","name":"Group Deleted","originalRequest":{"method":"DELETE","header":[{"key":"Authorization","value":"{{apikey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"No Content","code":204,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":null},{"id":"85461d48-c309-4651-b41d-951c8073bef8","name":"Bad Request","originalRequest":{"method":"DELETE","header":[{"key":"Authorization","value":"{{apiKey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"},{"id":"0b524164-e8b3-4e09-92a5-da7bac7f8c78","name":"Unauthorized","originalRequest":{"method":"DELETE","header":[{"key":"Authorization","value":"invalidApiKey"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"},{"id":"565de36c-9213-4aa0-90a0-78d3d5b48132","name":"Invalid API Key","originalRequest":{"method":"DELETE","header":[{"key":"Authorization","value":"{{apiKey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"},{"id":"79e2aefd-89a9-437f-9146-96c80a8bea50","name":"Not Found","originalRequest":{"method":"DELETE","header":[{"key":"Authorization","value":"{{apiKey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This group isn’t a member of the team.\",\n    \"status\": \"404\"\n}"},{"id":"51088a2c-74c5-4428-8475-02a30c49c779","name":"Too Many Requests","originalRequest":{"method":"DELETE","header":[{"key":"Authorization","value":"{{apiKey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"code":429,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 180 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"},{"id":"37ea5433-4f95-4acb-bdd8-aaeca0caa960","name":"Internal Server Error","originalRequest":{"method":"DELETE","header":[{"key":"Authorization","value":"{{apiKey}}"}],"url":{"raw":"https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","Groups","405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to fetch information about this team member.\",\n    \"status\": \"500\"\n}"}]}],"id":"0041600f-75c5-4d84-9893-45f762aa8600","description":"The `/scim/v2/Groups` endpoint lets you provision and manage your Postman groups."},{"name":"Get resource types","id":"1c813700-8f62-424b-80ed-82ec054d154d","request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/scim/v2/ResourceTypes","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","ResourceTypes"]},"description":"Gets all the resource types supported by Postman's SCIM API."},"response":[{"id":"db6ba3cc-ac8c-404d-92b7-13675398356d","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/scim/v2/ResourceTypes","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","ResourceTypes"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"[\n    {\n        \"schemas\": [\n            \"urn:ietf:params:scim:schemas:core:2.0:ResourceType\"\n        ],\n        \"id\": \"User\",\n        \"name\": \"User\",\n        \"endpoint\": \"/Users\",\n        \"description\": \"User Account\",\n        \"schema\": \"urn:ietf:params:scim:schemas:core:2.0:User\",\n        \"schemaExtensions\": [\n            {\n                \"schema\": \"urn:ietf:params:scim:schemas:extension:enterprise:2.0:User\",\n                \"required\": true\n            }\n        ]\n    },\n    {\n        \"schemas\": [\n            \"urn:ietf:params:scim:schemas:core:2.0:ResourceType\"\n        ],\n        \"id\": \"Group\",\n        \"name\": \"Group\",\n        \"endpoint\": \"/Groups\",\n        \"description\": \"Group Account\",\n        \"schema\": \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    }\n]"}]},{"name":"Get service provider configuration","id":"f4aa0cc0-4c9f-4834-9317-7676db3413d5","request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/scim/v2/ServiceProviderConfig","protocol":"https","host":["api","getpostman","com"],"path":["scim","v2","ServiceProviderConfig"]},"description":"Gets the Postman SCIM API configuration information. This includes a list of supported operations."},"response":[{"id":"15c69efe-faab-413a-86b3-a583936d9e3d","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/ServiceProviderConfig","protocol":"https","host":["api","getpostman","com"],"path":["ServiceProviderConfig"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig\"\n    ],\n    \"documentationUri\": \"https://learning.postman.com/docs/administration/managing-your-team/configuring-scim\",\n    \"patch\": {\n        \"supported\": true\n    },\n    \"bulk\": {\n        \"supported\": false,\n        \"maxOperations\": 0,\n        \"maxPayloadSize\": 0\n    },\n    \"filter\": {\n        \"supported\": true,\n        \"maxResults\": 100\n    },\n    \"changePassword\": {\n        \"supported\": false\n    },\n    \"sort\": {\n        \"supported\": false\n    },\n    \"etag\": {\n        \"supported\": false\n    },\n    \"authenticationSchemes\": [\n        {\n            \"name\": \"OAuth Bearer Token\",\n            \"description\": \"Authentication scheme using the OAuth Bearer Token Standard\",\n            \"specUri\": \"http://www.rfc-editor.org/info/rfc6750\",\n            \"type\": \"oauthbearertoken\"\n        }\n    ],\n    \"meta\": {\n        \"resourceType\": \"ServiceProviderConfig\",\n        \"location\": \"https://api.getpostman.com/scim/v2/ServiceProviderConfig\"\n    }\n}"}]}],"id":"4c0a499b-84eb-496a-9794-d2958bdc1fba","description":"Postman supports [SCIM](https://en.wikipedia.org/wiki/System_for_Cross-domain_Identity_Management) (System for Cross-domain Identity Management), which allows you to automate the provisioning of your team. You can deploy Postman at scale across your organization and control access to it with your identity provider.\n\n**Note:**\n\n- You **must** be a [Postman Team admin](http://learning.getpostman.com/docs/collaborating-in-postman/roles-and-permissions/#team-roles) to enable SCIM.\n- SCIM provisioning is only available with a Postman **Enterprise** [pricing plan](https://www.postman.com/pricing).\n    \n\n### Enabling SCIM provisioning in Postman\n\nYou must [configure SSO](https://learning.postman.com/docs/administration/sso/admin-sso/) and [enable SCIM](http://learning.getpostman.com/docs/administration/managing-your-team/configuring-scim/#enabling-scim-provisioning) for your Postman team to use these endpoints.\n\n**Important:**\n\nTo use SCIM, you must have only **one** SSO method configured. If you have more than one SSO method enabled, you **cannot** generate an SCIM API key.\n\n### SCIM provisioning limitations\n\nYou can only deactivate users with the SCIM API. You **cannot** permanently delete users with the API.\n\n### Rate limits\n\nFor your organization's team, Postman applies per-minute rate limits across all SCIM API endpoints. This helps ensure that you have the best experience using Postman's SCIM API. The rate limits apply as follows:\n\n- **Write (POST, PUT, PATCH)** — 180 requests per minute.\n- **Read (GET)** — 300 requests per minute.\n    \n\nIf your requests are limited, the API will return an HTTP `429 Too Many Requests` response status code."},{"name":"API Security","item":[{"name":"API definition security validation","id":"379d868e-6ac5-4e27-bd5b-59781774ae1a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"schema\": {\n        \"type\": \"{{schemaType}}\",\n        \"language\": \"{{schemaLanguage}}\",\n        \"schema\": \"{{schemaBody}}\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/security/api-validation","protocol":"https","host":["api","getpostman","com"],"path":["security","api-validation"]},"description":"Performs an analysis on the given definition and returns any issues based on your [predefined rulesets](https://learning.postman.com/docs/api-governance/configurable-rules/configurable-rules-overview/). This endpoint can help you understand the violations' impact and offers solutions to help you resolve any errors. You can include this endpoint to your CI/CD process to automate schema validation.\n\nFor more information, see our [Rule violations in the API definition](https://learning.postman.com/docs/api-governance/api-definition/api-definition-warnings/) documentation.\n\nInclude the following properties in the request body:\n\n- `type` — A **string** value that contains the API definition's type. One of:\n    - `openapi3`\n    - `openapi2`\n- `language` — A **string** value that contains the API definition's language. One of:\n    - `json`\n    - `yaml`\n- `schema` — A **string** value that contains the API definition's contents.\n    \n\n**Note:**\n\n- The maximum allowed size of the definition is 10 MB.\n- You must [import and enable](https://learning.postman.com/docs/api-governance/configurable-rules/configuring-api-security-rules/) [OWASP security rules](https://postman.postman.co/api-governance/libraries/postman_owasp/view) in Postman for this endpoint to return any security rule violations."},"response":[{"id":"414fda3f-4e53-498e-9c88-257b40fd7050","name":"No Warnings Found","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schema\": {\n        \"type\": \"openapi3\",\n        \"language\": \"json\",\n        \"schema\": \"{\\n    \\\"openapi\\\": \\\"3.0.0\\\",\\n    \\\"info\\\": {\\n        \\\"version\\\": \\\"1.0\\\",\\n        \\\"title\\\": \\\"Sample API\\\",\\n        \\\"description\\\": \\\"This is a sample API.\\\"\\n    },\\n    \\\"servers\\\": [\\n        {\\n            \\\"url\\\": \\\"https://example.com\\\"\\n        }\\n    ],\\n    \\\"paths\\\": {\\n        \\\"/user\\\": {\\n            \\\"get\\\": {\\n                \\\"summary\\\": \\\"Details about a user\\\",\\n                \\\"operationId\\\": \\\"listUser\\\",\\n                \\\"parameters\\\": [\\n                    {\\n                        \\\"$ref\\\": \\\"#/components/parameters/userId\\\"\\n                    }\\n                ],\\n                \\\"responses\\\": {\\n                    \\\"200\\\": {\\n                        \\\"description\\\": \\\"Details about a user\\\",\\n                        \\\"content\\\": {\\n                            \\\"application/json\\\": {\\n                                \\\"schema\\\": {\\n                                    \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                                }\\n                            }\\n                        }\\n                    },\\n                    \\\"500\\\": {\\n                        \\\"content\\\": {\\n                            \\\"description\\\": \\\"Internal Server Error\\\",\\n                            \\\"application/problem+json\\\": {\\n                                \\\"schema\\\": {\\n                                    \\\"$ref\\\": \\\"#/components/schemas/500\\\"\\n                                }\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n    },\\n    \\\"components\\\": {\\n        \\\"parameters\\\": {\\n            \\\"userId\\\": {\\n                \\\"name\\\": \\\"id\\\",\\n                \\\"in\\\": \\\"query\\\",\\n                \\\"description\\\": \\\"ID of the user\\\",\\n                \\\"required\\\": true,\\n                \\\"schema\\\": {\\n                    \\\"$ref\\\": \\\"#/components/schemas/userId\\\"\\n                }\\n            }\\n        },\\n        \\\"schemas\\\": {\\n            \\\"User\\\": {\\n                \\\"type\\\": \\\"object\\\",\\n                \\\"required\\\": [\\n                    \\\"id\\\",\\n                    \\\"name\\\"\\n                ],\\n                \\\"properties\\\": {\\n                    \\\"id\\\": {\\n                        \\\"type\\\": \\\"integer\\\",\\n                        \\\"format\\\": \\\"int64\\\"\\n                    },\\n                    \\\"name\\\": {\\n                        \\\"type\\\": \\\"string\\\"\\n                    },\\n                    \\\"tag\\\": {\\n                        \\\"type\\\": \\\"string\\\"\\n                    }\\n                }\\n            },\\n            \\\"userId\\\": {\\n                \\\"type\\\": \\\"integer\\\",\\n                \\\"format\\\": \\\"int32\\\"\\n            },\\n            \\\"500\\\": {\\n                \\\"type\\\": \\\"object\\\",\\n                \\\"properties\\\": {\\n                    \\\"title\\\": {\\n                        \\\"type\\\": \\\"string\\\",\\n                        \\\"example\\\": \\\"Internal Server Error\\\",\\n                        \\\"description\\\": \\\"The generic description for the error's class.\\\"\\n                    },\\n                    \\\"detail\\\": {\\n                        \\\"type\\\": \\\"string\\\",\\n                        \\\"example\\\": \\\"An error occurred.\\\",\\n                        \\\"description\\\": \\\"Details about the error.\\\"\\n                    },\\n                    \\\"status\\\": {\\n                        \\\"type\\\": \\\"number\\\",\\n                        \\\"example\\\": 500,\\n                        \\\"description\\\": \\\"The HTTP status code.\\\"\\n                    }\\n                }\\n            },\\n            \\\"Error\\\": {\\n                \\\"type\\\": \\\"object\\\",\\n                \\\"required\\\": [\\n                    \\\"code\\\",\\n                    \\\"message\\\"\\n                ],\\n                \\\"properties\\\": {\\n                    \\\"code\\\": {\\n                        \\\"type\\\": \\\"integer\\\",\\n                        \\\"format\\\": \\\"int32\\\"\\n                    },\\n                    \\\"message\\\": {\\n                        \\\"type\\\": \\\"string\\\"\\n                    }\\n                }\\n            }\\n        },\\n        \\\"securitySchemes\\\": {\\n            \\\"BasicAuth\\\": {\\n                \\\"type\\\": \\\"http\\\",\\n                \\\"scheme\\\": \\\"\\\"\\n            }\\n        }\\n    },\\n    \\\"security\\\": [\\n        {\\n            \\\"BasicAuth\\\": []\\n        }\\n    ]\\n}\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/security/api-validation","protocol":"https","host":["api","getpostman","com"],"path":["security","api-validation"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Sun, 12 Sep 2021 09:45:42 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Transfer-Encoding","value":"chunked"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"x-frame-options","value":"SAMEORIGIN"},{"key":"Access-Control-Allow-Origin","value":"*"},{"key":"x-srv-trace","value":"v=1;t=df3a673f51ba400d"},{"key":"x-srv-span","value":"v=1;s=5f5d0aa04106e973"},{"key":"X-RateLimit-Limit","value":"60"},{"key":"X-RateLimit-Remaining","value":"58"},{"key":"X-RateLimit-Reset","value":"1631439948"},{"key":"ETag","value":"W/\"164-PBgIpGM9qzmFyny6Y8Rw7l8wfv4\""},{"key":"Vary","value":"Accept-Encoding"},{"key":"Content-Encoding","value":"gzip"}],"cookie":[],"responseTime":null,"body":"{\n    \"warnings\": []\n}"},{"id":"662ee337-c0e3-4dda-90dc-fc740eb04885","name":"Successful Response with Governance Warnings","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schema\": {\n        \"type\": \"openapi3\",\n        \"language\": \"json\",\n        \"schema\": \"{\\n    \\\"openapi\\\": \\\"3.0.0\\\",\\n    \\\"info\\\": {\\n        \\\"version\\\": \\\"1.0\\\",\\n        \\\"title\\\": \\\"Sample API\\\",\\n        \\\"description\\\": \\\"This is a sample API.\\\"\\n    },\\n    \\\"servers\\\": [\\n        {\\n            \\\"url\\\": \\\"https://example.com\\\"\\n        }\\n    ],\\n    \\\"paths\\\": {\\n        \\\"/user\\\": {\\n            \\\"get\\\": {\\n                \\\"summary\\\": \\\"Details about a user\\\",\\n                \\\"operationId\\\": \\\"listUser\\\",\\n                \\\"parameters\\\": [\\n                    {\\n                        \\\"$ref\\\": \\\"#/components/parameters/userId\\\"\\n                    }\\n                ],\\n                \\\"responses\\\": {\\n                    \\\"200\\\": {\\n                        \\\"description\\\": \\\"Details about a user\\\",\\n                        \\\"content\\\": {\\n                            \\\"application/json\\\": {\\n                                \\\"schema\\\": {\\n                                    \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                                }\\n                            }\\n                        }\\n                    },\\n                    \\\"500\\\": {\\n                        \\\"content\\\": {\\n                            \\\"description\\\": \\\"Internal Server Error\\\",\\n                            \\\"application/problem+json\\\": {\\n                                \\\"schema\\\": {\\n                                    \\\"$ref\\\": \\\"#/components/schemas/500\\\"\\n                                }\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n    },\\n    \\\"components\\\": {\\n        \\\"parameters\\\": {\\n            \\\"userId\\\": {\\n                \\\"name\\\": \\\"id\\\",\\n                \\\"in\\\": \\\"query\\\",\\n                \\\"description\\\": \\\"ID of the user\\\",\\n                \\\"required\\\": true,\\n                \\\"schema\\\": {\\n                    \\\"type\\\": \\\"integer\\\",\\n                    \\\"format\\\": \\\"int32\\\"\\n                }\\n            }\\n        },\\n        \\\"schemas\\\": {\\n            \\\"User\\\": {\\n                \\\"type\\\": \\\"object\\\",\\n                \\\"required\\\": [\\n                    \\\"id\\\",\\n                    \\\"name\\\"\\n                ],\\n                \\\"properties\\\": {\\n                    \\\"id\\\": {\\n                        \\\"type\\\": \\\"integer\\\",\\n                        \\\"format\\\": \\\"int64\\\"\\n                    },\\n                    \\\"name\\\": {\\n                        \\\"type\\\": \\\"string\\\"\\n                    },\\n                    \\\"tag\\\": {\\n                        \\\"type\\\": \\\"string\\\"\\n                    }\\n                }\\n            },\\n            \\\"500\\\": {\\n                \\\"type\\\": \\\"object\\\",\\n                \\\"properties\\\": {\\n                    \\\"title\\\": {\\n                        \\\"type\\\": \\\"string\\\",\\n                        \\\"example\\\": \\\"Internal Server Error\\\",\\n                        \\\"description\\\": \\\"The generic description for the error's class.\\\"\\n                    },\\n                    \\\"detail\\\": {\\n                        \\\"type\\\": \\\"string\\\",\\n                        \\\"example\\\": \\\"An error occurred.\\\",\\n                        \\\"description\\\": \\\"Details about the error.\\\"\\n                    },\\n                    \\\"status\\\": {\\n                        \\\"type\\\": \\\"number\\\",\\n                        \\\"example\\\": 500,\\n                        \\\"description\\\": \\\"The HTTP status code.\\\"\\n                    }\\n                }\\n            },\\n            \\\"Error\\\": {\\n                \\\"type\\\": \\\"object\\\",\\n                \\\"required\\\": [\\n                    \\\"code\\\",\\n                    \\\"message\\\"\\n                ],\\n                \\\"properties\\\": {\\n                    \\\"code\\\": {\\n                        \\\"type\\\": \\\"integer\\\",\\n                        \\\"format\\\": \\\"int32\\\"\\n                    },\\n                    \\\"message\\\": {\\n                        \\\"type\\\": \\\"string\\\"\\n                    }\\n                }\\n            }\\n        },\\n        \\\"securitySchemes\\\": {\\n            \\\"BasicAuth\\\": {\\n                \\\"type\\\": \\\"http\\\",\\n                \\\"scheme\\\": \\\"\\\"\\n            }\\n        }\\n    },\\n    \\\"security\\\": [\\n        {\\n            \\\"BasicAuth\\\": []\\n        }\\n    ]\\n}\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/security/api-validation","protocol":"https","host":["api","getpostman","com"],"path":["security","api-validation"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Sun, 12 Sep 2021 09:44:49 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"15"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"x-frame-options","value":"SAMEORIGIN"},{"key":"Access-Control-Allow-Origin","value":"*"},{"key":"x-srv-trace","value":"v=1;t=ae1633478c228dbd"},{"key":"x-srv-span","value":"v=1;s=6da9fbb5ccd53a5e"},{"key":"X-RateLimit-Limit","value":"60"},{"key":"X-RateLimit-Remaining","value":"59"},{"key":"X-RateLimit-Reset","value":"1631439948"},{"key":"ETag","value":"W/\"f-qOnA/C9SOc9LcVJFceEQk4jhluk\""},{"key":"Vary","value":"Accept-Encoding"}],"cookie":[],"responseTime":null,"body":"{\n    \"warnings\": [\n        {\n            \"slug\": \"OPENAPI_SPECTRAL_6_RULE_1027\",\n            \"severity\": \"WARN\",\n            \"message\": \"A schema property should have a $ref property referencing a reusable schema\",\n            \"location\": {\n                \"start\": {\n                    \"line\": 55,\n                    \"column\": 26\n                },\n                \"end\": {\n                    \"line\": 58,\n                    \"column\": 17\n                }\n            },\n            \"dataPath\": [\n                \"components\",\n                \"parameters\",\n                \"userId\",\n                \"schema\"\n            ],\n            \"possibleFixUrl\": \"https://go.pstmn.io/openapi3-security-warnings#a-schema-property-should-reference-a-reusable-schema\",\n            \"category\": {\n                \"name\": \"governance\",\n                \"slug\": \"governance\"\n            },\n            \"vulnerability\": {\n                \"name\": \"A schema property should have a $ref property.\",\n                \"slug\": \"OPENAPI_SPECTRAL_6_schema_reference_reusable\"\n            },\n            \"type\": \"governance\",\n            \"checksum\": \"2fc9df0e8ccbcdb610ab1694651bb68731fc5add4ebb44da0e5f15faf634b035\"\n        }\n    ]\n}"},{"id":"69efe8e6-f5ee-42d2-a62f-487a9eb40485","name":"Successful Response with Security Warnings","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schema\": {\n        \"type\": \"openapi3\",\n        \"language\": \"yaml\",\n        \"schema\": \"openapi: '\\\"3.1.0'\\\"\\ninfo:\\n  version: '\\\"1.0.0'\\\"\\n  title: '\\\"Sample API'\\\"\\n  description: Buy or rent spacecrafts\\n\\npaths:\\n  /spacecrafts/{spacecraftId}:\\n    parameters:\\n      - name: spacecraftId\\n        description: The unique identifier of the spacecraft\\n        in: path\\n        required: true\\n        schema:\\n          $ref: '\\\"#/components/schemas/SpacecraftId'\\\"\\n    get:\\n      summary: Read a spacecraft\\n      responses:\\n        '\\\"200'\\\":\\n          description: The spacecraft corresponding to the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '\\\"#/components/schemas/Spacecraft'\\\"\\n        404:\\n          description: No spacecraft found for the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '\\\"#/components/schemas/Error'\\\"\\n        500:\\n          description: Unexpected error\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '\\\"#/components/schemas/Error'\\\"\\ncomponents:\\n  schemas:\\n    SpacecraftId:\\n      description: The unique identifier of a spacecraft\\n      type: string\\n    Spacecraft:\\n      type: object\\n      required:\\n        - id\\n        - name\\n        - type\\n      properties:\\n        id:\\n          $ref: '\\\"#/components/schemas/SpacecraftId'\\\"\\n        name:\\n          type: string\\n        type:\\n          type: string\\n          enum:\\n            - capsule\\n            - probe\\n            - satellite\\n            - spaceplane\\n            - station\\n        description:\\n          type: string\\n    Error:\\n      type: object\\n      required:\\n        - message\\n      properties:\\n        message:\\n          description: A human readable error message\\n          type: string\\n  securitySchemes:\\n    ApiKey:\\n      type: apiKey\\n      in: header\\n      name: X-Api-Key\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/security/api-validation","protocol":"https","host":["api","getpostman","com"],"path":["security","api-validation"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Sun, 12 Sep 2021 09:44:49 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"15"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"x-frame-options","value":"SAMEORIGIN"},{"key":"Access-Control-Allow-Origin","value":"*"},{"key":"x-srv-trace","value":"v=1;t=ae1633478c228dbd"},{"key":"x-srv-span","value":"v=1;s=6da9fbb5ccd53a5e"},{"key":"X-RateLimit-Limit","value":"60"},{"key":"X-RateLimit-Remaining","value":"59"},{"key":"X-RateLimit-Reset","value":"1631439948"},{"key":"ETag","value":"W/\"f-qOnA/C9SOc9LcVJFceEQk4jhluk\""},{"key":"Vary","value":"Accept-Encoding"}],"cookie":[],"responseTime":null,"body":"{\n    \"warnings\": [\n        {\n            \"slug\": \"POSTMAN_OWASP_GOVERNANCE_RULE_0005\",\n            \"severity\": \"WARN\",\n            \"message\": \"Security field is not defined\",\n            \"location\": {\n                \"start\": {\n                    \"line\": 1,\n                    \"column\": 0\n                },\n                \"end\": {\n                    \"line\": 75,\n                    \"column\": 21\n                }\n            },\n            \"dataPath\": [],\n            \"possibleFixUrl\": \"https://go.pstmn.io/openapi3-security-warnings#security-field-is-not-defined\",\n            \"category\": {\n                \"name\": \"governance\",\n                \"slug\": \"governance\"\n            },\n            \"vulnerability\": {\n                \"name\": \"Security field is not defined\",\n                \"slug\": \"POSTMAN_OWASP_GOVERNANCE_VULNERABILITY_0005\"\n            },\n            \"type\": \"governance\",\n            \"checksum\": \"ff10236473b8bc137ecdb94c282de9375503772beffffd02eb7aa957e1a3e873\"\n        },\n        {\n            \"slug\": \"POSTMAN_OWASP_GOVERNANCE_RULE_0017\",\n            \"severity\": \"WARN\",\n            \"message\": \"Operation does not enforce any security scheme.\",\n            \"location\": {\n                \"start\": {\n                    \"line\": 16,\n                    \"column\": 8\n                },\n                \"end\": {\n                    \"line\": 36,\n                    \"column\": 50\n                }\n            },\n            \"dataPath\": [\n                \"paths\",\n                \"/spacecrafts/{spacecraftId}\",\n                \"get\"\n            ],\n            \"possibleFixUrl\": \"https://go.pstmn.io/openapi3-security-warnings#operation-does-not-enforce-any-security-scheme\",\n            \"category\": {\n                \"name\": \"governance\",\n                \"slug\": \"governance\"\n            },\n            \"vulnerability\": {\n                \"name\": \"Operation does not enforce any security scheme.\",\n                \"slug\": \"POSTMAN_OWASP_GOVERNANCE_VULNERABILITY_0017\"\n            },\n            \"type\": \"governance\",\n            \"checksum\": \"7760d7354c85b925141d708e14ecaef6512ef20a5b89ba8c722d1fc16c1e5b02\"\n        }\n    ]\n}"},{"id":"e3cf97bf-757c-4ec1-9b2c-81d440089816","name":"Invalid Schema","originalRequest":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"schema\": {\n        \"type\": \"openapi1\",\n        \"language\": \"json\",\n        \"schema\": \"{}\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/security/api-validation","protocol":"https","host":["api","getpostman","com"],"path":["security","api-validation"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Sun, 12 Sep 2021 09:39:21 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"125"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"x-frame-options","value":"SAMEORIGIN"},{"key":"Access-Control-Allow-Origin","value":"*"},{"key":"x-srv-trace","value":"v=1;t=583cc629de922167"},{"key":"x-srv-span","value":"v=1;s=510c7b003e356f45"},{"key":"X-RateLimit-Limit","value":"60"},{"key":"X-RateLimit-Remaining","value":"59"},{"key":"X-RateLimit-Reset","value":"1631439621"},{"key":"ETag","value":"W/\"7d-N5PP6H8rafi0mv9sTvRw40PwI84\""},{"key":"Vary","value":"Accept-Encoding"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": {\n            \"name\": \"Invalid schema\",\n            \"reason\": \"Provided schema type is not supported.\"\n        }\n    }\n}"},{"id":"cc74d409-b0c6-4a9b-bd42-336a80b4a03b","name":"Rate Limit Exceeded","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"schema\": {\n        \"type\": \"openapi1\",\n        \"language\": \"json\",\n        \"schema\": \"{}\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://api.getpostman.com/security/api-validation","protocol":"https","host":["api","getpostman","com"],"path":["security","api-validation"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":[{"key":"Date","value":"Sun, 12 Sep 2021 09:39:21 GMT"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"125"},{"key":"Connection","value":"keep-alive"},{"key":"Server","value":"nginx"},{"key":"x-frame-options","value":"SAMEORIGIN"},{"key":"Access-Control-Allow-Origin","value":"*"},{"key":"x-srv-trace","value":"v=1;t=583cc629de922167"},{"key":"x-srv-span","value":"v=1;s=510c7b003e356f45"},{"key":"X-RateLimit-Limit","value":"60"},{"key":"X-RateLimit-Remaining","value":"59"},{"key":"X-RateLimit-Reset","value":"1631439621"},{"key":"ETag","value":"W/\"7d-N5PP6H8rafi0mv9sTvRw40PwI84\""},{"key":"Vary","value":"Accept-Encoding"}],"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]}],"id":"ba1908d1-f0fb-4e36-9394-2fcd3248e9df","description":"The API Security endpoints let you manage the [security of your API](https://learning.postman.com/docs/api-governance/api-definition/api-definition-warnings/). API security includes ensuring you follow security and format warnings and schema validation."},{"name":"Audit Logs","item":[{"name":"Get team audit logs","id":"743380b4-1c90-43f8-b9e8-159d3b64f5b5","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/audit/logs","protocol":"https","host":["api","getpostman","com"],"path":["audit","logs"],"query":[{"key":"since","value":"<string>","description":"Return logs created after the given time, in YYYY-MM-DD format.","disabled":true},{"key":"until","value":"<string>","description":"Return logs created before the given time, in YYYY-MM-DD format.","disabled":true},{"key":"limit","value":"<integer>","description":"The maximum number of audit events to return at once. The maximum value is 300.","disabled":true},{"key":"cursor","value":"<integer>","description":"The cursor to get the next set of results.","disabled":true},{"key":"order_by","value":"<string>","description":"Return the records in ascending (`asc`) or descending (`desc`) order. This value defaults to `desc` order.","disabled":true}]},"description":"Gets a list of your team's generated audit events. For a complete list of all audit events, read our [Utilizing audit logs](https://learning.postman.com/docs/administration/audit-logs/) documentation."},"response":[{"id":"949c1d56-a42c-4bf5-9f56-d0fbddf57280","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/audit/logs","protocol":"https","host":["api","getpostman","com"],"path":["audit","logs"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","description":"","type":"text"}],"cookie":[],"responseTime":null,"body":"{\n    \"trails\": [\n        {\n            \"id\": 12,\n            \"ip\": \"192.0.2.0\",\n            \"userAgent\": \"PostmanRuntime/7.29.0 Postman/5.5.4 ChromeApp\",\n            \"action\": \"user.login_password_success\",\n            \"timestamp\": \"2022-11-10T18:31:32.000Z\",\n            \"message\": \"taylor-lee successfully logged in using the Postman password.\",\n            \"data\": {\n                \"actor\": {\n                    \"name\": \"Taylor Lee\",\n                    \"username\": \"taylor.lee\",\n                    \"email\": \"taylor.lee@example.com\",\n                    \"id\": 12345678,\n                    \"active\": true\n                },\n                \"user\": {\n                    \"name\": \"Taylor Lee\",\n                    \"username\": \"taylor.lee\",\n                    \"email\": \"taylor.lee@example.com\",\n                    \"id\": 12345678\n                },\n                \"team\": {\n                    \"name\": \"Postman-Testing\",\n                    \"id\": 125648\n                }\n            }\n        },\n        {\n            \"id\": 13,\n            \"ip\": \"192.0.2.0\",\n            \"userAgent\": null,\n            \"action\": \"team.scim_add_member\",\n            \"timestamp\": \"2022-11-10T17:19:03.000Z\",\n            \"message\": \"Taylor Lee provisioned user Alex Cruz\",\n            \"data\": {\n                \"actor\": {\n                    \"name\": \"Taylor Lee\",\n                    \"username\": \"taylor.lee\",\n                    \"email\": \"taylor.lee@example.com\",\n                    \"id\": 12345678,\n                    \"active\": true\n                },\n                \"user\": {\n                    \"name\": \"Alex Cruz\",\n                    \"username\": \"alex.cruz\",\n                    \"email\": \"alex.cruz@example.com\",\n                    \"id\": 87654321\n                },\n                \"team\": {\n                    \"name\": \"Test-API\",\n                    \"id\": 1234\n                }\n            }\n        },\n        {\n            \"id\": 14,\n            \"ip\": null,\n            \"userAgent\": null,\n            \"action\": \"user.authaccount.linked\",\n            \"timestamp\": \"2022-11-10T17:19:02.000Z\",\n            \"message\": \"Taylor Lee created account linkage for user.\",\n            \"data\": {\n                \"actor\": {\n                    \"name\": \"Taylor Lee\",\n                    \"username\": \"taylor.lee\",\n                    \"email\": \"taylor.lee@example.com\",\n                    \"id\": 12345678,\n                    \"active\": true\n                },\n                \"user\": {\n                    \"name\": \"Alex Cruz\",\n                    \"username\": \"alex.cruz\",\n                    \"email\": \"alex.cruz@example.com\",\n                    \"id\": 87654321\n                },\n                \"team\": {\n                    \"name\": \"Test-API\",\n                    \"id\": 1234\n                },\n                \"variables\": {\n                    \"auth_type\": \"okta\",\n                    \"auth_uid\": \"8f868a0353fd46cbadfe8a6ab3853b94\",\n                    \"authaccount_uid\": \"f97535389e8447ae8006b2795a2059e1\"\n                }\n            }\n        },\n        {\n            \"id\": 15,\n            \"ip\": \"192.0.2.0\",\n            \"userAgent\": null,\n            \"action\": \"team.create_group\",\n            \"timestamp\": \"2022-11-10T15:54:47.000Z\",\n            \"message\": \"Taylor Lee created group Test-API.\",\n            \"data\": {\n                \"actor\": {\n                    \"name\": \"Taylor Lee\",\n                    \"username\": \"taylor.lee\",\n                    \"email\": \"taylor.lee@example.com\",\n                    \"id\": 12345678,\n                    \"active\": true\n                },\n                \"user\": {\n                    \"name\": \"Taylor Lee\",\n                    \"username\": \"taylor.lee\",\n                    \"email\": \"taylor.lee@example.com\",\n                    \"id\": 12345678\n                },\n                \"team\": {\n                    \"name\": \"API-Testing\",\n                    \"id\": 11\n                },\n                \"variables\": {\n                    \"groupId\": \"1234\",\n                    \"groupName\": \"Test-API\",\n                    \"groupVisibility\": \"team\"\n                }\n            }\n        }\n    ],\n    \"nextCursor\": 95427049\n}"},{"id":"be0ba20c-9fee-48e7-886e-a911c17d7991","name":"Unauthorized","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/audit/logs","protocol":"https","host":["api","getpostman","com"],"path":["audit","logs"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"AuthenticationError\",\n        \"message\": \"Invalid API Key. Every request requires a valid API Key to be sent.\"\n    }\n}"},{"id":"de05fa0c-511e-418d-8700-c8ff10d1a9e0","name":"Forbidden","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/audit/logs","protocol":"https","host":["api","getpostman","com"],"path":["audit","logs"]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": {\n        \"name\": \"ForbiddenRequest\",\n        \"message\": \"You do not have permissions to view team Audit logs\"\n    }\n}"},{"id":"f79802b2-7385-463a-b3dc-b47404ddbef3","name":"Rate Limit Exceeded","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/audit/logs","protocol":"https","host":["api","getpostman","com"],"path":["audit","logs"]}},"status":"Too Many Requests","code":429,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"}]}],"id":"bcb3e65d-b897-477d-a8a0-359e471e7c92","description":"The [Audit Logs](https://learning.postman.com/docs/administration/audit-logs/) endpoints let you monitor and analyze your Professional or Enterprise Postman teams.\n\n**Note:**\n\nThese endpoints are **only** available to Postman **Professional** and **Enterprise** [pricing plans](https://www.postman.com/pricing)."},{"name":"Billing","item":[{"name":"Get accounts","id":"856fdd34-7bcc-49ad-88a3-ab670c46898c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/accounts","protocol":"https","host":["api","getpostman","com"],"path":["accounts"]},"description":"Gets Postman billing account details for the given team."},"response":[{"id":"e1fa848c-2dfb-471f-82f1-7db9272340f5","name":"Successful Response","originalRequest":{"method":"GET","header":[{"key":"Content-Type","value":"application/json"}],"url":{"raw":"https://api.getpostman.com/accounts","protocol":"https","host":["api","getpostman","com"],"path":["accounts"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"id\": 12345678,\n    \"teamId\": 1234,\n    \"state\": \"PAID\",\n    \"slots\": {\n        \"total\": 10,\n        \"unbilled\": 0,\n        \"consumed\": 2,\n        \"available\": 8\n    },\n    \"salesChannel\": \"SELF_SERVE\",\n    \"billingEmail\": \"taylor.lee@example.com\"\n}"},{"id":"b4b6fd9f-8fef-420f-9322-e40dfe50aa21","name":"Not Part of Team","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/accounts","protocol":"https","host":["api","getpostman","com"],"path":["accounts"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"title\": \"Malformed request\",\n    \"status\": 400,\n    \"detail\": \"You must be part of a team\"\n}"},{"id":"aa45e701-8db8-4378-8b38-eae98eb7cf6e","name":"Unauthorized","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/accounts","protocol":"https","host":["api","getpostman","com"],"path":["accounts"]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"}]},{"name":"List account invoices","id":"be5132bd-344a-4f77-91f0-914c4400e33b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/accounts/:accountId/invoices?status=PAID","protocol":"https","host":["api","getpostman","com"],"path":["accounts",":accountId","invoices"],"query":[{"key":"status","value":"PAID","description":"Required. The invoice status. Currently accepts only the `PAID` value."}],"variable":[{"id":"19a8933a-08b6-4a96-9355-6df0172c1e5f","key":"accountId","value":"{{accountId}}","description":"The account's ID."}]},"description":"Gets all invoices for a Postman billing account filtered by the status of the invoice."},"response":[{"id":"86a6065b-1462-4064-8297-73d5e109f6b5","name":"Successful Response","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/accounts/:accountId/invoices?status=PAID","protocol":"https","host":["api","getpostman","com"],"path":["accounts",":accountId","invoices"],"query":[{"key":"status","value":"PAID"}],"variable":[{"key":"accountId","value":"123456"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"data\": [\n        {\n            \"id\": \"inv_7UDSYBJPGQU93N7M\",\n            \"status\": \"PAID\",\n            \"issuedAt\": \"2023-10-12\",\n            \"totalAmount\": {\n                \"value\": 440,\n                \"currency\": \"USD\"\n            },\n            \"links\": {\n                \"web\": {\n                    \"href\": \"https://pay.postman.com/invoices/pay?invoice_public_id=inv_7UDSYBJPGQU93N7M\"\n                }\n            }\n        }\n    ]\n}"},{"id":"138dca46-670f-4a7c-82fb-9e20b554a806","name":"No Invoices","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/accounts/:accountId/invoices?status=PAID","protocol":"https","host":["api","getpostman","com"],"path":["accounts",":accountId","invoices"],"query":[{"key":"status","value":"PAID"}],"variable":[{"key":"accountId","value":"123456"}]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"data\": []\n}"},{"id":"5002ae88-416a-4430-836c-e5e9fd777974","name":"Bad Request","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/accounts/:accountId/invoices","protocol":"https","host":["api","getpostman","com"],"path":["accounts",":accountId","invoices"],"query":[{"key":"status","value":"PAID","disabled":true}],"variable":[{"key":"accountId","value":"123456"}]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"title\": \"Malformed request\",\n    \"status\": 400,\n    \"detail\": \"Please provide a valid status to fetch invoices\"\n}"},{"id":"27182efa-0857-4831-95cc-1d75fc3c481e","name":"Unauthorized","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/accounts/:accountId/invoices?status=PAID","protocol":"https","host":["api","getpostman","com"],"path":["accounts",":accountId","invoices"],"query":[{"key":"status","value":"PAID"}],"variable":[{"key":"accountId","value":"123456"}]}},"status":"Unauthorized","code":401,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"},{"id":"28d0491a-7a78-4505-adec-ce2f51f826dc","name":"Forbidden","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/accounts/:accountId/invoices?status=PAID","protocol":"https","host":["api","getpostman","com"],"path":["accounts",":accountId","invoices"],"query":[{"key":"status","value":"PAID"}],"variable":[{"key":"accountId","value":"123456"}]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"status\": 403,\n    \"detail\": \"You are not authorized to perform this action\"\n}"},{"id":"9dd81bd7-bf6b-4533-b05f-316a197a35cd","name":"Invalid Account ID","originalRequest":{"method":"GET","header":[],"url":{"raw":"https://api.getpostman.com/accounts/:accountId/invoices","protocol":"https","host":["api","getpostman","com"],"path":["accounts",":accountId","invoices"],"query":[{"key":"status","value":"PAID","disabled":true}],"variable":[{"key":"accountId","value":"1"}]}},"status":"Forbidden","code":403,"_postman_previewlanguage":"json","header":null,"cookie":[],"responseTime":null,"body":"{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"status\": 403,\n    \"detail\": \"Could not fetch invoices for the team.\"\n}"}]}],"id":"a68f369d-fed0-4600-8bd7-284cc34af373","description":"The Billing endpoints let you manage your Postman billing account, such as your team's plan and [billing](https://learning.postman.com/docs/billing/billing/) information."}],"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{postman-api-key}}","type":"string"},{"key":"key","value":"X-API-Key","type":"string"}]},"event":[{"listen":"prerequest","script":{"id":"7d02743f-5925-4b7a-b3ad-7a7314e84e0a","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"ebdfefce-eb5c-450a-a0c3-f6683d62e6f8","type":"text/javascript","exec":[""]}}],"variable":[{"id":"26788b76-97de-4294-86a6-cdd4e96c3592","key":"postman-api-key","value":"","type":"string"}]}